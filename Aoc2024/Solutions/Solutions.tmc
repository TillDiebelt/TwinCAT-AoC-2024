<?xml version="1.0" encoding="utf-8"?><TcModuleClass xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance2" xsi:noNamespaceSchemaLocation="http://www.beckhoff.com/schemas/2009/05/TcModuleClass" Hash="{F8884361-E2F6-FB4F-EAAC-E454A47910A7}" GeneratedBy="TwinCAT XAE Plc"><DataTypes><DataType><Name GUID="{6F5942ED-BFA1-497D-8225-23C6DAAD0A09}" TcBaseType="true">ST_LibVersion</Name><BitSize>288</BitSize><SubItem><Name>iMajor</Name><Type GUID="{18071995-0000-0000-0000-000000000005}">UINT</Type><BitSize>16</BitSize><BitOffs>0</BitOffs></SubItem><SubItem><Name>iMinor</Name><Type GUID="{18071995-0000-0000-0000-000000000005}">UINT</Type><BitSize>16</BitSize><BitOffs>16</BitOffs></SubItem><SubItem><Name>iBuild</Name><Type GUID="{18071995-0000-0000-0000-000000000005}">UINT</Type><BitSize>16</BitSize><BitOffs>32</BitOffs></SubItem><SubItem><Name>iRevision</Name><Type GUID="{18071995-0000-0000-0000-000000000005}">UINT</Type><BitSize>16</BitSize><BitOffs>48</BitOffs></SubItem><SubItem><Name>nFlags</Name><Type GUID="{18071995-0000-0000-0000-000000000007}">DWORD</Type><BitSize>32</BitSize><BitOffs>64</BitOffs></SubItem><SubItem><Name>sVersion</Name><Type GUID="{18071995-0000-0000-0000-000100000017}">STRING(23)</Type><BitSize>192</BitSize><BitOffs>96</BitOffs></SubItem></DataType><DataType><Name Namespace="CNM_ReturnTypes">CommonSteps</Name><Comment><![CDATA[

short summary
=================
CommonSteps is a data type for default steps,
the data type is marked with the keyword CONSTANT,
because then it's possible to use it for cases in
a ``CASE OF`` statement, but the data type is not a
constant, this is just a exploid to work with 
variables in ``CASE OF`` statements.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

type members
======================

]]></Comment><BitSize>192</BitSize><SubItem><Name>ABORT</Name><Type>DINT</Type><Comment><![CDATA[ step for: state machine execution was aborted ]]></Comment><BitSize>32</BitSize><BitOffs>0</BitOffs><Default><Value>-2147483648</Value></Default><Properties><Property><Name>suppress_warning_0</Name><Value>C0196</Value></Property></Properties></SubItem><SubItem><Name>ERROR</Name><Type>DINT</Type><Comment><![CDATA[ step for: state machine is in error ]]></Comment><BitSize>32</BitSize><BitOffs>32</BitOffs><Default><Value>-1</Value></Default></SubItem><SubItem><Name>IDLE</Name><Type>DINT</Type><Comment><![CDATA[ step for: statmachine is sleeping/idling ]]></Comment><BitSize>32</BitSize><BitOffs>64</BitOffs><Default><Value>0</Value></Default></SubItem><SubItem><Name>INIT</Name><Type>DINT</Type><Comment><![CDATA[ first execution step of state machine ]]></Comment><BitSize>32</BitSize><BitOffs>96</BitOffs><Default><Value>1</Value></Default></SubItem><SubItem><Name>PAUSE</Name><Type>DINT</Type><Comment><![CDATA[ step for: state machine can be paused ]]></Comment><BitSize>32</BitSize><BitOffs>128</BitOffs><Default><Value>2147483646</Value></Default></SubItem><SubItem><Name>SUCCESS</Name><Type>DINT</Type><Comment><![CDATA[ execution of state machine was successful ]]></Comment><BitSize>32</BitSize><BitOffs>160</BitOffs><Default><Value>2147483647</Value></Default></SubItem></DataType><DataType><Name Namespace="Tc2_System">E_WATCHDOG_TIME_CONFIG</Name><BitSize>16</BitSize><BaseType>INT</BaseType><EnumInfo><Text>eWATCHDOG_TIME_DISABLED</Text><Enum>0</Enum></EnumInfo><EnumInfo><Text>eWATCHDOG_TIME_SECONDS</Text><Enum>1</Enum></EnumInfo><EnumInfo><Text>eWATCHDOG_TIME_MINUTES</Text><Enum>2</Enum></EnumInfo></DataType><DataType><Name Namespace="CNM_UnicodeUtilities">UnicodeCodePoint</Name><Comment><![CDATA[

short summary
=================
CodePoint is a type alias for UNICODE code point representation

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><BitSize>32</BitSize><BaseType>DWORD</BaseType></DataType><DataType><Name>IQueryInterface</Name><BitSize>64</BitSize><ExtendsType GUID="{18071995-0000-0000-0000-000000000018}">PVOID</ExtendsType><Method><Name>__GetInterfacePointer</Name><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Parameter><Name>pRef</Name><Type PointerTo="2">DWORD</Type><BitSize>64</BitSize></Parameter></Method><Method><Name RpcEnable="plc" VTableIndex="2">__GetInterfaceReference</Name><ReturnType RpcDirection="out">BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Parameter><Name>nInterfaceId</Name><Type RpcDirection="in">DINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>pRef</Name><Type PointerTo="2" RpcDirection="in">DWORD</Type><BitSize>64</BitSize></Parameter></Method></DataType><DataType><Name Namespace="Tc2_System">T_MaxString</Name><Comment><![CDATA[ TwinCAT PLC string of max. length of 255 bytes + 1 byte null delimiter. ]]></Comment><BitSize>2048</BitSize><BaseType>STRING(255)</BaseType></DataType><DataType><Name Namespace="CNM_AbstractObject">ClassName</Name><Comment><![CDATA[

short summary
=================
ClassName is an alias of ``Tc2_System.T_MaxString``
It's used as return of the property :ref:`IObject.className` 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><BitSize>2048</BitSize><BaseType Namespace="Tc2_System">T_MaxString</BaseType></DataType><DataType><Name Namespace="CNM_AbstractObject">Hashcode</Name><Comment><![CDATA[

short summary
=================
ObjectName is an alias of ``ULINT``
It's used as return of the property :ref:`IObject.hashcode`

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><BitSize>64</BitSize><BaseType>ULINT</BaseType></DataType><DataType><Name Namespace="CNM_AbstractObject">ObjectName</Name><Comment><![CDATA[

short summary
=================
ObjectName is an alias of ``Tc2_System.T_MaxString``
It's used as return of the property :ref:`IObject.name` 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><BitSize>2048</BitSize><BaseType Namespace="Tc2_System">T_MaxString</BaseType></DataType><DataType><Name Namespace="CNM_AbstractObject">IObject</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>__getaddress</Name><Comment><![CDATA[

short summary
=================
This property returns the address of the concrete object, 
which is useful to work with querypointer in a simplified way.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType>LWORD</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getclassName</Name><Comment><![CDATA[

short summary
=================
This abstract property returns the class name of the concrete object, 
which is useful for logging/debugging purpose or to check the class name
for ``__DELETE`` in factories (sometimes it's necessary to do more 
than just to free the memory).

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">ClassName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__gethashcode</Name><Comment><![CDATA[

short summary
=================
This property returns the unique hash code of the object. 
The hash code is needed to identify objects that are only addressed via an interface,
e.g. when sorting or when saving between objects 
so that the same object does not occur more than once.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">Hashcode</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getisObjectAlive</Name><Comment><![CDATA[

short summary
=================
This property returns true if the object is valid.
Used for internal reasons inside the isObjectValid method to detect deleted objects as not valid.
Should not be used for any other reason!

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Properties><Property><Name>property</Name></Property><Property><Name>hide</Name></Property></Properties></Method><Method><Name>__getname</Name><Comment><![CDATA[

short summary
=================
This property returns the full qualified name of the concrete object, 
which is useful for logging.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">ObjectName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>isEqual</Name><Comment><![CDATA[

short summary
=================
This method is used to check if two objects are equal. 
If the hash code of the objects is identical, then the foreign object is the same.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return:``FALSE``: foreign object and object are not the same,
``TRUE``: foreign object and object are not the same

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Parameter><Name>object</Name><Comment><![CDATA[ foreign objet to check]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>isObjectNull</Name><Comment><![CDATA[

short summary
=================
This method is a helper method to check if an object is NULL.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return:``FALSE``: foreign object is not NULL, ``TRUE``: foreign object is NULL

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Parameter><Name>object</Name><Comment><![CDATA[ foreign objet to check]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>isObjectValid</Name><Comment><![CDATA[

short summary
=================
This method is a helper method to check if an object is valid (not NULL).

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return:``FALSE``: foreign object is not valid, ``TRUE``: foreign object is valid

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Parameter><Name>object</Name><Comment><![CDATA[ foreign objet to check]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter></Method><Properties><Property><Name>TcPlcInterfaceId</Name><Value>344</Value></Property></Properties></DataType><DataType><Name>ExceptionCode</Name><BitSize>32</BitSize><BaseType>UDINT</BaseType><EnumInfo><Text>RTSEXCPT_UNKNOWN</Text><Enum>4294967295</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_NOEXCEPTION</Text><Enum>0</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_WATCHDOG</Text><Enum>16</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_HARDWAREWATCHDOG</Text><Enum>17</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_IO_CONFIG_ERROR</Text><Enum>18</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_PROGRAMCHECKSUM</Text><Enum>19</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_FIELDBUS_ERROR</Text><Enum>20</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_IOUPDATE_ERROR</Text><Enum>21</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_CYCLE_TIME_EXCEED</Text><Enum>22</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_ONLCHANGE_PROGRAM_EXCEEDED</Text><Enum>23</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_UNRESOLVED_EXTREFS</Text><Enum>24</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_DOWNLOAD_REJECTED</Text><Enum>25</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_BOOTPROJECT_REJECTED_DUE_RETAIN_ERROR</Text><Enum>26</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_LOADBOOTPROJECT_FAILED</Text><Enum>27</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_OUT_OF_MEMORY</Text><Enum>28</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_RETAIN_MEMORY_ERROR</Text><Enum>29</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_BOOTPROJECT_CRASH</Text><Enum>30</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_BOOTPROJECTTARGETMISMATCH</Text><Enum>33</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_SCHEDULEERROR</Text><Enum>34</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_FILE_CHECKSUM_ERR</Text><Enum>35</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_RETAIN_IDENTITY_MISMATCH</Text><Enum>36</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_IEC_TASK_CONFIG_ERROR</Text><Enum>37</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_APP_TARGET_MISMATCH</Text><Enum>38</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_ILLEGAL_INSTRUCTION</Text><Enum>80</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_ACCESS_VIOLATION</Text><Enum>81</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_PRIV_INSTRUCTION</Text><Enum>82</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_IN_PAGE_ERROR</Text><Enum>83</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_STACK_OVERFLOW</Text><Enum>84</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_INVALID_DISPOSITION</Text><Enum>85</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_INVALID_HANDLE</Text><Enum>86</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_GUARD_PAGE</Text><Enum>87</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_DOUBLE_FAULT</Text><Enum>88</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_INVALID_OPCODE</Text><Enum>89</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_MISALIGNMENT</Text><Enum>256</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_ARRAYBOUNDS</Text><Enum>257</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_DIVIDEBYZERO</Text><Enum>258</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_OVERFLOW</Text><Enum>259</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_NONCONTINUABLE</Text><Enum>260</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_PROCESSORLOAD_WATCHDOG</Text><Enum>261</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_FPU_ERROR</Text><Enum>336</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_FPU_DENORMAL_OPERAND</Text><Enum>337</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_FPU_DIVIDEBYZERO</Text><Enum>338</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_FPU_INEXACT_RESULT</Text><Enum>339</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_FPU_INVALID_OPERATION</Text><Enum>340</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_FPU_OVERFLOW</Text><Enum>341</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_FPU_STACK_CHECK</Text><Enum>342</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_FPU_UNDERFLOW</Text><Enum>343</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_VENDOR_EXCEPTION_BASE</Text><Enum>8192</Enum></EnumInfo><EnumInfo><Text>RTSEXCPT_USER_EXCEPTION_BASE</Text><Enum>65536</Enum></EnumInfo><Properties><Property><Name>m4export_hide</Name></Property><Property><Name>qualified_only</Name></Property><Property><Name>to_string</Name></Property><Property><Name>to_string_function</Name><Value>__TO_STRING__380</Value></Property><Property><Name>to_wstring_function</Name><Value>__TO_WSTRING__380</Value></Property><Property><Name>generate_implicit_init_function</Name></Property></Properties></DataType><DataType><Name Namespace="CNM_ReturnTypes">CloneResult</Name><Comment><![CDATA[

short summary
=================
This return type serves as a return for clone methods.
Unfortunately this return is necessary 
because TwinCAT 3 does not support throwing exceptions until now. 

Type of the enumartion is ``INT``

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

enumeration values
======================

]]></Comment><BitSize>16</BitSize><BaseType>INT</BaseType><EnumInfo><Text>FAILED</Text><Enum>-1</Enum><Comment><![CDATA[ it failed to clone the object ]]></Comment></EnumInfo><EnumInfo><Text>SUCCESS</Text><Enum>0</Enum><Comment><![CDATA[ cloning was successfull ]]></Comment></EnumInfo><EnumInfo><Text>CLONE_IS_NOT_SUPPORTED</Text><Enum>3</Enum><Comment><![CDATA[ object does not support cloning ]]></Comment></EnumInfo><Properties><Property><Name>qualified_only</Name></Property><Property><Name>to_string</Name></Property><Property><Name>to_string_function</Name><Value>__TO_STRING__373</Value></Property><Property><Name>to_wstring_function</Name><Value>__TO_WSTRING__373</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_ReturnTypes">ComparationResult</Name><Comment><![CDATA[

short summary
=================
ComparationResult is an enumeration to unify sorting orders
It's used as return for the methods

Type of the enumartion is ``INT``

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

enumeration values
======================

]]></Comment><BitSize>16</BitSize><BaseType>INT</BaseType><EnumInfo><Text>SMALLER</Text><Enum>-1</Enum><Comment><![CDATA[ procedes in order]]></Comment></EnumInfo><EnumInfo><Text>EQUAL</Text><Enum>0</Enum><Comment><![CDATA[ same position in order ]]></Comment></EnumInfo><EnumInfo><Text>GREATER</Text><Enum>1</Enum><Comment><![CDATA[ after in order ]]></Comment></EnumInfo><Properties><Property><Name>qualified_only</Name></Property></Properties></DataType><DataType><Name Namespace="CNM_AbstractObject">Object</Name><Comment><![CDATA[

short summary
=================
This is an abstract class that implements the interface :ref:`IObject`. 
Every cinnamon class must implement the interface :ref:`IObject`.
To simplify this there is this abstract class to simply derive from it.
This makes it possible to keep different classes very general, such as lists. 

.. attention:: 
	**If another implementation for** ``IObject`` **is used, only the other implementation must be used**,
	otherwise one runs the risk that the hash code is no longer unique. 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

methods and properties
=========================

]]></Comment><BitSize>2432</BitSize><Implements Namespace="CNM_AbstractObject">IObject</Implements><SubItem><Name>myHashcode</Name><Type Namespace="CNM_AbstractObject">Hashcode</Type><Comment><![CDATA[unique hashcode of the object instance]]></Comment><BitSize>64</BitSize><BitOffs>256</BitOffs></SubItem><SubItem><Name>objectName</Name><Type Namespace="CNM_AbstractObject">ObjectName</Type><Comment><![CDATA[fully qualified name of the object instance]]></Comment><BitSize>2048</BitSize><BitOffs>328</BitOffs><Properties><Property><Name>instance-path</Name></Property><Property><Name>no-init</Name></Property></Properties></SubItem><Method><Name>isObjectValid</Name><Comment><![CDATA[

short summary
=================
This method is a helper method to check if an object is valid.

.. attention:: 
	It checks the address of the reference for plausibility,
	if it looks safe it __TRY's to access ``isObjectAlive`` property.
	This is done to avoid the catch case which is 100 times slower.
	Will return FALSE for objects which were __DELETE'd.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return:``FALSE``: foreign object is not valid, ``TRUE``: foreign object is valid

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Parameter><Name>object</Name><Comment><![CDATA[ foreign objet to check]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Local><Name>objectAddress</Name><Type PointerTo="1">LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>displaymode</Name><Value>hex</Value></Property></Properties></Local><Local><Name>testObject</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Local><Name>exc</Name><Type>ExceptionCode</Type><BitSize>32</BitSize></Local><Local><Name>stackAddress</Name><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>displaymode</Name><Value>hex</Value></Property></Properties></Local></Method><Method><Name>__getisObjectAlive</Name><Comment><![CDATA[

short summary
=================
This property returns true if the object is valid.
Used for internal reasons inside the isObjectValid method to detect deleted objects as not valid.
Should not be used for any other reason!

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Local><Name>isObjectAlive</Name><Type>BOOL</Type><BitSize>8</BitSize></Local><Properties><Property><Name>property</Name></Property><Property><Name>hide</Name></Property></Properties></Method><Method><Name>__getaddress</Name><Comment><![CDATA[

short summary
=================
This property returns the address of the concrete object, 
which is from time to time useful.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType>LWORD</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>address</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__gethashcode</Name><Comment><![CDATA[

short summary
=================
This property returns the unique hash code of the object. 
The hash code is needed to identify objects that are only addressed via an interface,
e.g. when sorting or when saving between objects 
so that the same object does not occur more than once.

.. attention:: 
	For derivations: **This property must not be overwritten**

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">Hashcode</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>hashcode</Name><Type Namespace="CNM_AbstractObject">Hashcode</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>destruct</Name><Comment><![CDATA[

short summary
=================
This method is a self-destruction if the object was created dynamically.
If the object is a container class, the container content is not destroyed with it,
for that there is the method :ref:`ICloneable.deepDestruct`
The output NULL is a constant which is always NULL,
this allows a semi-pleasant notation: ``foo.destruct(NULL => foo);``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

InOut:
	+-----------------+------+---------+------+------------------------------------------+
	| Scope           | Name | Type    | Init | Comment                                  |
	+=================+======+=========+======+==========================================+
	| Output CONSTANT | NULL | __XWORD | 0    | ``NULL`` is a constant which is always 0 |
	+-----------------+------+---------+------+------------------------------------------+

]]></Comment><Parameter><Name>NULL</Name><Comment><![CDATA[ NULL is a constant which is always 0 ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property><Property><Name>suppress_warning_0</Name><Value>C0533</Value></Property></Properties></Parameter><Local><Name>DYNAMIC_INSTANCE_NOT_FOUND</Name><Type>INT</Type><BitSize>16</BitSize></Local><Local><Name>tmp</Name><Comment><![CDATA[ __DELETE(THIS) is not allowed anymore in Tc 4026.
       tmp is just a helper pointer that points to this instance ]]></Comment><Type Namespace="CNM_AbstractObject" PointerTo="1">Object</Type><BitSize>64</BitSize></Local></Method><Method><Name>isObjectNull</Name><Comment><![CDATA[

short summary
=================
This method is a helper method to check if an object is NULL.

.. attention:: 
	It calls :ref:`Object.isObjectValid`
	For details please check :ref:`Object.isObjectValid` 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return:``FALSE``: foreign object is not NULL, ``TRUE``: foreign object is NULL

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Parameter><Name>object</Name><Comment><![CDATA[ foreign objet to check]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>clone</Name><Comment><![CDATA[

short summary
=================
This method is used to create a new instance
of the object which has the same internal state as the object.
If the object is a container class, the references to the content objects
are not cloned for this there is the method :ref:`ICloneable.deepClone`.

If an object does not support cloning the return value is
``CNM_ReturnTypes.CloneResult.CLONE_IS_NOT_SUPPORTED``.

If there is not enough memory or the cloning fails because the
attribute enable dynamic creation was forgotten the return value is 
``CNM_ReturnTypes.CloneResult.FAILED``.

Only if the return value is ``CNM_ReturnTypes.CloneResult.SUCCESS``
the output ``clonedObject`` points to the new object
otherwise ``clonedObject`` is NULL.  

.. attention:: 
	For derivations: **If a derived class needs ``clone`` this method must be overwritten.**
	and don't forget the attribute ``{attribute 'enable_dynamic_creation'}``  

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return:``CNM_ReturnTypes.CloneResult.SUCCESS``: new object clone was created,
``CNM_ReturnTypes.CloneResult.FAILED``: object clone failed
``CNM_ReturnTypes.CloneResult.CLONE_IS_NOT_SUPPORTED``: object does not support cloning

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">CloneResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>clonedObject</Name><Comment><![CDATA[ new object instance or NULL if somthing went wrong ]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter></Method><Method><Name>deepDestruct</Name><Comment><![CDATA[

short summary
=================
This method is a self-destruction if the object was created dynamically.
If the object is a container class, the container content is destroyed with it.
The output NULL is a constant which is always NULL,
this allows a semi-pleasant notation: ``foo.deepDestruct(NULL => foo);``.

.. attention:: 
	For derivations: **If a derived class needs ``deepDestruct`` this method must be overwritten.**
	otherwise it just calls :ref:`Object.destruct`. 


.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

InOut:
	+-----------------+------+---------+------+------------------------------------------+
	| Scope           | Name | Type    | Init | Comment                                  |
	+=================+======+=========+======+==========================================+
	| Output CONSTANT | NULL | __XWORD | 0    | ``NULL`` is a constant which is always 0 |
	+-----------------+------+---------+------+------------------------------------------+

]]></Comment><Parameter><Name>NULL</Name><Comment><![CDATA[ NULL is a constant which is always 0 ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property><Property><Name>suppress_warning_0</Name><Value>C0533</Value></Property></Properties></Parameter></Method><Method><Name>compareTo</Name><Comment><![CDATA[

short summary
=================
This method compares a foreign object with the own one, this is needed for sort orders.
The abstract class evaluates every object that is NULL as greater, and all other objects as equal. 

.. attention:: 
	For derivations: **If a derived class needs sorting this method must be overwritten.** 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return:``SMALLER``: ``THIS`` precedes in order,
``EQUAL``: ``THIS`` and ``object`` at the same position in order,
``GREATER``: ``THIS`` is after in order.
Checkout the library CNM_ReturnTypes.

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">ComparationResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>object</Name><Comment><![CDATA[ foreign objet to compare]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>__getname</Name><Comment><![CDATA[

short summary
=================
This property returns the full qualified name of the concrete object, 
which is useful for logging.

.. attention:: 
	For derivations: This property should be not overwritten

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">ObjectName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Local><Name>name</Name><Type Namespace="CNM_AbstractObject">ObjectName</Type><BitSize>2048</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>isEqual</Name><Comment><![CDATA[

short summary
=================
This method is used to check if two objects are equal. 
If the hash code of the objects is identical, then the foreign object is the same.

.. attention:: 
	For derivations: **This method must not be overwritten** 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return:``FALSE``: foreign object and object are not the same,
``TRUE``: foreign object and object are not the same

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Parameter><Name>object</Name><Comment><![CDATA[ foreign objet to check]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>deepClone</Name><Comment><![CDATA[

short summary
=================
This method is used to create a new instance
of the object which has the same internal state as the object.
If the object is a container class, the references to the content objects
are cloned too.

If an object does not support cloning the return value is
``CNM_ReturnTypes.CloneResult.CLONE_IS_NOT_SUPPORTED``.

If there is not enough memory or the cloning fails because the
attribute enable dynamic creation was forgotten the return value is 
``CNM_ReturnTypes.CloneResult.FAILED``.
If something goes wrong, then this method must clean up everything
that has been cloned and free the memory again.
**The deepClone either works completely, or not at all**

Only if the return value is ``CNM_ReturnTypes.CloneResult.SUCCESS``
the output ``clonedObject`` points to the new object
otherwise ``clonedObject`` is NULL.  

.. attention:: 
	For derivations: **If a derived class needs ``deepClone`` this method must be overwritten.**
	and don't forget the attribute ``{attribute 'enable_dynamic_creation'}``, even for container content 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return:``CNM_ReturnTypes.CloneResult.SUCCESS``: new object clone was created,
``CNM_ReturnTypes.CloneResult.FAILED``: object clone failed
``CNM_ReturnTypes.CloneResult.CLONE_IS_NOT_SUPPORTED``: object does not support deep cloning

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">CloneResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>clonedObject</Name><Comment><![CDATA[ new object instance or NULL if somthing went wrong ]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter></Method><Method><Name>__getclassName</Name><Comment><![CDATA[

short summary
=================
This abstract property returns the class name of the concrete object, 
which is useful for debugging purpose or to check the class name for 
``__DELETE`` in factories (sometimes it's necessary to do more 
than just to free the memory).

.. attention:: 
	For derivations: **It is necessary that this property is overridden by the concrete class**

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">ClassName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Local><Name>className</Name><Type Namespace="CNM_AbstractObject">ClassName</Type><BitSize>2048</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property><Property><Name>reflection</Name></Property></Properties></DataType><DataType><Name Namespace="CNM_CollectionInterfaces">ICollectionFactory</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_AbstractObject">IObject</ExtendsType><Properties><Property><Name>TcPlcInterfaceId</Name><Value>383</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_CollectionInterfaces">IObjectWrapper</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_AbstractObject">IObject</ExtendsType><Method><Name>__getobject</Name><Comment><![CDATA[

short summary
=================
This property returns CNM_AbstractObject.IObject that represents the data of this Wrapper.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">IObject</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setobject</Name><Comment><![CDATA[

short summary
=================
This property returns CNM_AbstractObject.IObject that represents the data of this Wrapper.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Parameter><Name>object</Name><Comment><![CDATA[

short summary
=================
This property returns CNM_AbstractObject.IObject that represents the data of this Wrapper.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>TcPlcInterfaceId</Name><Value>522</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_CollectionInterfaces">IBalancedTreeNode</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_CollectionInterfaces">IObjectWrapper</ExtendsType><Properties><Property><Name>TcPlcInterfaceId</Name><Value>592</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_CollectionInterfaces">IBalancedTreeNode</ExtendsType></DataType><DataType><Name Namespace="CNM_CollectionInterfaces">IBinaryTreeNode</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_CollectionInterfaces">IObjectWrapper</ExtendsType><Method><Name>__getleftChild</Name><Comment><![CDATA[

short summary
=================
the left child

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">IBinaryTreeNode</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getrightChild</Name><Comment><![CDATA[

short summary
=================
the right child

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">IBinaryTreeNode</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setleftChild</Name><Comment><![CDATA[

short summary
=================
the left child

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Parameter><Name>leftChild</Name><Comment><![CDATA[

short summary
=================
the left child

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Type Namespace="CNM_CollectionInterfaces">IBinaryTreeNode</Type><BitSize>64</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setrightChild</Name><Comment><![CDATA[

short summary
=================
the right child

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Parameter><Name>rightChild</Name><Comment><![CDATA[

short summary
=================
the right child

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Type Namespace="CNM_CollectionInterfaces">IBinaryTreeNode</Type><BitSize>64</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method></DataType><DataType><Name Namespace="CNM_CollectionInterfaces">TreeBalance</Name><Comment><![CDATA[

short summary
=================
Tree_Balance is a representation for the diffrent states of a balance
It is used in :ref:`IBalancedTree`

Type of the enumeration is ``SINT``

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

enumeration values
======================

]]></Comment><BitSize>16</BitSize><BaseType>INT</BaseType><EnumInfo><Text>LEFTTODEEP</Text><Enum>-2</Enum><Comment><![CDATA[Tree is out of balance because left subtree is to deep]]></Comment></EnumInfo><EnumInfo><Text>LEFTDEEPER</Text><Enum>-1</Enum><Comment><![CDATA[Tree is balanced but left subtree is deeper than right subtree]]></Comment></EnumInfo><EnumInfo><Text>EQUALDEEP</Text><Enum>0</Enum><Comment><![CDATA[Tree is balanced both subtrees are same height]]></Comment></EnumInfo><EnumInfo><Text>RIGHTDEEPER</Text><Enum>1</Enum><Comment><![CDATA[Tree is balanced but right subtree is deeper than left subtree]]></Comment></EnumInfo><EnumInfo><Text>RIGHTTODEEP</Text><Enum>2</Enum><Comment><![CDATA[Tree is out of balance because right subtree is to deep]]></Comment></EnumInfo><Properties><Property><Name>qualified_only</Name></Property><Property><Name>strict</Name></Property></Properties></DataType><DataType><Name Namespace="CNM_Collections">BalancedBinarySearchTreeNode</Name><Comment><![CDATA[

short summary
=================
Class for a balanced, binary, search tree node

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

methods and properties
=========================

]]></Comment><BitSize>3520</BitSize><ExtendsType Namespace="CNM_AbstractObject">Object</ExtendsType><Implements Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</Implements><SubItem><Name>nodevalue</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize><BitOffs>3264</BitOffs></SubItem><SubItem><Name>left</Name><Type Namespace="CNM_CollectionInterfaces">IBinaryTreeNode</Type><BitSize>64</BitSize><BitOffs>3328</BitOffs></SubItem><SubItem><Name>right</Name><Type Namespace="CNM_CollectionInterfaces">IBinaryTreeNode</Type><BitSize>64</BitSize><BitOffs>3392</BitOffs></SubItem><SubItem><Name>nodebalance</Name><Type Namespace="CNM_CollectionInterfaces">TreeBalance</Type><BitSize>16</BitSize><BitOffs>3456</BitOffs></SubItem><Method><Name>__getrightChild</Name><Comment><![CDATA[

short summary
=================
This property points to the right child of an binarytreeenode

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">IBinaryTreeNode</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>rightChild</Name><Type Namespace="CNM_CollectionInterfaces">IBinaryTreeNode</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>clone</Name><Comment><![CDATA[

short summary
=================
This method is used to create a new instance
of the object which has the same internal state as the object.
If the object is a container class, the references to the content objects
are not cloned for this there is the method ``ICloneable.deepClone``.

If an object does not support cloning the return value is
``CNM_ReturnTypes.CloneResult.CLONE_IS_NOT_SUPPORTED``.

If there is not enough memory or the cloning fails because the
attribute enable dynamic creation was forgotten the return value is 
``CNM_ReturnTypes.CloneResult.FAILED``.

Only if the return value is ``CNM_ReturnTypes.CloneResult.SUCCESS``
the output ``clonedObject`` points to the new object
otherwise ``clonedObject`` is NULL.  

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``CNM_ReturnTypes.CloneResult.SUCCESS``: new object clone was created,
	``CNM_ReturnTypes.CloneResult.FAILED``: object clone failed
	``CNM_ReturnTypes.CloneResult.CLONE_IS_NOT_SUPPORTED``: object does not support cloning

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">CloneResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>clonedObject</Name><Comment><![CDATA[ new object instance or NULL if somthing went wrong ]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Local><Name>newTreeNode</Name><Type Namespace="CNM_Collections" PointerTo="1">BalancedBinarySearchTreeNode</Type><BitSize>64</BitSize></Local><Local><Name>newChildObject</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Local><Name>newChildNode</Name><Type Namespace="CNM_CollectionInterfaces">IBinaryTreeNode</Type><BitSize>64</BitSize></Local><Local><Name>OBJECT_NOT_REFERENCED</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>destruct</Name><Comment><![CDATA[

short summary
=================
This method is a self-destruction if the object was created dynamically.
If the object is a container class, the container content is not destroyed with it,
for that there is the method ``ICloneable.deepDestruct``
The output NULL is a constant which is always NULL,
this allows a semi-pleasant notation: ``foo.destruct(NULL => foo);``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

InOut:
	+-----------------+------+---------+------+------------------------------------------+
	| Scope           | Name | Type    | Init | Comment                                  |
	+=================+======+=========+======+==========================================+
	| Output CONSTANT | NULL | __XWORD | 0    | ``NULL`` is a constant which is always 0 |
	+-----------------+------+---------+------+------------------------------------------+

]]></Comment><Parameter><Name>NULL</Name><Comment><![CDATA[ NULL is a constant which is always 0 ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter></Method><Method><Name>__getbalance</Name><Comment><![CDATA[

short summary
=================
holds the a balance, for details see ``Tree_Balance`` from Interfacelib

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">TreeBalance</ReturnType><ReturnBitSize>16</ReturnBitSize><Local><Name>balance</Name><Type Namespace="CNM_CollectionInterfaces">TreeBalance</Type><BitSize>16</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getobject</Name><Comment><![CDATA[

short summary
=================
value points to the content of the treenode, is not allowed to be null since collections aren't allowed to hold null

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">IObject</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>object</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setleftChild</Name><Comment><![CDATA[

short summary
=================
This property points to the left child of a binarytreenode

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Parameter><Name>leftChild</Name><Comment><![CDATA[

short summary
=================
This property points to the left child of a binarytreenode

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Type Namespace="CNM_CollectionInterfaces">IBinaryTreeNode</Type><BitSize>64</BitSize></Parameter><Local><Name>OBJECT_NOT_REFERENCED</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setobject</Name><Comment><![CDATA[

short summary
=================
value points to the content of the treenode, is not allowed to be null since collections aren't allowed to hold null

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Parameter><Name>object</Name><Comment><![CDATA[

short summary
=================
value points to the content of the treenode, is not allowed to be null since collections aren't allowed to hold null

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>deepDestruct</Name><Comment><![CDATA[

short summary
=================
This method is a self-destruction if the object was created dynamically.
If the object is a container class, the container content is destroyed with it.
The output NULL is a constant which is always NULL,
this allows a semi-pleasant notation: ``foo.deepDestruct(NULL => foo);``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

InOut:
	+-----------------+------+---------+------------------------------------------+
	| Scope           | Name | Type    | Comment                                  |
	+=================+======+=========+==========================================+
	| Output CONSTANT | NULL | __XWORD | ``NULL`` is a constant which is always 0 |
	+-----------------+------+---------+------------------------------------------+

]]></Comment><Parameter><Name>NULL</Name><Comment><![CDATA[ NULL is a constant which is always 0 ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter></Method><Method><Name>__setrightChild</Name><Comment><![CDATA[

short summary
=================
This property points to the right child of an binarytreeenode

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Parameter><Name>rightChild</Name><Comment><![CDATA[

short summary
=================
This property points to the right child of an binarytreeenode

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Type Namespace="CNM_CollectionInterfaces">IBinaryTreeNode</Type><BitSize>64</BitSize></Parameter><Local><Name>OBJECT_NOT_REFERENCED</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>compareTo</Name><Comment><![CDATA[

short summary
=================
This method compares a foreign object with the own one, this is needed for sort orders.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``SMALLER``: ``THIS`` precedes in order,
	``EQUAL``: ``THIS`` and ``object`` at the same position in order,
	``GREATER``: ``THIS`` is after in order.
	Checkout the library CNM_ReturnTypes.

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">ComparationResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>object</Name><Comment><![CDATA[ foreign object to compare]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Local><Name>node</Name><Type Namespace="CNM_CollectionInterfaces">IBinaryTreeNode</Type><BitSize>64</BitSize></Local><Local><Name>compareObject</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local></Method><Method><Name>__setbalance</Name><Comment><![CDATA[

short summary
=================
holds the a balance, for details see ``Tree_Balance`` from Interfacelib

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Parameter><Name>balance</Name><Comment><![CDATA[

short summary
=================
holds the a balance, for details see ``Tree_Balance`` from Interfacelib

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Type Namespace="CNM_CollectionInterfaces">TreeBalance</Type><BitSize>16</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>deepClone</Name><Comment><![CDATA[

short summary
=================
This method is used to create a new instance
of the object which has the same internal state as the object.
If the object is a container class, the references to the content objects
are cloned too.

If an object does not support cloning the return value is
``CNM_ReturnTypes.CloneResult.CLONE_IS_NOT_SUPPORTED``.

If there is not enough memory or the cloning fails because the
attribute enable dynamic creation was forgotten the return value is 
``CNM_ReturnTypes.CloneResult.FAILED``.
If something goes wrong, then this method must clean up everything
that has been cloned and free the memory again.
**The deepClone either works completely, or not at all**

Only if the return value is ``CNM_ReturnTypes.CloneResult.SUCCESS``
the output ``clonedObject`` points to the new object
otherwise ``clonedObject`` is NULL.  

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``CNM_ReturnTypes.CloneResult.SUCCESS``: new object clone was created,
	``CNM_ReturnTypes.CloneResult.FAILED``: object clone failed
	``CNM_ReturnTypes.CloneResult.CLONE_IS_NOT_SUPPORTED``: object does not support deep cloning

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">CloneResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>clonedObject</Name><Comment><![CDATA[ new object instance or NULL if somthing went wrong ]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Local><Name>newTreeNode</Name><Type Namespace="CNM_Collections" PointerTo="1">BalancedBinarySearchTreeNode</Type><BitSize>64</BitSize></Local><Local><Name>newChildObject</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Local><Name>newChildNode</Name><Type Namespace="CNM_CollectionInterfaces">IBinaryTreeNode</Type><BitSize>64</BitSize></Local><Local><Name>newContent</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Local><Name>cloneResult</Name><Type Namespace="CNM_ReturnTypes">CloneResult</Type><BitSize>16</BitSize></Local><Local><Name>OBJECT_NOT_REFERENCED</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>__getclassName</Name><Comment><![CDATA[

short summary
=================
This abstract property returns the class name of the concrete object, 
which is useful to check the class name for ``__DELETE``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">ClassName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Local><Name>className</Name><Type Namespace="CNM_AbstractObject">ClassName</Type><BitSize>2048</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getleftChild</Name><Comment><![CDATA[

short summary
=================
This property points to the left child of a binarytreenode

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">IBinaryTreeNode</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>leftChild</Name><Type Namespace="CNM_CollectionInterfaces">IBinaryTreeNode</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property><Property><Name>VTableOffset</Name><Value>1321296</Value></Property><Property><Name>VfInitVTableIndex</Name><Value>23</Value></Property><Property><Name>enable_dynamic_creation</Name></Property></Properties></DataType><DataType><Name Namespace="CNM_CollectionInterfaces">IListSorter</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_AbstractObject">IObject</ExtendsType><Method><Name>__getmaxCycleCompares</Name><Comment><![CDATA[

short summary
=================
This property defines the maximum amount of compares that should be done per Cycle. Default should be set by class.
Passing zero resets to class specific default.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType>LWORD</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getminCycleCompares</Name><Comment><![CDATA[

short summary
=================
This property defines the minimum amount of compares that should be done per Cycle. Default should be set by class.
Passing zero resets to class specific default.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType>LWORD</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setmaxCycleCompares</Name><Comment><![CDATA[

short summary
=================
This property defines the maximum amount of compares that should be done per Cycle. Default should be set by class.
Passing zero resets to class specific default.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Parameter><Name>maxCycleCompares</Name><Comment><![CDATA[

short summary
=================
This property defines the maximum amount of compares that should be done per Cycle. Default should be set by class.
Passing zero resets to class specific default.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setminCycleCompares</Name><Comment><![CDATA[

short summary
=================
This property defines the minimum amount of compares that should be done per Cycle. Default should be set by class.
Passing zero resets to class specific default.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Parameter><Name>minCycleCompares</Name><Comment><![CDATA[

short summary
=================
This property defines the minimum amount of compares that should be done per Cycle. Default should be set by class.
Passing zero resets to class specific default.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>notifyListChange</Name><Comment><![CDATA[

short summary
=================
This Method should be called from the list when elements where inserted or removed to notify the sorter, that the list changed

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================

]]></Comment></Method><Properties><Property><Name>TcPlcInterfaceId</Name><Value>497</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_ReturnTypes">SingleExecutionState</Name><Comment><![CDATA[

short summary
=================
``SingleExecutionState`` is an enumeration to unify default state driven task responses.
We use **always** a boolean ``excute`` input for methods which return a ``SingleExecutionState``.
It is additionally possible to provide the boolean input ``pause``. 
``pause`` is high active, the parameter pauses the execution if this is possible, 
then the return value is ``SingleExecutionState.PAUSED``. 
The input ``pause`` is **not** mandatory like ``execute``, but optional if it makes sense.    
For details check the state diagram below.

Type of the enumartion is ``INT``

..diagram::
	
	                  ┌─────────────────────────────────────────────────────────────────────────────────┐
	                  │                                                                                 │
	                  │                                                                                 │
	                  │                                                                                 │
	 not execute      │                   ┌───────────────┐                                             │
	┌────OR──────┐    │                   │               │                                     ┌───────┴───────┐
	│   pause    │    │   rising execute  │   set state   │                                     │               │
	│            │    │    ┌────AND───────►BUSY and reset ├─────────┬────────────────────┐      │   set state   │
	│            │    │    │ NOT pause    │   execution   │         │                    │      │               │
	│    ┌───────▼────▼─┐  │              │               │         │                    │      │    ABORTED    │
	└────┤              │  │              └───────────────┘         │                    │      │               │
	     │              │  │                                    NOT pause              pause    └───────▲───────┘
	     │   Sleeping   ├──┘                                       OR                   AND             │
	     │              │                                    NOT pause enabled     pause enabled        │
	     │              │                                           │                    │           NOT│execute   pause
	     └──────▲───────┘                                           │                    │              │      ┌────AND────┐
	            │                                                   │                    │              │      │  execute  │
	            │         ┌───────────────┐                 ┌───────▼───────┐            │      ┌───────┴──────┴┐          │
	            │         │               │                 │               │            └──────►               │          │
	            │         │   set state   │    NOT execute  │               │                   │   set state   │          │
	            ├─────────┤               ◄─────────────────┤   execcuting  │                   │               ◄──────────┘
	            │         │    ABORTED    │                 │               │      pause        │     PAUSED    │
	            │         │               │                 │               ├───────AND─────────►               │
	            │         └───────────────┘                 └───────┬────▲──┘   pause enabled   └───────┬───────┘
	            │                                                   │    │                              │
	            │         ┌───────────────┐                         │    │                           NOT│pause
	            │         │               │                         │    │                           AND│execute
	            │         │   set state   │      error occurs       │    │                              │
	            ├─────────┤               ◄─────────────────────────┤    │                      ┌───────▼───────┐
	            │         │     ERROR     │                         │    │                      │               │
	            │         │               │                         │    │                      │   set state   │
	            │         └───────────────┘                         │    └────────resume────────┤               │
	            │                                                   │                           │      BUSY     │
	            │         ┌───────────────┐                         │                           │               │
	            │         │               │                         │                           └───────────────┘
	            │         │   set state   │    execution is done    │
	            └─────────┤               ◄─────────────────────────┘
	                      │    SUCCESS    │
	                      │               │
	                      └───────────────┘

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

enumeration values
======================

]]></Comment><BitSize>16</BitSize><BaseType>INT</BaseType><EnumInfo><Text>ERROR</Text><Enum>-1</Enum><Comment><![CDATA[Execution was finished with error]]></Comment></EnumInfo><EnumInfo><Text>SUCCESS</Text><Enum>0</Enum><Comment><![CDATA[Execution was finished successfully]]></Comment></EnumInfo><EnumInfo><Text>IDLE</Text><Enum>1</Enum><Comment><![CDATA[There is no execution]]></Comment></EnumInfo><EnumInfo><Text>BUSY</Text><Enum>2</Enum><Comment><![CDATA[Execution is still active]]></Comment></EnumInfo><EnumInfo><Text>ABORTED</Text><Enum>3</Enum><Comment><![CDATA[Execution was aborted]]></Comment></EnumInfo><EnumInfo><Text>PAUSED</Text><Enum>4</Enum><Comment><![CDATA[Execution is paused]]></Comment></EnumInfo><Properties><Property><Name>qualified_only</Name></Property><Property><Name>to_string</Name></Property><Property><Name>to_string_function</Name><Value>__TO_STRING__174</Value></Property><Property><Name>to_wstring_function</Name><Value>__TO_WSTRING__174</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_AbstractObject">IComparator</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_AbstractObject">IObject</ExtendsType><Method><Name>compare</Name><Comment><![CDATA[

short summary
=================
This method compares two objects, this is needed for sort orders.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return:``SMALLER``: ``object1`` precedes in order,
``EQUAL``: ``object1`` and ``object2`` at the same position in order,
``GREATER``: ``object1`` is after in order. Checkout the library CNM_ReturnTypes.

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">ComparationResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>object1</Name><Comment><![CDATA[ first object to compare]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Parameter><Name>object2</Name><Comment><![CDATA[ second object to compare]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_CollectionInterfaces">IArrayListSorter</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_CollectionInterfaces">IListSorter</ExtendsType><Method><Name>inverseSort</Name><Comment><![CDATA[

short summary
=================
This method sorts the Sortable in the inverted order, so from great to low
.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: ``ABORTED``: While inverse was pending,execute had a falling edge,
	``BUSY``: Inverse is in progress
	``ERROR``: Inverse was not able to finish (p.e. List changed) call inverse(false) to reset
	``IDLE``: Currently invert is not in progress
	``SUCCESS``: Inversing was finished 
]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the inverting, needs to be active until the ExecutionState is noz longer busy]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>size</Name><Comment><![CDATA[The size of the list to be sorted]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>container</Name><Comment><![CDATA[the container, that contains the list elements]]></Comment><Type Namespace="CNM_AbstractObject" PointerTo="1">IObject</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>sort</Name><Comment><![CDATA[

short summary
=================
This method sorts the data structure. 
This can take many cycles and should be called until the CNM_ReturnTypes.ExecutionState is no longer ``BUSY``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``ABORTED``: While sort was pending,execute had a falling edge,
	``BUSY``: Sort is in progress
	``ERROR``: Sort was not able to finish (p.e. List changed) call sort(false) to reset
	``IDLE``: Currently no sort in progress
	``SUCCESS``: Sorting was finished 

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the sorting, needs to be active until the ExecutionState is SUCCESS]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>size</Name><Comment><![CDATA[The size of the list to be sorted]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>container</Name><Comment><![CDATA[the container, that contains the list elements]]></Comment><Type Namespace="CNM_AbstractObject" PointerTo="1">IObject</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>sortWithComparator</Name><Comment><![CDATA[

short summary
=================
This method sorts the data structure. 
It uses the passed Comperator to sort the structure.
This can take many cycles and should be called until the CNM_ReturnTypes.ExecutionState is no longer ``BUSY``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``ABORTED``: While sort was pending,execute had a falling edge,
	``BUSY``: Sort is in progress
	``ERROR``: Sort was not able to finish (p.e. List changed) call sort(false) to reset
	``IDLE``: Currently no sort in progress
	``SUCCESS``: Sorting was finished 

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the sorting, needs to be active until the ExecutionState is SUCCESS]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>size</Name><Comment><![CDATA[The size of the list to be sorted]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>comparator</Name><Comment><![CDATA[the comparator that should be used for the sort. Must not be changed while sort is in process]]></Comment><Type Namespace="CNM_AbstractObject">IComparator</Type><BitSize>64</BitSize></Parameter><Parameter><Name>container</Name><Comment><![CDATA[the container, that contains the list elements]]></Comment><Type Namespace="CNM_AbstractObject" PointerTo="1">IObject</Type><BitSize>64</BitSize></Parameter></Method><Properties><Property><Name>TcPlcInterfaceId</Name><Value>491</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_CollectionInterfaces">ISectionSorter</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_CollectionInterfaces">IArrayListSorter</ExtendsType><Method><Name>__getcompareAmount</Name><Comment><![CDATA[

short summary
=================
The maximu amount of compares that can be used in this cycle to sort the current section
.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType>LWORD</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getendIndex</Name><Comment><![CDATA[

short summary
=================
The last index that should be includeded in the section

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType>LWORD</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getstartIndex</Name><Comment><![CDATA[

short summary
=================
The first index that is included in the section

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType>LWORD</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setendIndex</Name><Comment><![CDATA[

short summary
=================
The last index that should be includeded in the section

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Parameter><Name>endIndex</Name><Comment><![CDATA[

short summary
=================
The last index that should be includeded in the section

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setstartIndex</Name><Comment><![CDATA[

short summary
=================
The first index that is included in the section

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Parameter><Name>startIndex</Name><Comment><![CDATA[

short summary
=================
The first index that is included in the section

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method></DataType><DataType><Name Namespace="CNM_CollectionInterfaces">reverseComparator</Name><Comment><![CDATA[

short summary
=================
Internal comparator, that returns the opposit of the .compareTo Method from Object1 


.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

methods and properties
=========================

]]></Comment><BitSize>2624</BitSize><ExtendsType Namespace="CNM_AbstractObject">Object</ExtendsType><Implements Namespace="CNM_AbstractObject">IComparator</Implements><Method><Name>compare</Name><Comment><![CDATA[

short summary
=================
This method compares two objects, this is needed for sort orders.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``SMALLER``: ``object1`` precedes in order,
    ``EQUAL``: ``object1`` and ``object2`` at the same position in order,
    ``GREATER``: ``object1`` is after in order. Checkout the library CNM_ReturnTypes.

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">ComparationResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>object1</Name><Comment><![CDATA[ first object to compare]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Parameter><Name>object2</Name><Comment><![CDATA[ second object to compare]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>__getclassName</Name><Comment><![CDATA[

short summary
=================
This abstract property returns the class name of the concrete object, 
which is useful to check the class name for ``__DELETE``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">ClassName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Local><Name>className</Name><Type Namespace="CNM_AbstractObject">ClassName</Type><BitSize>2048</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_CollectionInterfaces">AbstractListSorter</Name><Comment><![CDATA[

short summary
=================
Abstract Baseclass for Listsorters. Provides functionality to set the executionlimits, size and Listchanges.
Provides the default implementation for sort and inverseSort, sortWithComparator must be implemented by subclass.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

methods and properties
=========================

]]></Comment><BitSize>3072</BitSize><ExtendsType Namespace="CNM_AbstractObject">Object</ExtendsType><Implements Namespace="CNM_CollectionInterfaces">IListSorter</Implements><SubItem><Name>elementComparator</Name><Type Namespace="CNM_AbstractObject">IComparator</Type><Comment><![CDATA[The comparator used to sort, set by the List when setting sorter]]></Comment><BitSize>64</BitSize><BitOffs>2624</BitOffs></SubItem><SubItem><Name>maxOperationsPerCycle</Name><Type>LWORD</Type><Comment><![CDATA[The maximum of comparisons that the sorter allows, may be overwruled by the bounds]]></Comment><BitSize>64</BitSize><BitOffs>2688</BitOffs></SubItem><SubItem><Name>listChanged</Name><Type>BOOL</Type><Comment><![CDATA[True when list where changed]]></Comment><BitSize>8</BitSize><BitOffs>2752</BitOffs><Default><Bool>false</Bool></Default></SubItem><SubItem><Name>lowerCompareBound</Name><Type>LWORD</Type><Comment><![CDATA[The minimum of compares done per cycle (to allow short lists to be sort in less cycles]]></Comment><BitSize>64</BitSize><BitOffs>2816</BitOffs><Default><Value>120</Value></Default></SubItem><SubItem><Name>upperCompareBound</Name><Type>LWORD</Type><Comment><![CDATA[The maximum of compares done per cycle to prevent very long lists to take up to much time]]></Comment><BitSize>64</BitSize><BitOffs>2880</BitOffs><Default><Value>2000</Value></Default></SubItem><SubItem><Name>DEFAULT_LOWER_BOUND</Name><Type>LWORD</Type><BitSize>64</BitSize><BitOffs>2944</BitOffs><Default><Value>120</Value></Default></SubItem><SubItem><Name>DEFAULT_UPPER_BOUND</Name><Type>LWORD</Type><BitSize>64</BitSize><BitOffs>3008</BitOffs><Default><Value>2000</Value></Default></SubItem><SubItem><Name Static="true">reverseComparator</Name><Type Namespace="CNM_CollectionInterfaces">reverseComparator</Type><BitSize>2624</BitSize></SubItem><Method><Name>__getmaxCycleCompares</Name><Comment><![CDATA[

short summary
=================
This property defines the maximum amount of compares that should be done per Cycle. Is optional as default should be set by class.
Passing zero resets to class specific default.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType>LWORD</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>maxCycleCompares</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>allowedCompareAmount</Name><Comment><![CDATA[

short summary
=================
Returns the amount of compares that should not be exeeded within one cycle

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: the amount of compares not to be exceeded

]]></Comment><ReturnType>LWORD</ReturnType><ReturnBitSize>64</ReturnBitSize></Method><Method><Name>__setminCycleCompares</Name><Comment><![CDATA[

short summary
=================
This property defines the minimum amount of compares that should be done per Cycle. Is optional as default should be set by class.
Passing zero resets to class specific default.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Parameter><Name>minCycleCompares</Name><Comment><![CDATA[

short summary
=================
This property defines the minimum amount of compares that should be done per Cycle. Is optional as default should be set by class.
Passing zero resets to class specific default.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>prepareClonedSorter</Name><Comment><![CDATA[

short summary
=================
does the basic initialization for a new sorter that was cloned from THIS^

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">CloneResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>newSorter</Name><Comment><![CDATA[The cloned sorter to init]]></Comment><Type Namespace="CNM_AbstractObject" ReferenceTo="true">IObject</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter><Local><Name>clonedSorter</Name><Type Namespace="CNM_CollectionInterfaces">IListSorter</Type><BitSize>64</BitSize></Local></Method><Method><Name>__setmaxCycleCompares</Name><Comment><![CDATA[

short summary
=================
This property defines the maximum amount of compares that should be done per Cycle. Is optional as default should be set by class.
Passing zero resets to class specific default.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Parameter><Name>maxCycleCompares</Name><Comment><![CDATA[

short summary
=================
This property defines the maximum amount of compares that should be done per Cycle. Is optional as default should be set by class.
Passing zero resets to class specific default.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getminCycleCompares</Name><Comment><![CDATA[

short summary
=================
This property defines the minimum amount of compares that should be done per Cycle. Is optional as default should be set by class.
Passing zero resets to class specific default.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType>LWORD</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>minCycleCompares</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>notifyListChange</Name><Comment><![CDATA[

short summary
=================
This Method should be called from the list when elements where inserted or removed to notify the sorter, that the list changed

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================

]]></Comment></Method><Method><Name>clone</Name><Comment><![CDATA[

short summary
=================
This method is used to create a new instance
of the object which has the same internal state as the object.
If the object is a container class, the references to the content objects
are not cloned for this there is the method `ICloneable.deepClone`.

If an object does not support cloning the return value is
``CNM_ReturnTypes.CloneResult.CLONE_IS_NOT_SUPPORTED``.

If there is not enough memory or the cloning fails because the
attribute enable dynamic creation was forgotten the return value is 
``CNM_ReturnTypes.CloneResult.FAILED``.

Only if the return value is ``CNM_ReturnTypes.CloneResult.SUCCESS``
the output ``clonedObject`` points to the new object
otherwise ``clonedObject`` is NULL.  

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``CNM_ReturnTypes.CloneResult.SUCCESS``: new object clone was created,
    ``CNM_ReturnTypes.CloneResult.FAILED``: object clone failed
    ``CNM_ReturnTypes.CloneResult.CLONE_IS_NOT_SUPPORTED``: object does not support cloning

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">CloneResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>clonedObject</Name><Comment><![CDATA[ new object instance or NULL if somthing went wrong ]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter></Method><Method><Name>deepDestruct</Name><Comment><![CDATA[

short summary
=================
This method is a self-destruction if the object was created dynamically.
If the object is a container class, the container content is destroyed with it.
The output NULL is a constant which is always NULL,
this allows a semi-pleasant notation: ``foo.deepDestruct(NULL => foo);``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

InOut:
	+-----------------+------+---------+------------------------------------------+
	| Scope           | Name | Type    | Comment                                  |
	+=================+======+=========+==========================================+
	| Output CONSTANT | NULL | __XWORD | ``NULL`` is a constant which is always 0 |
	+-----------------+------+---------+------------------------------------------+

]]></Comment><Parameter><Name>NULL</Name><Comment><![CDATA[ NULL is a constant which is always 0 ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property><Property><Name>suppress_warning_0</Name><Value>C0533</Value></Property></Properties></Parameter></Method><Method><Name>deepClone</Name><Comment><![CDATA[

short summary
=================
This method is used to create a new instance
of the object which has the same internal state as the object.
If the object is a container class, the references to the content objects
are cloned too.

If an object does not support cloning the return value is
``CNM_ReturnTypes.CloneResult.CLONE_IS_NOT_SUPPORTED``.

If there is not enough memory or the cloning fails because the
attribute enable dynamic creation was forgotten the return value is 
``CNM_ReturnTypes.CloneResult.FAILED``.
If something goes wrong, then this method must clean up everything
that has been cloned and free the memory again.
**The deepClone either works completely, or not at all**

Only if the return value is ``CNM_ReturnTypes.CloneResult.SUCCESS``
the output ``clonedObject`` points to the new object
otherwise ``clonedObject`` is NULL.  

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``CNM_ReturnTypes.CloneResult.SUCCESS``: new object clone was created,
    ``CNM_ReturnTypes.CloneResult.FAILED``: object clone failed
    ``CNM_ReturnTypes.CloneResult.CLONE_IS_NOT_SUPPORTED``: object does not support deep cloning

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">CloneResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>clonedObject</Name><Comment><![CDATA[ new object instance or NULL if somthing went wrong ]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter></Method><Method><Name>compareElements</Name><Comment><![CDATA[

short summary
=================
compares two objects, if set uses the comparator, else uses the built in comparator of object1

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: ``Smaller``: ``Object1`` precendes ``Object2`` in order,
	``Greater``: ``Object1`` succeds ``Object2`` in order,
	``Equal``: ``Object1`` equals ``Object2`` in Order
	
]]></Comment><ReturnType Namespace="CNM_ReturnTypes">ComparationResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>object1</Name><Comment><![CDATA[first object to compare]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Parameter><Name>object2</Name><Comment><![CDATA[second object to compare]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>__getclassName</Name><Comment><![CDATA[

short summary
=================
This abstract property returns the class name of the concrete object, 
which is useful to check the class name for ``__DELETE``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">ClassName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Local><Name>className</Name><Type Namespace="CNM_AbstractObject">ClassName</Type><BitSize>2048</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>setComparator</Name><Comment><![CDATA[

short summary
=================
This methode can replace the default comperator for custom one.
Useful if you par example want to invert the order of the sort.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``THIS^`` :ref:`IListSorter`

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">IListSorter</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>comparator</Name><Comment><![CDATA[the instance of the comperator to be used for sorting]]></Comment><Type Namespace="CNM_AbstractObject">IComparator</Type><BitSize>64</BitSize></Parameter></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_CollectionInterfaces">AbstractArrayListSorter</Name><Comment><![CDATA[

short summary
=================
The abstract implementation of an ArrayListsorter, to provide default implementations for setting comparator, the IObject methods and so on.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

methods and properties
=========================

]]></Comment><BitSize>3264</BitSize><ExtendsType Namespace="CNM_CollectionInterfaces">AbstractListSorter</ExtendsType><Implements Namespace="CNM_CollectionInterfaces">IArrayListSorter</Implements><Method><Name>inverseSort</Name><Comment><![CDATA[

short summary
=================
This method sorts the Sortable in the inverted order, so from great to low
.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: ``ABORTED``: While inverse was pending,execute had a falling edge,
	``BUSY``: Inverse is in progress
	``ERROR``: Inverse was not able to finish (p.e. List changed) call inverse(false) to reset
	``IDLE``: Currently invert is not in progress
	``SUCCESS``: Inversing was finished 
]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the inverting, needs to be active until the ExecutionState is noz longer busy]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>size</Name><Comment><![CDATA[The size of the list to be sorted]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>container</Name><Comment><![CDATA[the container, that contains the list elements]]></Comment><Type Namespace="CNM_AbstractObject" PointerTo="1">IObject</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>sort</Name><Comment><![CDATA[

short summary
=================
This method sorts the data structure. 
This can take many cycles and should be called until the CNM_ReturnTypes.ExecutionState is no longer ``BUSY``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``ABORTED``: While sort was pending,execute had a falling edge,
	``BUSY``: Sort is in progress
	``ERROR``: Sort was not able to finish (p.e. List changed) call sort(false) to reset
	``IDLE``: Currently no sort in progress
	``SUCCESS``: Sorting was finished 

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the sorting, needs to be active until the ExecutionState is SUCCESS]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>size</Name><Comment><![CDATA[The size of the list to be sorted]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>container</Name><Comment><![CDATA[the container, that contains the list elements]]></Comment><Type Namespace="CNM_AbstractObject" PointerTo="1">IObject</Type><BitSize>64</BitSize></Parameter><Local><Name>OBJECT_NOT_REFERENCED</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>sortWithComparator</Name><Comment><![CDATA[

short summary
=================
This method sorts the data structure. 
It uses the passed Comperator to sort the structure.
This can take many cycles and should be called until the CNM_ReturnTypes.ExecutionState is no longer ``BUSY``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``ABORTED``: While sort was pending,execute had a falling edge,
	``BUSY``: Sort is in progress
	``ERROR``: Sort was not able to finish (p.e. List changed) call sort(false) to reset
	``IDLE``: Currently no sort in progress
	``SUCCESS``: Sorting was finished 

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the sorting, needs to be active until the ExecutionState is SUCCESS]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>size</Name><Comment><![CDATA[The size of the list to be sorted]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>comparator</Name><Comment><![CDATA[the comparator that should be used for the sort. Must not be changed while sort is in process]]></Comment><Type Namespace="CNM_AbstractObject">IComparator</Type><BitSize>64</BitSize></Parameter><Parameter><Name>container</Name><Comment><![CDATA[the container, that contains the list elements]]></Comment><Type Namespace="CNM_AbstractObject" PointerTo="1">IObject</Type><BitSize>64</BitSize></Parameter></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_Collections">SectionInsertionSorter</Name><Comment><![CDATA[

short summary
=================
This sorter is used to sort a specified range of an given list 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

methods and properties
=========================

]]></Comment><BitSize>3776</BitSize><ExtendsType Namespace="CNM_CollectionInterfaces">AbstractArrayListSorter</ExtendsType><Implements Namespace="CNM_CollectionInterfaces">ISectionSorter</Implements><SubItem><Name>startsAt</Name><Type>LWORD</Type><Comment><![CDATA[Index to start sorting, is included]]></Comment><BitSize>64</BitSize><BitOffs>3456</BitOffs></SubItem><SubItem><Name>endsAt</Name><Type>LWORD</Type><Comment><![CDATA[last Index to sort, is included]]></Comment><BitSize>64</BitSize><BitOffs>3520</BitOffs></SubItem><SubItem><Name>usedCompares</Name><Type>LWORD</Type><Comment><![CDATA[the amount of compares that where used to sort the part of the list]]></Comment><BitSize>64</BitSize><BitOffs>3584</BitOffs></SubItem><SubItem><Name>SectionInsertionSorter_635__sortWithComparator_653__lastExecute</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>3648</BitOffs><Default><Bool>false</Bool></Default><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>SectionInsertionSorter_635__sortWithComparator_653__executing</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>3656</BitOffs><Default><Bool>false</Bool></Default><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>SectionInsertionSorter_635__sortWithComparator_653__state</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><BitOffs>3664</BitOffs><Default><EnumText>SingleExecutionState.IDLE</EnumText></Default><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>SectionInsertionSorter_635__sortWithComparator_653__initIndex</Name><Type>LWORD</Type><BitSize>64</BitSize><BitOffs>3712</BitOffs><Default><Value>0</Value></Default><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><Method><Name>__getclassName</Name><Comment><![CDATA[

short summary
=================
This abstract property returns the class name of the concrete object, 
which is useful to check the class name for ``__DELETE``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">ClassName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Local><Name>className</Name><Type Namespace="CNM_AbstractObject">ClassName</Type><BitSize>2048</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>clone</Name><Comment><![CDATA[

short summary
=================
This method is used to create a new instance
of the object which has the same internal state as the object.
If the object is a container class, the references to the content objects
are not cloned for this there is the method ``ICloneable.deepClone``.

If an object does not support cloning the return value is
``CNM_ReturnTypes.CloneResult.CLONE_IS_NOT_SUPPORTED``.

If there is not enough memory or the cloning fails because the
attribute enable dynamic creation was forgotten the return value is 
``CNM_ReturnTypes.CloneResult.FAILED``.

Only if the return value is ``CNM_ReturnTypes.CloneResult.SUCCESS``
the output ``clonedObject`` points to the new object
otherwise ``clonedObject`` is NULL.  

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``CNM_ReturnTypes.CloneResult.SUCCESS``: new object clone was created,
	``CNM_ReturnTypes.CloneResult.FAILED``: object clone failed
	``CNM_ReturnTypes.CloneResult.CLONE_IS_NOT_SUPPORTED``: object does not support cloning

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">CloneResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>clonedObject</Name><Comment><![CDATA[ new object instance or NULL if somthing went wrong ]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Local><Name>newSorter</Name><Type Namespace="CNM_Collections" PointerTo="1">SectionInsertionSorter</Type><BitSize>64</BitSize></Local><Local><Name>sorter</Name><Type Namespace="CNM_CollectionInterfaces">IArrayListSorter</Type><BitSize>64</BitSize></Local></Method><Method><Name>__setstartIndex</Name><Comment><![CDATA[

short summary
=================
This property sets / gets the first index that should be included in sorting

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Parameter><Name>startIndex</Name><Comment><![CDATA[

short summary
=================
This property sets / gets the first index that should be included in sorting

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getcompareAmount</Name><Comment><![CDATA[

short summary
=================
This property returns the amount of compares Used since last rising edge of execute 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType>LWORD</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>compareAmount</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>sortWithComparator</Name><Comment><![CDATA[

short summary
=================
This method sorts the data structure. 
It uses the passed Comperator to sort the structure.
This can take many cycles and should be called until the CNM_ReturnTypes.ExecutionState is no longer ``BUSY``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``ABORTED``: While sort was pending,execute had a falling edge,
	``BUSY``: Sort is in progress
	``ERROR``: Sort was not able to finish (p.e. List changed) call sort(false) to reset
	``IDLE``: Currently no sort in progress
	``SUCCESS``: Sorting was finished 

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the sorting, needs to be active until the ExecutionState is SUCCESS]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>size</Name><Comment><![CDATA[The size of the list to be sorted]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>comparator</Name><Comment><![CDATA[the comparator that should be used for the sort. Must not be changed while sort is in process]]></Comment><Type Namespace="CNM_AbstractObject">IComparator</Type><BitSize>64</BitSize></Parameter><Parameter><Name>container</Name><Comment><![CDATA[the container, that contains the list elements]]></Comment><Type Namespace="CNM_AbstractObject" PointerTo="1">IObject</Type><BitSize>64</BitSize></Parameter><Local><Name>lastExecute</Name><Type>BOOL</Type><BitSize>8</BitSize><Properties><Property><Name>uselocation</Name><Value>SECTIONINSERTIONSORTER_635__SORTWITHCOMPARATOR_653__LASTEXECUTE</Value></Property></Properties></Local><Local><Name>executing</Name><Type>BOOL</Type><BitSize>8</BitSize><Properties><Property><Name>uselocation</Name><Value>SECTIONINSERTIONSORTER_635__SORTWITHCOMPARATOR_653__EXECUTING</Value></Property></Properties></Local><Local><Name>state</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><Properties><Property><Name>uselocation</Name><Value>SECTIONINSERTIONSORTER_635__SORTWITHCOMPARATOR_653__STATE</Value></Property></Properties></Local><Local><Name>initIndex</Name><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>SECTIONINSERTIONSORTER_635__SORTWITHCOMPARATOR_653__INITINDEX</Value></Property></Properties></Local><Local><Name>index</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Local><Name>insertPointer</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Local><Name>operationsThisCycle</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Local><Name>tempObject</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Local><Name>leftObjectFirstPlace</Name><Type>BOOL</Type><BitSize>8</BitSize></Local><Local><Name>leave</Name><Type>BOOL</Type><BitSize>8</BitSize></Local></Method><Method><Name>__getendIndex</Name><Comment><![CDATA[

short summary
=================
This property sets / gets the last index that should be included in sorting

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType>LWORD</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>endIndex</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setendIndex</Name><Comment><![CDATA[

short summary
=================
This property sets / gets the last index that should be included in sorting

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Parameter><Name>endIndex</Name><Comment><![CDATA[

short summary
=================
This property sets / gets the last index that should be included in sorting

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getstartIndex</Name><Comment><![CDATA[

short summary
=================
This property sets / gets the first index that should be included in sorting

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType>LWORD</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>startIndex</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property><Property><Name>VTableOffset</Name><Value>1323888</Value></Property><Property><Name>VfInitVTableIndex</Name><Value>23</Value></Property><Property><Name>enable_dynamic_creation</Name></Property></Properties></DataType><DataType><Name Namespace="CNM_ReturnTypes">SingleExecutionResult</Name><Comment><![CDATA[

short summary
=================
This return type is intended for functions or methods
that are neither stage-based nor state-based,
or in other words, that finish within one call/cycle.  

Type of the enumartion is ``INT``

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

enumeration values
======================

]]></Comment><BitSize>16</BitSize><BaseType>INT</BaseType><EnumInfo><Text>ERROR</Text><Enum>-1</Enum><Comment><![CDATA[Execution was finished with error]]></Comment></EnumInfo><EnumInfo><Text>SUCCESS</Text><Enum>0</Enum><Comment><![CDATA[Execution was finished successfully]]></Comment></EnumInfo><EnumInfo><Text>ABORTED</Text><Enum>3</Enum><Comment><![CDATA[Execution was aborted]]></Comment></EnumInfo><Properties><Property><Name>qualified_only</Name></Property><Property><Name>to_string</Name></Property><Property><Name>to_string_function</Name><Value>__TO_STRING__440</Value></Property><Property><Name>to_wstring_function</Name><Value>__TO_WSTRING__440</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_CollectionInterfaces">IApplierList</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_AbstractObject">IObject</ExtendsType><Method><Name>__getcount</Name><Comment><![CDATA[

short summary
=================
This property returns the amount of appliers in the list

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType>LWORD</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>getApplier</Name><Comment><![CDATA[

short summary
=================
A method to get an applier at the given index.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: CNM_ReturnTypes.ExecutionState

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">IApplier</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>index</Name><Type>LWORD</Type><BitSize>64</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_CollectionInterfaces">IApplier</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_AbstractObject">IObject</ExtendsType><Method><Name>__getactions</Name><Comment><![CDATA[

short summary
=================
This property returns a list of actions/operations performed by this applier.
Should normally include only a single Applier (THIS)
Can contain multiple actions if chained, see ``IChainedApplier``

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">IApplierList</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>apply</Name><Comment><![CDATA[

short summary
=================
A method to apply the concrete action on the given object (THIS^.object)

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: CNM_ReturnTypes.ExecutionState

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the application, should to be active until the ExecutionState is SUCCESS]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_CollectionInterfaces">IInstantForEachStrategy</Name><BitSize>64</BitSize><ExtendsType GUID="{18071995-0000-0000-0000-000000000018}">PVOID</ExtendsType><Method><Name>parallel</Name><Comment><![CDATA[

short summary
=================
Method to perform a given action on all objects inside the collection.
All objects are invoked with the applier each cycle until all are done.
Needs to reset the execution flag between calls.
If at any point the applier returns an error the foreach stops and returns an error.
Action to perform needs to implement :ref:`IApplier`.
Example:
You have a list of numbers: 1 2 3 and a ConcreteIncrementApplier that can take  a number and increment it. 
Calling list.forEach(TRUE, ConcreteIncrementApplier) will increment all numbers in the list, becoming: 2 3 4.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: CNM_ReturnTypes.SingleExecutionResult

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>applier</Name><Comment><![CDATA[the applier (action) to be used on all obejcts in the collection]]></Comment><Type Namespace="CNM_CollectionInterfaces">IApplier</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>serial</Name><Comment><![CDATA[

short summary
=================
Method to perform a given action on all objects inside the collection.
Objects are invoked with the applier in order until done, only then is the next invoked.
Order is defined by the default iterator.
If at any point the applier returns an error the foreach stops and returns an error.
Needs to reset the execution flag between calls.
Action to perform needs to implement :ref:`IApplier`.
Example:
You have a list of numbers: 1 2 3 and a ConcreteIncrementApplier that can take  a number and increment it. 
Calling list.forEach(TRUE, ConcreteIncrementApplier) will increment all numbers in the list, becoming: 2 3 4.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: CNM_ReturnTypes.SingleExecutionResult

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>applier</Name><Comment><![CDATA[the applier (action) to be used on all obejcts in the collection]]></Comment><Type Namespace="CNM_CollectionInterfaces">IApplier</Type><BitSize>64</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_CollectionInterfaces">IInstantList</Name><BitSize>64</BitSize><ExtendsType GUID="{18071995-0000-0000-0000-000000000018}">PVOID</ExtendsType><Method><Name>__getforEach</Name><Comment><![CDATA[

short summary
=================
This property returns strategies to loop through the collection and apply actions to all objects contained.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">IInstantForEachStrategy</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>inverseSort</Name><Comment><![CDATA[

short summary
=================
This method sorts the List in the inverted order, so from great to low
This will only take one cycle

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return:	``ABORTED``: While inverse was pending,execute had a falling edge,
	``ERROR``: Inverse was not able to finish (p.e. List changed) call inverse(false) to reset
	``SUCCESS``: Inversing was finished 

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize></Method><Method><Name>sort</Name><Comment><![CDATA[

short summary
=================
This methode sorts the List using the .compareTo Methode of the objects within it.
This will only take one cycle

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``CNM_SingleExecutionResult``: the state of the sorting

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize></Method><Method><Name>sortWithComparator</Name><Comment><![CDATA[

short summary
=================
This method sorts the list. 
It uses the passed Comperator to do that.
This will only take one cycle

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``ABORTED``: While sort was pending,execute had a falling edge,
	``ERROR``: Sort was not able to finish (p.e. List changed) call sort(false) to reset
	``SUCCESS``: Sorting was finished 

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>comparator</Name><Comment><![CDATA[the comparator that should be used for the sort. Must not be changed while sort is in process]]></Comment><Type Namespace="CNM_AbstractObject">IComparator</Type><BitSize>64</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_CollectionInterfaces">ICollection</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_AbstractObject">IObject</ExtendsType><Method><Name>__gethasElement</Name><Comment><![CDATA[

short summary
=================
This property returns ``TRUE`` if the collection has any element.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getisEmpty</Name><Comment><![CDATA[

short summary
=================
This property returns ``TRUE`` if the collection is empty.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getsize</Name><Comment><![CDATA[

short summary
=================
This property returns the number of elements inside this collection.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType>LWORD</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>containsEqualObject</Name><Comment><![CDATA[

short summary
=================
This methode checks if a given object is contained in the collection. 
The object is inside if the collection contains an object where the default comperator of the objects returns EQUAL on compareTo!

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``FALSE``: list does not contain an equal object
    ``TRUE``: list does contain an equal object

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Parameter><Name>object</Name><Comment><![CDATA[the object to be checked if it exists inside the collection]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>containsObject</Name><Comment><![CDATA[

short summary
=================
This methode checks if a given object is contained in the collection. 
The object is inside if the collection contains an object of equal hashcode!

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``FALSE``: list does not contain given object,
    ``TRUE``: list does contain given object

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Parameter><Name>object</Name><Comment><![CDATA[the object to be checked if it exists inside the collection]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_CollectionInterfaces">IList</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_AbstractObject">IObject</ExtendsType><Method><Name>__getinstant</Name><Comment><![CDATA[

short summary
=================
This property returns a list of methods that can be forced to be performed instantly (finished in one call), thus converting the return from a state to a result.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">IInstantList</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>append</Name><Comment><![CDATA[

short summary
=================
This methode adds the given CNM_AbstractObject.IObject to the end of the list.
Example: 
Given a list that looks like this: (Head->) A B C (<- End),
calling append(D) on this list will place the D at the and,
making it the new End: (Head->) A B C D(<- End)

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>object</Name><Comment><![CDATA[The object to be appended]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>appendCollection</Name><Comment><![CDATA[

short summary
=================
This methode adds all elements of the given collection to the end of this list.
Example:
For the list1: A B C and list2: D E F will be after list1.appendCollection(list2):
A B C D E F. Notice the elements are still in the same order they where befor on each subsection.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>collectionToAppend</Name><Comment><![CDATA[The collection to be appended]]></Comment><Type Namespace="CNM_CollectionInterfaces">ICollection</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>dequeue</Name><Comment><![CDATA[

short summary
=================
This property returns the last object in the first and removes it from the list. Can be seen as opposite of prepend.
Example:
On a list: (Head -->) A B C, list.dequeue will return A.
Example 2:
If you call prepend(x), a dequeue right after will return x.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">IObject</ReturnType><ReturnBitSize>64</ReturnBitSize></Method><Method><Name>pop</Name><Comment><![CDATA[

short summary
=================
This property returns the last object in the list and removes it from the list. Can be seen as opposite of append.
Example:
On a list: (Head -->) A B C, list.pop will return C.
Example 2:
If you call append(x), a pop right after will return x.
May return a null pointer if list is empty

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">IObject</ReturnType><ReturnBitSize>64</ReturnBitSize></Method><Method><Name>prepend</Name><Comment><![CDATA[

short summary
=================
This methode adds the given obejct to the end of the list.
Example: 
Given a list that looks like this: (Head->) A B C (<- End),
calling prepend(D) on this list will place the D at start,
making it the new Head: (Head->) D A B C (<- End)

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``SingleExecutionResult.SUCCESS``: prepend was successful
	``SingleExecutionResult.ERROR``: allocation of memory for new object failed
	
]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>object</Name><Comment><![CDATA[The object to be prepended]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>prependCollection</Name><Comment><![CDATA[

short summary
=================
This methode adds all elements of the given collection to the start of this list. 
Example:
For the list1: A B C and list2: D E F will be after list1.prependCollection(list2):
D E F A B C. Notice the elements are still in the same order they where befor on each subsection.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``SingleExecutionResult.SUCCESS``: prependCollection was successful
	``SingleExecutionResult.ERROR``: could not allocate memory for all new elements, list is left unchanged

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>collectionToPrepend</Name><Comment><![CDATA[The collection to be prepended]]></Comment><Type Namespace="CNM_CollectionInterfaces">ICollection</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>remove</Name><Comment><![CDATA[

short summary
=================
This methode removes the first instance of the given object from the list.
Compares objects with hash value.
For example a Linked List: A B C A A D will on remove(A) becomes: B C A A D

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>object</Name><Comment><![CDATA[The object to be removed from the list]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter></Method><Properties><Property><Name>TcPlcInterfaceId</Name><Value>397</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_CollectionInterfaces">ISortable</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_AbstractObject">IObject</ExtendsType><Method><Name>inverseSort</Name><Comment><![CDATA[

short summary
=================
This method sorts the Sortable in the inverted order, so from great to low
.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: ``ABORTED``: While inverse was pending,execute had a falling edge,
	``BUSY``: Inverse is in progress
	``ERROR``: Inverse was not able to finish (p.e. List changed) call inverse(false) to reset
	``IDLE``: Currently invert is not in progress
	``SUCCESS``: Inversing was finished 
]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the inverting, needs to be active until the ExecutionState is noz longer busy]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter></Method><Method><Name>sort</Name><Comment><![CDATA[

short summary
=================
This method sorts the data structure. 
This can take many cycles and should be called until the CNM_ReturnTypes.ExecutionState is no longer ``BUSY``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``ABORTED``: While sort was pending,execute had a falling edge,
	``BUSY``: Sort is in progress
	``ERROR``: Sort was not able to finish (p.e. List changed) call sort(false) to reset
	``IDLE``: Currently no sort in progress
	``SUCCESS``: Sorting was finished 

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the sorting, needs to be active until the ExecutionState is SUCCESS]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter></Method><Method><Name>sortWithComparator</Name><Comment><![CDATA[

short summary
=================
This method sorts the data structure. 
It uses the passed Comperator to sort the structure.
This can take many cycles and should be called until the CNM_ReturnTypes.ExecutionState is no longer ``BUSY``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``ABORTED``: While sort was pending,execute had a falling edge,
	``BUSY``: Sort is in progress
	``ERROR``: Sort was not able to finish (p.e. List changed) call sort(false) to reset
	``IDLE``: Currently no sort in progress
	``SUCCESS``: Sorting was finished 

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the sorting, needs to be active until the ExecutionState is SUCCESS]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>comparator</Name><Comment><![CDATA[the comparator that should be used for the sort. Must not be changed while sort is in process]]></Comment><Type Namespace="CNM_AbstractObject">IComparator</Type><BitSize>64</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_CollectionInterfaces">IArrayList</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_CollectionInterfaces">IList</ExtendsType><Method><Name>setSorter</Name><Comment><![CDATA[

short summary
=================
This methode can replace the default sorter for a custom one. Check :ref:`IListSorter`
Can be used for performant sorting algorithms if more about the data structure is known.

.. attention:: 
	For implementations: **IListSorter is an empty interface and you should extend it with custom interfaces for each type of list.**
	For LinkedList see :ref:`ILinkedListSorter`. 
	Your implementation should then use this extended interface and the setter should check for compability. 
	
.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``THIS^`` :ref:`IList`

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">ISortable</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>sorter</Name><Comment><![CDATA[The instance of the sorter to be used to sort the list]]></Comment><Type Namespace="CNM_CollectionInterfaces">IArrayListSorter</Type><BitSize>64</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_CollectionInterfaces">IObjectWrapper</ExtendsType><Method><Name>__getnext</Name><Comment><![CDATA[

short summary
=================
This property returns the next element that is linked to this element.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getprevious</Name><Comment><![CDATA[

short summary
=================
This property returns the previous element that is linked to this element. Previous element next should be THIS^ object.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setnext</Name><Comment><![CDATA[

short summary
=================
This property returns the next element that is linked to this element.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Parameter><Name>next</Name><Comment><![CDATA[

short summary
=================
This property returns the next element that is linked to this element.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setprevious</Name><Comment><![CDATA[

short summary
=================
This property returns the previous element that is linked to this element. Previous element next should be THIS^ object.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Parameter><Name>previous</Name><Comment><![CDATA[

short summary
=================
This property returns the previous element that is linked to this element. Previous element next should be THIS^ object.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method></DataType><DataType><Name Namespace="CNM_CollectionInterfaces">ILinkedListSorter</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_CollectionInterfaces">IListSorter</ExtendsType><Method><Name>inverseSort</Name><Comment><![CDATA[

short summary
=================
This method sorts the Sortable in the inverted order, so from great to low
.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: ``ABORTED``: While inverse was pending,execute had a falling edge,
	``BUSY``: Inverse is in progress
	``ERROR``: Inverse was not able to finish (p.e. List changed) call inverse(false) to reset
	``IDLE``: Currently invert is not in progress
	``SUCCESS``: Inversing was finished 
]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the inverting, needs to be active until the ExecutionState is noz longer busy]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>size</Name><Comment><![CDATA[The size of the list to be sorted]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>head</Name><Comment><![CDATA[The first element in the list, must be set on every call to current head of list.]]></Comment><Type Namespace="CNM_CollectionInterfaces" ReferenceTo="true">IDoublyLinkedElement</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter><Parameter><Name>last</Name><Comment><![CDATA[The last element of the list after sorting, may be useful for doublelinked structures]]></Comment><Type Namespace="CNM_CollectionInterfaces" ReferenceTo="true">IDoublyLinkedElement</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter></Method><Method><Name>sort</Name><Comment><![CDATA[

short summary
=================
This method sorts the data structure. 
This can take many cycles and should be called until the CNM_ReturnTypes.ExecutionState is no longer ``BUSY``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``ABORTED``: While sort was pending,execute had a falling edge,
	``BUSY``: Sort is in progress
	``ERROR``: Sort was not able to finish (p.e. List changed) call sort(false) to reset
	``IDLE``: Currently no sort in progress
	``SUCCESS``: Sorting was finished 

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the sorting, needs to be active until the ExecutionState is SUCCESS]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>size</Name><Comment><![CDATA[The size of the list to be sorted]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>head</Name><Comment><![CDATA[The first element in the list, must be set on every call to current head of list.]]></Comment><Type Namespace="CNM_CollectionInterfaces" ReferenceTo="true">IDoublyLinkedElement</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter><Parameter><Name>last</Name><Comment><![CDATA[The last element of the list after sorting, may be useful for doublelinked structures]]></Comment><Type Namespace="CNM_CollectionInterfaces" ReferenceTo="true">IDoublyLinkedElement</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter></Method><Method><Name>sortWithComparator</Name><Comment><![CDATA[

short summary
=================
This method sorts the data structure. 
It uses the passed Comperator to sort the structure.
This can take many cycles and should be called until the CNM_ReturnTypes.ExecutionState is no longer ``BUSY``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``ABORTED``: While sort was pending,execute had a falling edge,
	``BUSY``: Sort is in progress
	``ERROR``: Sort was not able to finish (p.e. List changed) call sort(false) to reset
	``IDLE``: Currently no sort in progress
	``SUCCESS``: Sorting was finished 

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the sorting, needs to be active until the ExecutionState is SUCCESS]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>size</Name><Comment><![CDATA[The size of the list to be sorted]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>comparator</Name><Comment><![CDATA[the comparator that should be used for the sort. Must not be changed while sort is in process]]></Comment><Type Namespace="CNM_AbstractObject">IComparator</Type><BitSize>64</BitSize></Parameter><Parameter><Name>head</Name><Comment><![CDATA[The first element in the list, must be set on every call to current head of list.]]></Comment><Type Namespace="CNM_CollectionInterfaces" ReferenceTo="true">IDoublyLinkedElement</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter><Parameter><Name>last</Name><Comment><![CDATA[The last element of the list after sorting, may be useful for doublelinked structures]]></Comment><Type Namespace="CNM_CollectionInterfaces" ReferenceTo="true">IDoublyLinkedElement</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter></Method></DataType><DataType><Name Namespace="CNM_CollectionInterfaces">ILinkedList</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_CollectionInterfaces">IList</ExtendsType><Method><Name>setSorter</Name><Comment><![CDATA[

short summary
=================
This methode can replace the default sorter for a custom one. Check :ref:`IListSorter`
Can be used for performant sorting algorithms if more about the data structure is known.

.. attention:: 
	For implementations: **IListSorter is an empty interface and you should extend it with custom interfaces for each type of list.**
	For LinkedList see :ref:`ILinkedListSorter`. 
	Your implementation should then use this extended interface and the setter should check for compability. 
	
.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>s
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``THIS^`` :ref:`IList`

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">ISortable</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>sorter</Name><Comment><![CDATA[The instance of the sorter to be used to sort the list]]></Comment><Type Namespace="CNM_CollectionInterfaces">ILinkedListSorter</Type><BitSize>64</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_CollectionInterfaces">IIterator</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_AbstractObject">IObject</ExtendsType><Method><Name>__getcurrent</Name><Comment><![CDATA[

short summary
=================
This property returns the current element which the iterator points to.

example
=================
WHILE(iterator.moveNext())DO
	iterator.current.foo();
	iterator.current.bar();
END_WHILE

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">IObject</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>getNext</Name><Comment><![CDATA[

short summary
=================
This methode returns the next object from the iterator and move the iterator to it.
If there is no next object, this should return NULL.

example
=================
WHILE(iterator.hasNext())DO
	iterator.getNext().foo();
END_WHILE

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``CNM_AbstractObject.IObject``: next object in collection

]]></Comment><ReturnType Namespace="CNM_AbstractObject">IObject</ReturnType><ReturnBitSize>64</ReturnBitSize></Method><Method><Name>hasNext</Name><Comment><![CDATA[

short summary
=================
This methode returns if there exists another element to iterate to.

example
=================
WHILE(iterator.hasNext())DO
	iterator.getNext().foo();
END_WHILE

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``TRUE``: Iterator has a next object that can be fetched with getNext()
	``FALSE``: Iterator finished

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize></Method><Method><Name>iterate</Name><Comment><![CDATA[

short summary
=================
This methode returns the next object in the iteration and returns an execution state.
Example:
You have a list: 1 2 3
the first iterate call will return CNM_ReturnTypes.BUSY and object = 1
the second iterate call will return CNM_ReturnTypes.BUSY and object = 2
the third iterate call will return CNM_ReturnTypes.BUSY and object = 3
the forth iterate call will return CNM_ReturnTypes.SUCCESS and object = NULL

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``SingleExecutionState.SUCCESS``: Iteration finished, no new elements, returned NULL object
    ``SingleExecutionState.ERROR``: error during iteration
    ``SingleExecutionState.ABORT``: iteration aborted
    ``SingleExecutionState.BUSY``: returned an element and iteration in progress	
    ``SingleExecutionState.IDLE``: ready for iteration

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the sorting, needs to be active until the ExecutionState is NOT BUSY]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>object</Name><Comment><![CDATA[the object that was returned]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter></Method><Method><Name>moveNext</Name><Comment><![CDATA[

short summary
=================
This methode returns if there exists another element to iterate to, moves to it 
and sets this element as its current element.

example
=================
WHILE(iterator.moveNext())DO
	iterator.current.foo();
END_WHILE

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``TRUE``: Iterator has a next object that can be fetched with getNext()
	``FALSE``: Iterator finished

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize></Method><Method><Name>reset</Name><Comment><![CDATA[

short summary
=================
This methode resets the iterator.

example
=================
iterator.reset();
WHILE(iterator.moveNext())DO
	iterator.current.foo();
END_WHILE

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``SingleExecutionResult.SUCCESS``: reset successful
    ``SingleExecutionResult.ERROR``: error during reset
    ``SingleExecutionResult.ABORT``: iteration aborted

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize></Method></DataType><DataType><Name Namespace="CNM_CollectionInterfaces">IForEachStrategy</Name><BitSize>64</BitSize><ExtendsType GUID="{18071995-0000-0000-0000-000000000018}">PVOID</ExtendsType><Method><Name>parallel</Name><Comment><![CDATA[

short summary
=================
Method to perform a given action on all objects inside the collection.
All objects are invoked with the applier each cycle until all are done.
Needs to reset the execution flag between calls.
If at any point the applier returns an error the foreach stops and returns an error.
Action to perform needs to implement :ref:`IApplier`.
Example:
You have a list of numbers: 1 2 3 and a ConcreteIncrementApplier that can take  a number and increment it. 
Calling list.forEach(TRUE, ConcreteIncrementApplier) will increment all numbers in the list, becoming: 2 3 4.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: CNM_ReturnTypes.ExecutionState

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the forEach loop]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>applier</Name><Comment><![CDATA[the applier (action) to be used on all obejcts in the collection]]></Comment><Type Namespace="CNM_CollectionInterfaces">IApplier</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>serial</Name><Comment><![CDATA[

short summary
=================
Method to perform a given action on all objects inside the collection.
Objects are invoked with the applier in order until done, only then is the next invoked.
Order is defined by the default iterator.
If at any point the applier returns an error the foreach stops and returns an error.
Needs to reset the execution flag between calls.
Action to perform needs to implement :ref:`IApplier`.
Example:
You have a list of numbers: 1 2 3 and a ConcreteIncrementApplier that can take  a number and increment it. 
Calling list.forEach(TRUE, ConcreteIncrementApplier) will increment all numbers in the list, becoming: 2 3 4.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: CNM_ReturnTypes.ExecutionState

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the forEach loop]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>applier</Name><Comment><![CDATA[the applier (action) to be used on all obejcts in the collection]]></Comment><Type Namespace="CNM_CollectionInterfaces">IApplier</Type><BitSize>64</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_CollectionInterfaces">ForEachStrategyExecutor</Name><Comment><![CDATA[

short summary
=================
An class to implement parallel and serial foreach strategies.

.. <warning>

Uses the iterate function of the attached collection and will thus conflict with other parallel foreach and iterate statements.

.. </warning>

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

methods and properties
=========================

]]></Comment><BitSize>832</BitSize><Implements Namespace="CNM_CollectionInterfaces">IForEachStrategy</Implements><SubItem><Name>usedCollection</Name><Type Namespace="CNM_CollectionInterfaces">ICollection</Type><BitSize>64</BitSize><BitOffs>128</BitOffs></SubItem><SubItem><Name>ForEachStrategyExecutor_803__parallel_814__object</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize><BitOffs>192</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>ForEachStrategyExecutor_803__parallel_814__applierIndex</Name><Type>LWORD</Type><BitSize>64</BitSize><BitOffs>256</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>ForEachStrategyExecutor_803__parallel_814__lastExecute</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>320</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>ForEachStrategyExecutor_803__parallel_814__step</Name><Type>USINT</Type><BitSize>8</BitSize><BitOffs>328</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>ForEachStrategyExecutor_803__parallel_814__returnState</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><BitOffs>336</BitOffs><Default><EnumText>SingleExecutionState.IDLE</EnumText></Default><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>ForEachStrategyExecutor_803__parallel_814__returnStateObjects</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><BitOffs>352</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>ForEachStrategyExecutor_803__parallel_814__returnStateApply</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><BitOffs>368</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>ForEachStrategyExecutor_803__parallel_814__returnStateAppiers</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><BitOffs>384</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>ForEachStrategyExecutor_803__parallel_814__currentApplier</Name><Type Namespace="CNM_CollectionInterfaces">IApplier</Type><BitSize>64</BitSize><BitOffs>448</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>ForEachStrategyExecutor_803__serial_815__object</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize><BitOffs>512</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>ForEachStrategyExecutor_803__serial_815__applierIndex</Name><Type>LWORD</Type><BitSize>64</BitSize><BitOffs>576</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>ForEachStrategyExecutor_803__serial_815__lastExecute</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>640</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>ForEachStrategyExecutor_803__serial_815__step</Name><Type>USINT</Type><BitSize>8</BitSize><BitOffs>648</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>ForEachStrategyExecutor_803__serial_815__returnState</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><BitOffs>656</BitOffs><Default><EnumText>SingleExecutionState.IDLE</EnumText></Default><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>ForEachStrategyExecutor_803__serial_815__returnStateObjects</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><BitOffs>672</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>ForEachStrategyExecutor_803__serial_815__returnStateApply</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><BitOffs>688</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>ForEachStrategyExecutor_803__serial_815__returnStateAppiers</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><BitOffs>704</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>ForEachStrategyExecutor_803__serial_815__currentApplier</Name><Type Namespace="CNM_CollectionInterfaces">IApplier</Type><BitSize>64</BitSize><BitOffs>768</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><Method><Name>serial</Name><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the forEach loop]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>applier</Name><Comment><![CDATA[the applier (action) to be used on all obejcts in the collection]]></Comment><Type Namespace="CNM_CollectionInterfaces">IApplier</Type><BitSize>64</BitSize></Parameter><Local><Name>continueForeach</Name><Type>BOOL</Type><BitSize>8</BitSize></Local><Local><Name>object</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>FOREACHSTRATEGYEXECUTOR_803__SERIAL_815__OBJECT</Value></Property></Properties></Local><Local><Name>applierIndex</Name><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>FOREACHSTRATEGYEXECUTOR_803__SERIAL_815__APPLIERINDEX</Value></Property></Properties></Local><Local><Name>lastExecute</Name><Type>BOOL</Type><BitSize>8</BitSize><Properties><Property><Name>uselocation</Name><Value>FOREACHSTRATEGYEXECUTOR_803__SERIAL_815__LASTEXECUTE</Value></Property></Properties></Local><Local><Name>step</Name><Type>USINT</Type><BitSize>8</BitSize><Properties><Property><Name>uselocation</Name><Value>FOREACHSTRATEGYEXECUTOR_803__SERIAL_815__STEP</Value></Property></Properties></Local><Local><Name>returnState</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><Properties><Property><Name>uselocation</Name><Value>FOREACHSTRATEGYEXECUTOR_803__SERIAL_815__RETURNSTATE</Value></Property></Properties></Local><Local><Name>returnStateObjects</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><Properties><Property><Name>uselocation</Name><Value>FOREACHSTRATEGYEXECUTOR_803__SERIAL_815__RETURNSTATEOBJECTS</Value></Property></Properties></Local><Local><Name>returnStateApply</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><Properties><Property><Name>uselocation</Name><Value>FOREACHSTRATEGYEXECUTOR_803__SERIAL_815__RETURNSTATEAPPLY</Value></Property></Properties></Local><Local><Name>returnStateAppiers</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><Properties><Property><Name>uselocation</Name><Value>FOREACHSTRATEGYEXECUTOR_803__SERIAL_815__RETURNSTATEAPPIERS</Value></Property></Properties></Local><Local><Name>currentApplier</Name><Type Namespace="CNM_CollectionInterfaces">IApplier</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>FOREACHSTRATEGYEXECUTOR_803__SERIAL_815__CURRENTAPPLIER</Value></Property></Properties></Local><Local><Name>STEP_IDLE</Name><Type>USINT</Type><BitSize>8</BitSize></Local><Local><Name>STEP_GET_APPLIER</Name><Type>USINT</Type><BitSize>8</BitSize></Local><Local><Name>STEP_GET_OBJECT</Name><Type>USINT</Type><BitSize>8</BitSize></Local><Local><Name>STEP_APPLY</Name><Type>USINT</Type><BitSize>8</BitSize></Local><Local><Name>STEP_DONE</Name><Type>USINT</Type><BitSize>8</BitSize></Local><Local><Name>STEP_ERROR</Name><Type>USINT</Type><BitSize>8</BitSize></Local><Local><Name>STEP_ABORT</Name><Type>USINT</Type><BitSize>8</BitSize></Local></Method><Method><Name>parallel</Name><Comment><![CDATA[

short summary
=================
Method to perform a given action on all objects inside the collection.
All objects are invoked with the applier each cycle until all are done.
Needs to reset the execution flag between calls.
If at any point the applier returns an error the foreach stops and returns an error.
Action to perform needs to implement :ref:`IApplier`.
Example:
You have a list of numbers: 1 2 3 and a ConcreteIncrementApplier that can take  a number and increment it. 
Calling list.forEach(TRUE, ConcreteIncrementApplier) will increment all numbers in the list, becoming: 2 3 4.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: CNM_ReturnTypes.ExecutionState




example
=================
myIntCollectionInstance.foreach.parallel(execute := false);
myIntCollectionInstance.foreach.parallel(execute := true, applier := double);

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the forEach loop]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>applier</Name><Comment><![CDATA[the applier (action) to be used on all obejcts in the collection]]></Comment><Type Namespace="CNM_CollectionInterfaces">IApplier</Type><BitSize>64</BitSize></Parameter><Local><Name>continueForeach</Name><Type>BOOL</Type><BitSize>8</BitSize></Local><Local><Name>object</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>FOREACHSTRATEGYEXECUTOR_803__PARALLEL_814__OBJECT</Value></Property></Properties></Local><Local><Name>applierIndex</Name><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>FOREACHSTRATEGYEXECUTOR_803__PARALLEL_814__APPLIERINDEX</Value></Property></Properties></Local><Local><Name>lastExecute</Name><Type>BOOL</Type><BitSize>8</BitSize><Properties><Property><Name>uselocation</Name><Value>FOREACHSTRATEGYEXECUTOR_803__PARALLEL_814__LASTEXECUTE</Value></Property></Properties></Local><Local><Name>step</Name><Type>USINT</Type><BitSize>8</BitSize><Properties><Property><Name>uselocation</Name><Value>FOREACHSTRATEGYEXECUTOR_803__PARALLEL_814__STEP</Value></Property></Properties></Local><Local><Name>returnState</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><Properties><Property><Name>uselocation</Name><Value>FOREACHSTRATEGYEXECUTOR_803__PARALLEL_814__RETURNSTATE</Value></Property></Properties></Local><Local><Name>returnStateObjects</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><Properties><Property><Name>uselocation</Name><Value>FOREACHSTRATEGYEXECUTOR_803__PARALLEL_814__RETURNSTATEOBJECTS</Value></Property></Properties></Local><Local><Name>returnStateApply</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><Properties><Property><Name>uselocation</Name><Value>FOREACHSTRATEGYEXECUTOR_803__PARALLEL_814__RETURNSTATEAPPLY</Value></Property></Properties></Local><Local><Name>returnStateAppiers</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><Properties><Property><Name>uselocation</Name><Value>FOREACHSTRATEGYEXECUTOR_803__PARALLEL_814__RETURNSTATEAPPIERS</Value></Property></Properties></Local><Local><Name>currentApplier</Name><Type Namespace="CNM_CollectionInterfaces">IApplier</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>FOREACHSTRATEGYEXECUTOR_803__PARALLEL_814__CURRENTAPPLIER</Value></Property></Properties></Local><Local><Name>STEP_IDLE</Name><Type>USINT</Type><BitSize>8</BitSize></Local><Local><Name>STEP_GET_APPLIER</Name><Type>USINT</Type><BitSize>8</BitSize></Local><Local><Name>STEP_APPLY</Name><Type>USINT</Type><BitSize>8</BitSize></Local><Local><Name>STEP_DONE</Name><Type>USINT</Type><BitSize>8</BitSize></Local><Local><Name>STEP_ERROR</Name><Type>USINT</Type><BitSize>8</BitSize></Local><Local><Name>STEP_ABORT</Name><Type>USINT</Type><BitSize>8</BitSize></Local></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_CollectionInterfaces">AbstractCollection</Name><Comment><![CDATA[

short summary
=================
An abstract class to implement most basic Collection functions for use in other Collections.
Users still need to implement iterate and clear, as these depend on the data-stucture.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

methods and properties
=========================

]]></Comment><BitSize>3968</BitSize><ExtendsType Namespace="CNM_AbstractObject">Object</ExtendsType><Implements Namespace="CNM_CollectionInterfaces">ICollection</Implements><SubItem><Name>collectionSize</Name><Type>LWORD</Type><BitSize>64</BitSize><BitOffs>3008</BitOffs></SubItem><SubItem><Name>changesToCollection</Name><Type GUID="{18071995-0000-0000-0000-000000000018}">PVOID</Type><BitSize>64</BitSize><BitOffs>3072</BitOffs></SubItem><SubItem><Name>AbstractCollection_780____getforEach_786__executor</Name><Type Namespace="CNM_CollectionInterfaces">ForEachStrategyExecutor</Type><BitSize>832</BitSize><BitOffs>3136</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name Static="true">collectionFactory</Name><Type Namespace="CNM_CollectionInterfaces">ICollectionFactory</Type><BitSize>64</BitSize></SubItem><Method><Name>getNewIterator</Name><ReturnType Namespace="CNM_CollectionInterfaces">IIterator</ReturnType><ReturnBitSize>64</ReturnBitSize></Method><Method><Name>__gethasElement</Name><Comment><![CDATA[

short summary
=================
This property returns ``TRUE`` if the collection has any element.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Local><Name>hasElement</Name><Type>BOOL</Type><BitSize>8</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getforEach</Name><ReturnType Namespace="CNM_CollectionInterfaces">IForEachStrategy</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>forEach</Name><Type Namespace="CNM_CollectionInterfaces">IForEachStrategy</Type><BitSize>64</BitSize></Local><Local><Name>executor</Name><Type Namespace="CNM_CollectionInterfaces">ForEachStrategyExecutor</Type><BitSize>832</BitSize><Properties><Property><Name>uselocation</Name><Value>ABSTRACTCOLLECTION_780____GETFOREACH_786__EXECUTOR</Value></Property></Properties></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>iterate</Name><Comment><![CDATA[

short summary
=================
This methode returns the next object in the iteration and returns an execution state.
Example:
You have a list: 1 2 3
the first iterate call will return CNM_ReturnTypes.BUSY and object = 1
the second iterate call will return CNM_ReturnTypes.BUSY and object = 2
the third iterate call will return CNM_ReturnTypes.BUSY and object = 3
the fourth iterate call will return CNM_ReturnTypes.SUCCESS and object = null;

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: ``SUCCESS``: if last object from collection was returned,
    ``ABORTED``: execute has a falling edge during iterate,
    ``BUSY``: When iterate had rising edge on execute and not all objects had been returned yet,
    ``IDLE``: iterate not in progress, execute is false and iterate resetted

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[Indicates if the iteration should be executed or resetted]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>object</Name><Comment><![CDATA[The current Object of the Iteration]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter></Method><Method><Name>clear</Name><Comment><![CDATA[

short summary
=================
This methode clears/deletes all clearable data from this object.
Example:
A list: 1 2 3 after list.clear() will have no remaining items, isEmpty = true.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment></Method><Method><Name>__getsize</Name><Comment><![CDATA[

short summary
=================
This property returns the number of elements inside this collection.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType>LWORD</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>size</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getisEmpty</Name><Comment><![CDATA[

short summary
=================
This property returns ``TRUE`` if the collection is empty.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Local><Name>isEmpty</Name><Type>BOOL</Type><BitSize>8</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>containsObject</Name><Comment><![CDATA[

short summary
=================
This methode checks if a given object is contained in the collection.
The object is inside if the collection contains an object of equal hashcode!

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``FALSE``: list does not contain given object,
    ``TRUE``: list does contain given object

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Parameter><Name>object</Name><Comment><![CDATA[the object to be checked if it exists inside the collection]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Local><Name>currentObj</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Local><Name>state</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize></Local></Method><Method><Name>containsEqualObject</Name><Comment><![CDATA[

short summary
=================
This methode checks if a given object is contained in the collection. 
The object is inside if the collection contains an object where the default comperator of the objects returns EQUAL on compareTo!

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``FALSE``: list does not contain an equal object
    ``TRUE``: list does contain an equal object

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Parameter><Name>object</Name><Comment><![CDATA[the object to be checked if it exists inside the collection]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Local><Name>currentObj</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Local><Name>state</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize></Local></Method><Method><Name>__getclassName</Name><Comment><![CDATA[

short summary
=================
This abstract property returns the class name of the concrete object, 
which is useful to check the class name for ``__DELETE``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">ClassName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Local><Name>className</Name><Type Namespace="CNM_AbstractObject">ClassName</Type><BitSize>2048</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_Collections">InstantListExecutor</Name><Comment><![CDATA[

short summary
=================
The implementation of a class to instantly(in one call) finish the execution of an otherwise cyclic call with busy state.
This class is meant to provide this instant fuctionallity to an IList given during initialization.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

methods and properties
=========================

]]></Comment><BitSize>256</BitSize><Implements Namespace="CNM_CollectionInterfaces">IInstantList</Implements><Implements Namespace="CNM_CollectionInterfaces">IInstantForEachStrategy</Implements><SubItem><Name>usedList</Name><Type Namespace="CNM_CollectionInterfaces">IList</Type><BitSize>64</BitSize><BitOffs>192</BitOffs></SubItem><Method><Name>inverseSort</Name><Comment><![CDATA[

short summary
=================
This method sorts the List in the inverted order, so from great to low
This will only take one cycle

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return:	``ABORTED``: While inverse was pending,execute had a falling edge,
	``ERROR``: Inverse was not able to finish (p.e. List changed) call inverse(false) to reset
	``SUCCESS``: Inversing was finished 

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Local><Name>baseReturnState</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize></Local></Method><Method><Name>sort</Name><Comment><![CDATA[

short summary
=================
This methode sorts the List using the .compareTo Methode of the objects within it.
This will only take one cycle

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``CNM_SingleExecutionResult``: the state of the sorting

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Local><Name>baseReturnState</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize></Local></Method><Method><Name>serial</Name><Comment><![CDATA[

short summary
=================
Method to perform a given action on all objects inside the collection.
Objects are invoked with the applier in order until done, only then is the next invoked.
Order is defined by the default iterator.
If at any point the applier returns an error the foreach stops and returns an error.
Needs to reset the execution flag between calls.
Action to perform needs to implement :ref:`IApplier`.
Example:
You have a list of numbers: 1 2 3 and a ConcreteIncrementApplier that can take  a number and increment it. 
Calling list.forEach(TRUE, ConcreteIncrementApplier) will increment all numbers in the list, becoming: 2 3 4.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: CNM_ReturnTypes.ExecutionState

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>applier</Name><Comment><![CDATA[the applier (action) to be used on all obejcts in the collection]]></Comment><Type Namespace="CNM_CollectionInterfaces">IApplier</Type><BitSize>64</BitSize></Parameter><Local><Name>baseReturnState</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize></Local></Method><Method><Name>__getforEach</Name><ReturnType Namespace="CNM_CollectionInterfaces">IInstantForEachStrategy</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>forEach</Name><Type Namespace="CNM_CollectionInterfaces">IInstantForEachStrategy</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>sortWithComparator</Name><Comment><![CDATA[

short summary
=================
This method sorts the list. 
It uses the passed Comperator to do that.
This will only take one cycle

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``ABORTED``: While sort was pending,execute had a falling edge,
	``ERROR``: Sort was not able to finish (p.e. List changed) call sort(false) to reset
	``SUCCESS``: Sorting was finished 

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>comparator</Name><Comment><![CDATA[the comparator that should be used for the sort. Must not be changed while sort is in process]]></Comment><Type Namespace="CNM_AbstractObject">IComparator</Type><BitSize>64</BitSize></Parameter><Local><Name>baseReturnState</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize></Local></Method><Method><Name>parallel</Name><Comment><![CDATA[

short summary
=================
Method to perform a given action on all objects inside the collection.
All objects are invoked with the applier each cycle until all are done.
Needs to reset the execution flag between calls.
If at any point the applier returns an error the foreach stops and returns an error.
Action to perform needs to implement :ref:`IApplier`.
Example:
You have a list of numbers: 1 2 3 and a ConcreteIncrementApplier that can take  a number and increment it. 
Calling list.forEach(TRUE, ConcreteIncrementApplier) will increment all numbers in the list, becoming: 2 3 4.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: CNM_ReturnTypes.ExecutionState

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>applier</Name><Comment><![CDATA[the applier (action) to be used on all obejcts in the collection]]></Comment><Type Namespace="CNM_CollectionInterfaces">IApplier</Type><BitSize>64</BitSize></Parameter><Local><Name>baseReturnState</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize></Local></Method><Method><Name>stateToResult</Name><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>state</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize></Parameter></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_Collections">AbstractList</Name><Comment><![CDATA[

short summary
=================
An abstract class to implement a few very simple list methods which are not dependent on the data structure.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

methods and properties
=========================

]]></Comment><BitSize>5376</BitSize><ExtendsType Namespace="CNM_CollectionInterfaces">AbstractCollection</ExtendsType><Implements Namespace="CNM_CollectionInterfaces">IList</Implements><SubItem><Name>AbstractList_752____getinstant_759__executor</Name><Type Namespace="CNM_Collections">InstantListExecutor</Type><BitSize>256</BitSize><BitOffs>5120</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><Method><Name>__getclassName</Name><Comment><![CDATA[

short summary
=================
This abstract property returns the class name of the concrete object, 
which is useful to check the class name for ``__DELETE``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">ClassName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Local><Name>className</Name><Type Namespace="CNM_AbstractObject">ClassName</Type><BitSize>2048</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>prepend</Name><Comment><![CDATA[

short summary
=================
This methode adds the given obejct to the end of the list.
Example: 
Given a list that looks like this: (Head->) A B C (<- End),
calling prepend(D) on this list will place the D at start,
making it the new Head: (Head->) D A B C (<- End)

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``CNM_ReturnTypes.SingleExecutionResult.SUCCESS``: prepend was successful
	``CNM_ReturnTypes.SingleExecutionResult.ERROR``: allocation of memory for new object failed
	
]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>object</Name><Comment><![CDATA[The object to be prepended]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>pop</Name><Comment><![CDATA[

short summary
=================
This property returns the last object in the list and removes it from the list. Can be seen as opposite of append.
Example:
On a list: (Head -->) A B C, list.pop will return C.
Example 2:
If you call append(x), a pop right after will return x.
May return a null pointer if list is empty

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">IObject</ReturnType><ReturnBitSize>64</ReturnBitSize></Method><Method><Name>getClonedInstance</Name><Comment><![CDATA[

short summary
=================
creates a new listinstance from the Type THIS^ has. 
If THIS^ has a valid sorter, it is cloned as well and set to the new Instance.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
return: ``SUCCESS``: new instance (and sorter) was created
	``FAILED``: Allocation of new instance (or sorter) was not possible
	``CLONE_NOT_SUPPORTED``: The sorter currently used by THIS^ can not be cloned.
	
]]></Comment><ReturnType Namespace="CNM_ReturnTypes">CloneResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>clonedList</Name><Type Namespace="CNM_CollectionInterfaces">IList</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter></Method><Method><Name>dequeue</Name><Comment><![CDATA[

short summary
=================
This property returns the last object in the first and removes it from the list. Can be seen as opposite of prepend.
Example:
On a list: (Head -->) A B C, list.dequeue will return A.
Example 2:
If you call prepend(x), a dequeue right after will return x.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">IObject</ReturnType><ReturnBitSize>64</ReturnBitSize></Method><Method><Name>remove</Name><Comment><![CDATA[

short summary
=================
This methode removes the first instance of the given object from the list.
Compares objects with hash value.
For example a Linked List: A B C A A D will on remove(A) becomes: B C A A D

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>object</Name><Comment><![CDATA[The object to be removed from the list]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>prependCollection</Name><Comment><![CDATA[

short summary
=================
This methode adds all elements of the given collection to the start of this list. 
Example:
For the list1: A B C and list2: D E F will be after list1.prependCollection(list2):
D E F A B C. Notice the elements are still in the same order they where befor on each subsection.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``CNM_ReturnTypes.SingleExecutionResult.SUCCESS``: prependCollection was successful
	``CNM_ReturnTypes.SingleExecutionResult.ERROR``: could not allocate memory for all new elements, list is left unchanged

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>collectionToPrepend</Name><Comment><![CDATA[The collection to be prepended]]></Comment><Type Namespace="CNM_CollectionInterfaces">ICollection</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>getDeepClonedInstance</Name><Comment><![CDATA[

short summary
=================
creates a new listinstance from the Type THIS^ has. 
If THIS^ has a valid sorter, it is deepCloned and set to the new Instance.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
return: ``SUCCESS``: new instance (and sorter) was created
	``FAILED``: Allocation of new instance (or sorter) was not possible
	``CLONE_NOT_SUPPORTED``: The sorter currently used by THIS^ can not be deepCloned.
	
]]></Comment><ReturnType Namespace="CNM_ReturnTypes">CloneResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>deepClonedList</Name><Type Namespace="CNM_CollectionInterfaces">IList</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter></Method><Method><Name>__getinstant</Name><Comment><![CDATA[

short summary
=================
This property returns a list of methods that can be forced to be performed instantly (finished in one call), thus converting the return from a state to a result.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">IInstantList</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>instant</Name><Type Namespace="CNM_CollectionInterfaces">IInstantList</Type><BitSize>64</BitSize></Local><Local><Name>executor</Name><Type Namespace="CNM_Collections">InstantListExecutor</Type><BitSize>256</BitSize><Properties><Property><Name>uselocation</Name><Value>ABSTRACTLIST_752____GETINSTANT_759__EXECUTOR</Value></Property></Properties></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>sortWithComparator</Name><Comment><![CDATA[

short summary
=================
This method sorts the data structure. 
It uses the passed Comperator to sort the structure.
This can take many cycles and should be called until the CNM_ReturnTypes.ExecutionState is no longer ``BUSY``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``ABORTED``: While sort was pending,execute had a falling edge,
	``BUSY``: Sort is in progress
	``ERROR``: Sort was not able to finish (p.e. List changed) call sort(false) to reset
	``IDLE``: Currently no sort in progress
	``SUCCESS``: Sorting was finished 

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the sorting, needs to be active until the ExecutionState is SUCCESS]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>comparator</Name><Comment><![CDATA[the comparator that should be used for the sort. Must not be changed while sort is in process]]></Comment><Type Namespace="CNM_AbstractObject">IComparator</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>clone</Name><Comment><![CDATA[

short summary
=================
This method is used to create a new instance
of the object which has the same internal state as the object.
If the object is a container class, the references to the content objects
are not cloned for this there is the method `ICloneable.deepClone`.

If an object does not support cloning the return value is
``CNM_ReturnTypes.CloneResult.CLONE_IS_NOT_SUPPORTED``.

If there is not enough memory or the cloning fails because the
attribute enable dynamic creation was forgotten the return value is 
``CNM_ReturnTypes.CloneResult.FAILED``.

Only if the return value is ``CNM_ReturnTypes.CloneResult.SUCCESS``
the output ``clonedObject`` points to the new object
otherwise ``clonedObject`` is NULL.  

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return:``CNM_ReturnTypes.CloneResult.SUCCESS``: new object clone was created,
``CNM_ReturnTypes.CloneResult.FAILED``: object clone failed
``CNM_ReturnTypes.CloneResult.CLONE_IS_NOT_SUPPORTED``: object does not support cloning

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">CloneResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>clonedObject</Name><Comment><![CDATA[ new object instance or NULL if somthing went wrong ]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Local><Name>clonedList</Name><Type Namespace="CNM_CollectionInterfaces">IList</Type><BitSize>64</BitSize></Local><Local><Name>objectToInsert</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Local><Name>clonedSorter</Name><Type Namespace="CNM_CollectionInterfaces">IListSorter</Type><BitSize>64</BitSize></Local></Method><Method><Name>invert</Name><Comment><![CDATA[

short summary
=================
Inverts the order of the elements inside the object. Does not apply any kind of sorting, only reverses.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================

]]></Comment></Method><Method><Name>inverseSort</Name><Comment><![CDATA[

short summary
=================
This method sorts the Sortable in the inverted order, so from great to low
.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: ``ABORTED``: While inverse was pending,execute had a falling edge,
	``BUSY``: Inverse is in progress
	``ERROR``: Inverse was not able to finish (p.e. List changed) call inverse(false) to reset
	``IDLE``: Currently invert is not in progress
	``SUCCESS``: Inversing was finished 
]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the inverting, needs to be active until the ExecutionState is noz longer busy]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter></Method><Method><Name>sort</Name><Comment><![CDATA[

short summary
=================
This method sorts the data structure. 
This can take many cycles and should be called until the CNM_ReturnTypes.ExecutionState is no longer ``BUSY``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``ABORTED``: While sort was pending,execute had a falling edge,
	``BUSY``: Sort is in progress
	``ERROR``: Sort was not able to finish (p.e. List changed) call sort(false) to reset
	``IDLE``: Currently no sort in progress
	``SUCCESS``: Sorting was finished 

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the sorting, needs to be active until the ExecutionState is SUCCESS]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter></Method><Method><Name>appendCollection</Name><Comment><![CDATA[

short summary
=================
This methode adds all elements of the given collection to the end of this list.
Example:
For the list1: A B C and list2: D E F will be after list1.appendCollection(list2):
A B C D E F. Notice the elements are still in the same order they where befor on each subsection.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>collectionToAppend</Name><Comment><![CDATA[The collection to be appended]]></Comment><Type Namespace="CNM_CollectionInterfaces">ICollection</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>append</Name><Comment><![CDATA[

short summary
=================
This methode adds the given CNM_AbstractObject.IObject to the end of the list.
Example: 
Given a list that looks like this: (Head->) A B C (<- End),
calling append(D) on this list will place the D at the and,
making it the new End: (Head->) A B C D(<- End)

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>object</Name><Comment><![CDATA[The object to be appended]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>deepClone</Name><Comment><![CDATA[

short summary
=================
This method is used to create a new instance
of the object which has the same internal state as the object.
If the object is a container class, the references to the content objects
are cloned too.

If an object does not support cloning the return value is
``CNM_ReturnTypes.CloneResult.CLONE_IS_NOT_SUPPORTED``.

If there is not enough memory or the cloning fails because the
attribute enable dynamic creation was forgotten the return value is 
``CNM_ReturnTypes.CloneResult.FAILED``.
If something goes wrong, then this method must clean up everything
that has been cloned and free the memory again.
**The deepClone either works completely, or not at all**

Only if the return value is ``CNM_ReturnTypes.CloneResult.SUCCESS``
the output ``clonedObject`` points to the new object
otherwise ``clonedObject`` is NULL.  

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return:``CNM_ReturnTypes.CloneResult.SUCCESS``: new object clone was created,
``CNM_ReturnTypes.CloneResult.FAILED``: object clone failed
``CNM_ReturnTypes.CloneResult.CLONE_IS_NOT_SUPPORTED``: object does not support deep cloning

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">CloneResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>clonedObject</Name><Comment><![CDATA[ new object instance or NULL if somthing went wrong ]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Local><Name>clonedList</Name><Type Namespace="CNM_CollectionInterfaces">IList</Type><BitSize>64</BitSize></Local><Local><Name>objectToInsert</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Local><Name>clonedSorter</Name><Type Namespace="CNM_CollectionInterfaces">IListSorter</Type><BitSize>64</BitSize></Local></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_CollectionInterfaces">AbstractIterator</Name><Comment><![CDATA[

short summary
=================
An abstract class to implement most basic iterator functions for use in custom Iterators.
Users still need to implement iterate and hasNext, as these depend on the data-stucture.
Iterate should take care to assign ``THIS^.current`` in their iterate implementation.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

methods and properties
=========================

]]></Comment><BitSize>2688</BitSize><ExtendsType Namespace="CNM_AbstractObject">Object</ExtendsType><Implements Namespace="CNM_CollectionInterfaces">IIterator</Implements><SubItem><Name>currentObject</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize><BitOffs>2624</BitOffs></SubItem><Method><Name>reset</Name><Comment><![CDATA[

short summary
=================
This methode resets the iterator.

example
=================
iterator.reset();
WHILE(iterator.moveNext())DO
	iterator.current.foo();
END_WHILE

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``SingleExecutionResult.SUCCESS``: reset successful
    ``SingleExecutionResult.ERROR``: error during reset
    ``SingleExecutionResult.ABORT``: iteration aborted

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize></Method><Method><Name>hasNext</Name><Comment><![CDATA[

short summary
=================
This methode returns if there exists another element to iterate to.

example
=================
WHILE(iterator.hasNext())DO
	iterator.getNext().foo();
END_WHILE

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``TRUE``: Iterator has a next object that can be fetched with getNext()
	``FALSE``: Iterator finished

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize></Method><Method><Name>getNext</Name><Comment><![CDATA[

short summary
=================
This methode returns the next object from the iterator and move the iterator to it.
If there is no next object, this should return NULL.

example
=================
WHILE(iterator.hasNext())DO
	iterator.getNext().foo();
END_WHILE

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``CNM_AbstractObject.IObject``: next object in collection

]]></Comment><ReturnType Namespace="CNM_AbstractObject">IObject</ReturnType><ReturnBitSize>64</ReturnBitSize></Method><Method><Name>iterate</Name><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>object</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter></Method><Method><Name>moveNext</Name><Comment><![CDATA[

short summary
=================
This methode returns if there exists another element to iterate to, moves to it 
and sets this element as its current element.

example
=================
WHILE(iterator.moveNext())DO
	iterator.current.foo();
END_WHILE

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``TRUE``: Iterator has a next object that can be fetched with getNext()
	``FALSE``: Iterator finished

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize></Method><Method><Name>__getcurrent</Name><Comment><![CDATA[

short summary
=================
This property returns the current element which the iterator points to.

example
=================
WHILE(iterator.moveNext())DO
	iterator.current.foo();
	iterator.current.bar();
END_WHILE

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">IObject</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>current</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setcurrent</Name><Comment><![CDATA[

short summary
=================
This property returns the current element which the iterator points to.

example
=================
WHILE(iterator.moveNext())DO
	iterator.current.foo();
	iterator.current.bar();
END_WHILE

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Parameter><Name>current</Name><Comment><![CDATA[

short summary
=================
This property returns the current element which the iterator points to.

example
=================
WHILE(iterator.moveNext())DO
	iterator.current.foo();
	iterator.current.bar();
END_WHILE

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_Collections">ILinkedListIterator</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_CollectionInterfaces">IIterator</ExtendsType><Method><Name>attachLinkedList</Name><Comment><![CDATA[

short summary
=================
This methode attaches an array list to the iterator.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``CNM_ReturnTypes.SingleExecutionResult.SUCCESS``: the list could be attached to the iterator

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>list</Name><Comment><![CDATA[ The list to be attached. Should be of type ``CNM_CollectionInterfaces.IArrayList`` ]]></Comment><Type Namespace="CNM_CollectionInterfaces">ILinkedList</Type><BitSize>64</BitSize></Parameter></Method><Properties><Property><Name>TcPlcInterfaceId</Name><Value>881</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_Collections">AbstractLinkedListIterator</Name><BitSize>3008</BitSize><ExtendsType Namespace="CNM_CollectionInterfaces">AbstractIterator</ExtendsType><Implements Namespace="CNM_Collections">ILinkedListIterator</Implements><SubItem><Name>currentElement</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize><BitOffs>2944</BitOffs></SubItem><Method><Name>__getsize</Name><ReturnType>LWORD</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>size</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>attachLinkedList</Name><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>list</Name><Type Namespace="CNM_CollectionInterfaces">ILinkedList</Type><BitSize>64</BitSize></Parameter><Local><Name>ptmp</Name><Type Namespace="CNM_Collections" PointerTo="1">LinkedList</Type><BitSize>64</BitSize></Local></Method><Method><Name>__gethead</Name><ReturnType Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>head</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getchanges</Name><ReturnType>LWORD</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>changes</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getlast</Name><ReturnType Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>last</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_Collections">DefaultLinkedListIterator</Name><BitSize>3136</BitSize><ExtendsType Namespace="CNM_Collections">AbstractLinkedListIterator</ExtendsType><SubItem><Name>lastChangeVersion</Name><Type>LWORD</Type><BitSize>64</BitSize><BitOffs>3008</BitOffs></SubItem><SubItem><Name>lastExecute</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>3072</BitOffs></SubItem><Method><Name>iterate</Name><Comment><![CDATA[

short summary
=================
This methode returns the next object in the iteration and returns an execution state.
Example:
You have a list: 1 2 3
the first iterate call will return CNM_ReturnTypes.BUSY and object = 1
the second iterate call will return CNM_ReturnTypes.BUSY and object = 2
the third iterate call will return CNM_ReturnTypes.BUSY and object = 3
the forth iterate call will return CNM_ReturnTypes.SUCCESS and object = NULL

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``SingleExecutionState.SUCCESS``: Iteration finished, no new elements, returned NULL object
    ``SingleExecutionState.ERROR``: error during iteration
    ``SingleExecutionState.ABORT``: iteration aborted
    ``SingleExecutionState.BUSY``: returned an element and iteration in progress	
    ``SingleExecutionState.IDLE``: ready for iteration

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>object</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter></Method><Method><Name>hasNext</Name><Comment><![CDATA[

short summary
=================
This methode returns if there exists another element to iterate to.

example
=================
WHILE(iterator.hasNext())DO
	iterator.getNext().foo();
END_WHILE

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``TRUE``: Iterator has a next object that can be fetched with getNext()
	``FALSE``: Iterator finished

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize></Method><Method><Name>__getclassName</Name><ReturnType Namespace="CNM_AbstractObject">ClassName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Local><Name>className</Name><Type Namespace="CNM_AbstractObject">ClassName</Type><BitSize>2048</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property><Property><Name>VTableOffset</Name><Value>1332520</Value></Property><Property><Name>VfInitVTableIndex</Name><Value>23</Value></Property><Property><Name>enable_dynamic_creation</Name></Property></Properties></DataType><DataType><Name Namespace="CNM_CollectionInterfaces">AbstractLinkedListSorter</Name><Comment><![CDATA[

short summary
=================
Abstract Baseclass for LinkedListSorters.
Handles the head and last properties as well as the clone.
.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

methods and properties
=========================

]]></Comment><BitSize>3392</BitSize><ExtendsType Namespace="CNM_CollectionInterfaces">AbstractListSorter</ExtendsType><Implements Namespace="CNM_CollectionInterfaces">ILinkedListSorter</Implements><SubItem><Name>sorterHead</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize><BitOffs>3264</BitOffs></SubItem><SubItem><Name>sorterLast</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize><BitOffs>3328</BitOffs></SubItem><Method><Name>inverseSort</Name><Comment><![CDATA[

short summary
=================
This method sorts the Sortable in the inverted order, so from great to low
.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: ``ABORTED``: While inverse was pending,execute had a falling edge,
	``BUSY``: Inverse is in progress
	``ERROR``: Inverse was not able to finish (p.e. List changed) call inverse(false) to reset
	``IDLE``: Currently invert is not in progress
	``SUCCESS``: Inversing was finished 
]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the inverting, needs to be active until the ExecutionState is noz longer busy]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>size</Name><Comment><![CDATA[The size of the list to be sorted]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>head</Name><Comment><![CDATA[The first element in the list, must be set on every call to current head of list.]]></Comment><Type Namespace="CNM_CollectionInterfaces" ReferenceTo="true">IDoublyLinkedElement</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter><Parameter><Name>last</Name><Comment><![CDATA[The last element of the list after sorting, may be useful for doublelinked structures]]></Comment><Type Namespace="CNM_CollectionInterfaces" ReferenceTo="true">IDoublyLinkedElement</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter></Method><Method><Name>sort</Name><Comment><![CDATA[

short summary
=================
This method sorts the data structure. 
This can take many cycles and should be called until the CNM_ReturnTypes.ExecutionState is no longer ``BUSY``.
Call with execute := FALSE to initialize before sort.
.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``ABORTED``: While sort was pending,execute had a falling edge,
	``BUSY``: Sort is in progress
	``ERROR``: Sort was not able to finish (p.e. List changed) call sort(false) to reset
	``IDLE``: Currently no sort in progress
	``SUCCESS``: Sorting was finished 

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the sorting, needs to be active until the ExecutionState is SUCCESS]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>size</Name><Comment><![CDATA[The size of the list to be sorted]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>head</Name><Comment><![CDATA[The first element in the list, must be set on every call to current head of list.]]></Comment><Type Namespace="CNM_CollectionInterfaces" ReferenceTo="true">IDoublyLinkedElement</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter><Parameter><Name>last</Name><Comment><![CDATA[The last element of the list after sorting, may be useful for doublelinked structures]]></Comment><Type Namespace="CNM_CollectionInterfaces" ReferenceTo="true">IDoublyLinkedElement</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter><Local><Name>OBJECT_NOT_REFERENCED</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>sortWithComparator</Name><Comment><![CDATA[

short summary
=================
This method sorts the data structure. 
It uses the passed Comperator to sort the structure.
This can take many cycles and should be called until the CNM_ReturnTypes.ExecutionState is no longer ``BUSY``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``ABORTED``: While sort was pending,execute had a falling edge,
	``BUSY``: Sort is in progress
	``ERROR``: Sort was not able to finish (p.e. List changed) call sort(false) to reset
	``IDLE``: Currently no sort in progress
	``SUCCESS``: Sorting was finished 

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the sorting, needs to be active until the ExecutionState is SUCCESS]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>size</Name><Comment><![CDATA[The size of the list to be sorted]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>comparator</Name><Comment><![CDATA[the comparator that should be used for the sort. Must not be changed while sort is in process]]></Comment><Type Namespace="CNM_AbstractObject">IComparator</Type><BitSize>64</BitSize></Parameter><Parameter><Name>head</Name><Comment><![CDATA[The first element in the list, must be set on every call to current head of list.]]></Comment><Type Namespace="CNM_CollectionInterfaces" ReferenceTo="true">IDoublyLinkedElement</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter><Parameter><Name>last</Name><Comment><![CDATA[The last element of the list after sorting, may be useful for doublelinked structures]]></Comment><Type Namespace="CNM_CollectionInterfaces" ReferenceTo="true">IDoublyLinkedElement</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_Collections">LinkedListMergeSorter</Name><Comment><![CDATA[

short summary
=================
Implementation of an Inplace Mergesorter for the LinkedList

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

methods and properties
=========================

]]></Comment><BitSize>3904</BitSize><ExtendsType Namespace="CNM_CollectionInterfaces">AbstractLinkedListSorter</ExtendsType><SubItem><Name>LinkedListMergeSorter_885__sortWithComparator_900__lastExecute</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>3392</BitOffs><Default><Bool>false</Bool></Default><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>LinkedListMergeSorter_885__sortWithComparator_900__executing</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>3400</BitOffs><Default><Bool>false</Bool></Default><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>LinkedListMergeSorter_885__sortWithComparator_900__state</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><BitOffs>3408</BitOffs><Default><EnumText>SingleExecutionState.IDLE</EnumText></Default><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>LinkedListMergeSorter_885__sortWithComparator_900__leftElementToMerge</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize><BitOffs>3456</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>LinkedListMergeSorter_885__sortWithComparator_900__rightElementToMerge</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize><BitOffs>3520</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>LinkedListMergeSorter_885__sortWithComparator_900__mergesThisRun</Name><Type>LWORD</Type><Comment><![CDATA[How many merges were made during traversing list from left to right]]></Comment><BitSize>64</BitSize><BitOffs>3584</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>LinkedListMergeSorter_885__sortWithComparator_900__mergeSize</Name><Type>LWORD</Type><BitSize>64</BitSize><BitOffs>3648</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>LinkedListMergeSorter_885__sortWithComparator_900__mergeSizeLeft</Name><Type>LWORD</Type><BitSize>64</BitSize><BitOffs>3712</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>LinkedListMergeSorter_885__sortWithComparator_900__mergeSizeRight</Name><Type>LWORD</Type><BitSize>64</BitSize><BitOffs>3776</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>LinkedListMergeSorter_885__sortWithComparator_900__index</Name><Type>LWORD</Type><BitSize>64</BitSize><BitOffs>3840</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><Method><Name>moveRemainingElements</Name><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Parameter><Name>remainingElements</Name><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>lastRemainder</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Parameter><Parameter><Name>elementToMerge</Name><Type Namespace="CNM_CollectionInterfaces" ReferenceTo="true">IDoublyLinkedElement</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter><Parameter><Name>mergeHead</Name><Type Namespace="CNM_CollectionInterfaces" ReferenceTo="true">IDoublyLinkedElement</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter><Parameter><Name>mergeLast</Name><Type Namespace="CNM_CollectionInterfaces" ReferenceTo="true">IDoublyLinkedElement</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter><Parameter><Name>operationsCount</Name><Type ReferenceTo="true">LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter></Method><Method><Name>clone</Name><Comment><![CDATA[

short summary
=================
This method is used to create a new instance
of the object which has the same internal state as the object.
If the object is a container class, the references to the content objects
are not cloned for this there is the method `ICloneable.deepClone`.

If an object does not support cloning the return value is
``CNM_ReturnTypes.CloneResult.CLONE_IS_NOT_SUPPORTED``.

If there is not enough memory or the cloning fails because the
attribute enable dynamic creation was forgotten the return value is 
``CNM_ReturnTypes.CloneResult.FAILED``.

Only if the return value is ``CNM_ReturnTypes.CloneResult.SUCCESS``
the output ``clonedObject`` points to the new object
otherwise ``clonedObject`` is NULL.  

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return:``CNM_ReturnTypes.CloneResult.SUCCESS``: new object clone was created,
``CNM_ReturnTypes.CloneResult.FAILED``: object clone failed
``CNM_ReturnTypes.CloneResult.CLONE_IS_NOT_SUPPORTED``: object does not support cloning

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">CloneResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>clonedObject</Name><Comment><![CDATA[ new object instance or NULL if somthing went wrong ]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Local><Name>newSorter</Name><Type Namespace="CNM_Collections" PointerTo="1">LinkedListMergeSorter</Type><BitSize>64</BitSize></Local></Method><Method><Name>merge</Name><Comment><![CDATA[

short summary
=================
Does an inplace ordered Merge of two list sections, that are defined by their first object and the length of the section.
Merge is achived by updating the links of the elements.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: CNM_ReturnTypes.ExecutionState: the state of the merge, 
	SUCCESS if list is merged from left to right bound, 
	BUSY if list not completly merged, needs to be called again.

]]></Comment><Parameter><Name>mergeSizeLeft</Name><Comment><![CDATA[how many elements are in the left section]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>mergeSizeRight</Name><Comment><![CDATA[how many elements are in the right section]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>mergeHead</Name><Comment><![CDATA[The updated head of the list that is beeing merged]]></Comment><Type Namespace="CNM_CollectionInterfaces" ReferenceTo="true">IDoublyLinkedElement</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter><Parameter><Name>mergeLast</Name><Comment><![CDATA[The updated last of the list that is beeing merged]]></Comment><Type Namespace="CNM_CollectionInterfaces" ReferenceTo="true">IDoublyLinkedElement</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter><Parameter><Name>leftElement</Name><Comment><![CDATA[the first element of the left section]]></Comment><Type Namespace="CNM_CollectionInterfaces" ReferenceTo="true">IDoublyLinkedElement</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter><Parameter><Name>rightElement</Name><Comment><![CDATA[ the first element of the right section]]></Comment><Type Namespace="CNM_CollectionInterfaces" ReferenceTo="true">IDoublyLinkedElement</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter><Parameter><Name>comparesThisCycle</Name><Comment><![CDATA[The amount of already performed compares this cycle]]></Comment><Type ReferenceTo="true">LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter><Local><Name>remainElementsLeft</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Local><Name>remainElementsRight</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Local><Name>elementToMerge</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Local><Local><Name>lastLeftElement</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Local><Local><Name>OBJECT_NOT_REFERENCED</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>sortWithComparator</Name><Comment><![CDATA[

short summary
=================
This method sorts the data structure. 
It uses the passed Comperator to sort the structure.
This can take many cycles and should be called until the CNM_ReturnTypes.ExecutionState is no longer ``BUSY``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``ABORTED``: While sort was pending,execute had a falling edge,
	``BUSY``: Sort is in progress
	``ERROR``: Sort was not able to finish (p.e. List changed) call sort(false) to reset
	``IDLE``: Currently no sort in progress
	``SUCCESS``: Sorting was finished 

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the sorting, needs to be active until the ExecutionState is SUCCESS]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>size</Name><Comment><![CDATA[The size of the list to be sorted]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>comparator</Name><Comment><![CDATA[the comparator that should be used for the sort. Must not be changed while sort is in process]]></Comment><Type Namespace="CNM_AbstractObject">IComparator</Type><BitSize>64</BitSize></Parameter><Parameter><Name>head</Name><Comment><![CDATA[The first element in the list, must be set on every call to current head of list.]]></Comment><Type Namespace="CNM_CollectionInterfaces" ReferenceTo="true">IDoublyLinkedElement</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter><Parameter><Name>last</Name><Comment><![CDATA[The last element of the list after sorting, may be useful for doublelinked structures]]></Comment><Type Namespace="CNM_CollectionInterfaces" ReferenceTo="true">IDoublyLinkedElement</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter><Local><Name>lastExecute</Name><Type>BOOL</Type><BitSize>8</BitSize><Properties><Property><Name>uselocation</Name><Value>LINKEDLISTMERGESORTER_885__SORTWITHCOMPARATOR_900__LASTEXECUTE</Value></Property></Properties></Local><Local><Name>executing</Name><Type>BOOL</Type><BitSize>8</BitSize><Properties><Property><Name>uselocation</Name><Value>LINKEDLISTMERGESORTER_885__SORTWITHCOMPARATOR_900__EXECUTING</Value></Property></Properties></Local><Local><Name>state</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><Properties><Property><Name>uselocation</Name><Value>LINKEDLISTMERGESORTER_885__SORTWITHCOMPARATOR_900__STATE</Value></Property></Properties></Local><Local><Name>leftElementToMerge</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>LINKEDLISTMERGESORTER_885__SORTWITHCOMPARATOR_900__LEFTELEMENTTOMERGE</Value></Property></Properties></Local><Local><Name>rightElementToMerge</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>LINKEDLISTMERGESORTER_885__SORTWITHCOMPARATOR_900__RIGHTELEMENTTOMERGE</Value></Property></Properties></Local><Local><Name>mergesThisRun</Name><Comment><![CDATA[How many merges were made during traversing list from left to right]]></Comment><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>LINKEDLISTMERGESORTER_885__SORTWITHCOMPARATOR_900__MERGESTHISRUN</Value></Property></Properties></Local><Local><Name>mergeSize</Name><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>LINKEDLISTMERGESORTER_885__SORTWITHCOMPARATOR_900__MERGESIZE</Value></Property></Properties></Local><Local><Name>mergeSizeLeft</Name><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>LINKEDLISTMERGESORTER_885__SORTWITHCOMPARATOR_900__MERGESIZELEFT</Value></Property></Properties></Local><Local><Name>mergeSizeRight</Name><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>LINKEDLISTMERGESORTER_885__SORTWITHCOMPARATOR_900__MERGESIZERIGHT</Value></Property></Properties></Local><Local><Name>index</Name><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>LINKEDLISTMERGESORTER_885__SORTWITHCOMPARATOR_900__INDEX</Value></Property></Properties></Local><Local><Name>comparesThisCycle</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Local><Name>OBJECT_NOT_REFERENCED</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>__getclassName</Name><Comment><![CDATA[

short summary
=================
This abstract property returns the class name of the concrete object, 
which is useful to check the class name for ``__DELETE``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">ClassName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Local><Name>className</Name><Type Namespace="CNM_AbstractObject">ClassName</Type><BitSize>2048</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property><Property><Name>VTableOffset</Name><Value>1333936</Value></Property><Property><Name>VfInitVTableIndex</Name><Value>23</Value></Property><Property><Name>enable_dynamic_creation</Name></Property></Properties></DataType><DataType><Name Namespace="CNM_Collections">LinkedList</Name><Comment><![CDATA[

short summary
=================
Implementation of ILinkedList.
Does not allow empty objects as data!

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

methods and properties
=========================

]]></Comment><BitSize>6848</BitSize><ExtendsType Namespace="CNM_Collections">AbstractList</ExtendsType><Implements Namespace="CNM_CollectionInterfaces">ILinkedList</Implements><SubItem><Name>headElement</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize><BitOffs>6528</BitOffs></SubItem><SubItem><Name>lastElement</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize><BitOffs>6592</BitOffs></SubItem><SubItem><Name>sorter</Name><Type Namespace="CNM_CollectionInterfaces">ILinkedListSorter</Type><BitSize>64</BitSize><BitOffs>6656</BitOffs></SubItem><SubItem><Name>privateSorter</Name><Type>BOOL</Type><Comment><![CDATA[true if the sorter were created inside this list, false if set from outside]]></Comment><BitSize>8</BitSize><BitOffs>6720</BitOffs></SubItem><SubItem><Name>listChangedDuringSort</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>6728</BitOffs><Default><Bool>false</Bool></Default></SubItem><SubItem><Name>listChangedIterate</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>6736</BitOffs><Default><Bool>false</Bool></Default></SubItem><SubItem><Name>LinkedList_705__iterate_741__lastExecute</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>6744</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>LinkedList_705__iterate_741__executing</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>6752</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>LinkedList_705__iterate_741__state</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><BitOffs>6768</BitOffs><Default><EnumText>SingleExecutionState.IDLE</EnumText></Default><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>LinkedList_705__iterate_741__currentElement</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize><BitOffs>6784</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><Method><Name>__sethead</Name><Parameter><Name>head</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>findObject</Name><Comment><![CDATA[

short summary
=================
Searches the containerobject, that contains a specific Element that is passed to the method.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: The (first) IDoublyLinkedElement that contains the ``object``, NULL if ``object`` is not contained in the list

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>object</Name><Comment><![CDATA[The object to search for]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Local><Name>element</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Local><Local><Name>IS_NOT_REFERENCED</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>swapElementDirection</Name><Comment><![CDATA[

short summary
=================
Changes ``next`` and ``previous`` of a given element.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>element</Name><Comment><![CDATA[The element that should be updated]]></Comment><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Parameter><Local><Name>tempElement</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Local></Method><Method><Name>remove</Name><Comment><![CDATA[

short summary
=================
This methode removes the first occurrence of the given object from the list.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>object</Name><Comment><![CDATA[The object to be removed from the list]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Local><Name>element</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Local></Method><Method><Name>setSorter</Name><Comment><![CDATA[

short summary
=================
This methode can replace the default sorter for a custom one. Check ``IListSorter``
	
.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``THIS`` :``ISortable``

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">ISortable</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>sorter</Name><Comment><![CDATA[The instance of the sorter to be used to sort the list]]></Comment><Type Namespace="CNM_CollectionInterfaces">ILinkedListSorter</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>iterate</Name><Comment><![CDATA[

short summary
=================
This methode returns the next object in the iteration and returns an execution state.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``SUCCESS``: if last object from collection was returned,
	``ABORTED``: execute has a falling edge during iterate,
	``BUSY``: When iterate had rising edge on execute and not all objects had been returned yet
	``IDLE``: iterate not in progress, execute is false and iterate reseted 

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[False to init, True to retrieve next element]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>object</Name><Comment><![CDATA[The current element of the iteration]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Local><Name>lastExecute</Name><Type>BOOL</Type><BitSize>8</BitSize><Properties><Property><Name>uselocation</Name><Value>LINKEDLIST_705__ITERATE_741__LASTEXECUTE</Value></Property></Properties></Local><Local><Name>executing</Name><Type>BOOL</Type><BitSize>8</BitSize><Properties><Property><Name>uselocation</Name><Value>LINKEDLIST_705__ITERATE_741__EXECUTING</Value></Property></Properties></Local><Local><Name>state</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><Properties><Property><Name>uselocation</Name><Value>LINKEDLIST_705__ITERATE_741__STATE</Value></Property></Properties></Local><Local><Name>currentElement</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>LINKEDLIST_705__ITERATE_741__CURRENTELEMENT</Value></Property></Properties></Local><Local><Name>IS_NOT_REFERENCED</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>append</Name><Comment><![CDATA[

short summary
=================
This methode adds the given object to the end of the list.
Adding NULL-Objects or THIS^ to the list is not possible.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``CNM_ReturnTypes.SingleExecutionResult.SUCCESS``: prepend was successful
	``CNM_ReturnTypes.SingleExecutionResult.ERROR``: allocation of container for new element failed, list not changed 

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>object</Name><Comment><![CDATA[The object to be appended]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Local><Name>newElement</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Local><Local><Name>IS_NOT_REFERENCED</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>__getlast</Name><ReturnType Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>last</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>announceListChange</Name><Comment><![CDATA[

short summary
=================
This method is called every time the list changes and can notify other components.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================

]]></Comment></Method><Method><Name>__getclassName</Name><Comment><![CDATA[

short summary
=================
This abstract property returns the class name of the concrete object, 
which is useful to check the class name for ``__DELETE``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">ClassName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Local><Name>className</Name><Type Namespace="CNM_AbstractObject">ClassName</Type><BitSize>2048</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>sort</Name><Comment><![CDATA[

short summary
=================
This methode sorts the implementing data structure. This can take many cycles and should be called until the ``ExecutionState`` is no longer ``BUSY``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``ExecutionState``: the state of the sorting

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the sorting, needs to be active until the ExecutionState is SUCCESS]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Local><Name>OBJECT_NOT_REFERENCED</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>appendCollection</Name><Comment><![CDATA[

short summary
=================
This methode adds all elements of the given collection to the end of this list.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``CNM_ReturnTypes.SingleExecutionResult.SUCCESS``: prependCollection was successful
	``CNM_ReturnTypes.SingleExecutionResult.ERROR``: could not allocate container for all new elements, list is left unchanged

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>collectionToAppend</Name><Comment><![CDATA[The collection to be appended]]></Comment><Type Namespace="CNM_CollectionInterfaces">ICollection</Type><BitSize>64</BitSize></Parameter><Local><Name>collectionElement</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Local><Name>oldLast</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Local><Local><Name>destructElement</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Local><Local><Name>nextElement</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Local></Method><Method><Name>__setlast</Name><Parameter><Name>last</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>clear</Name><Comment><![CDATA[

short summary
=================
This methode clears all elements from this list. 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Local><Name>currentElement</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Local><Local><Name>elementToDelete</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Local><Local><Name>IS_NOT_REFERENCED</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>getNewIterator</Name><Comment><![CDATA[

short summary
=================
This methode returns a NEW Iterator instance which can iterate the collection.
These iterators can be used in parallel to each other.

.. <warning>

The created Iterator was created using the __NEW operator and must be destructed to avoid memory leaks!

.. </warning>

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">IIterator</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>newIterator</Name><Type Namespace="CNM_Collections" PointerTo="1">DefaultLinkedListIterator</Type><BitSize>64</BitSize></Local></Method><Method><Name>dequeue</Name><Comment><![CDATA[

short summary
=================
This property returns the last object in the first and removes it from the list. Can be seen as opposite of prepend.
Example:
On a list: (Head -->) A B C, list.dequeue will return A.
Example 2:
If you call prepend(x), a dequeue right after will return x.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">IObject</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>oldHead</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Local><Local><Name>IS_NOT_REFERENCED</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>insertBehind</Name><Comment><![CDATA[

short summary
=================
Unlinks the passed ``element`` from the list and reinserts it after ``newPrevious`` All Links are updated.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>element</Name><Comment><![CDATA[The element that should be repositioned]]></Comment><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Parameter><Parameter><Name>newPrevious</Name><Comment><![CDATA[The element after that the element should be reinserted]]></Comment><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Parameter><Parameter><Name>next</Name><Comment><![CDATA[The original previous element of ``elemnt``]]></Comment><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Local><Name>oldNext</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Local><Local><Name>newNext</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Local><Local><Name>oldPrevious</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Local><Local><Name>IS_NOT_REFERENCED</Name><Type>ULINT</Type><BitSize>64</BitSize></Local></Method><Method><Name>destructLinkedElement</Name><Comment><![CDATA[

short summary
=================
Destructs the passed element. Next and Previous Element are relinked to prevent gaps. Also takes care that head / last are updated if necessary

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>element</Name><Comment><![CDATA[The element that should be destructed]]></Comment><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>linkElement</Name><Comment><![CDATA[

short summary
=================
Links the passed element together with the other two passed element
Does not only adds the links to element, but also sets next.previous to element and previous.next to element,
to ensure a consistent list

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>previous</Name><Comment><![CDATA[the element that should be set as previous element]]></Comment><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Parameter><Parameter><Name>element</Name><Comment><![CDATA[The element that should be new linked]]></Comment><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Parameter><Parameter><Name>next</Name><Comment><![CDATA[The element that should be used as next element]]></Comment><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Parameter><Local><Name>IS_NOT_REFERENCED</Name><Type>ULINT</Type><BitSize>64</BitSize></Local></Method><Method><Name>inverseSort</Name><Comment><![CDATA[

short summary
=================
This method sorts the Sortable in the inverted order, so from great to low
.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: ``ABORTED``: While inverse was pending,execute had a falling edge,
	``BUSY``: Inverse is in progress
	``ERROR``: Inverse was not able to finish (p.e. List changed) call inverse(false) to reset
	``IDLE``: Currently invert is not in progress
	``SUCCESS``: Inversing was finished 
	
]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the inverting, needs to be active until the ExecutionState is noz longer busy]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Local><Name>privateSorter</Name><Type Namespace="CNM_Collections" PointerTo="1">LinkedListMergeSorter</Type><BitSize>64</BitSize></Local><Local><Name>linkedHead</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Local><Local><Name>linkedLast</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Local></Method><Method><Name>__gethead</Name><ReturnType Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>head</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>getDeepClonedInstance</Name><Comment><![CDATA[

short summary
=================
creates a new listinstance from the Type THIS^ has. 
If THIS^ has a valid sorter, it is deepCloned and set to the new Instance.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
return: ``SUCCESS``: new instance (and sorter) was created
	``FAILED``: Allocation of new instance (or sorter) was not possible
	``CLONE_NOT_SUPPORTED``: The sorter currently used by THIS^ can not be deepCloned.
	
]]></Comment><ReturnType Namespace="CNM_ReturnTypes">CloneResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>deepClonedList</Name><Comment><![CDATA[the new listinstance]]></Comment><Type Namespace="CNM_CollectionInterfaces">IList</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Local><Name>newInstance</Name><Type Namespace="CNM_CollectionInterfaces">ILinkedList</Type><BitSize>64</BitSize></Local><Local><Name>clonedSorter</Name><Type Namespace="CNM_CollectionInterfaces">ILinkedListSorter</Type><BitSize>64</BitSize></Local><Local><Name>clonedSorterObject</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local></Method><Method><Name>getClonedInstance</Name><Comment><![CDATA[

short summary
=================
creates a new listinstance from the Type THIS^ has. 
If THIS^ has a valid sorter, it is cloned as well and set to the new Instance.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
return: ``SUCCESS``: new instance (and sorter) was created
	``FAILED``: Allocation of new instance (or sorter) was not possible
	``CLONE_NOT_SUPPORTED``: The sorter currently used by THIS^ can not be cloned.
	
]]></Comment><ReturnType Namespace="CNM_ReturnTypes">CloneResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>clonedList</Name><Comment><![CDATA[the new listinstance]]></Comment><Type Namespace="CNM_CollectionInterfaces">IList</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Local><Name>newInstance</Name><Type Namespace="CNM_CollectionInterfaces">ILinkedList</Type><BitSize>64</BitSize></Local><Local><Name>clonedSorter</Name><Type Namespace="CNM_CollectionInterfaces">ILinkedListSorter</Type><BitSize>64</BitSize></Local><Local><Name>clonedSorterObject</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local></Method><Method><Name>prependCollection</Name><Comment><![CDATA[

short summary
=================
This methode adds all elements of the given collection to the start of this list. 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``CNM_ReturnTypes.SingleExecutionResult.SUCCESS``: prependCollection was successful
	``CNM_ReturnTypes.SingleExecutionResult.ERROR``: could not allocate container for all new elements, list is left unchanged

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>collectionToPrepend</Name><Comment><![CDATA[The collection to be prepended]]></Comment><Type Namespace="CNM_CollectionInterfaces">ICollection</Type><BitSize>64</BitSize></Parameter><Local><Name>collectionElement</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Local><Name>oldHead</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Local><Local><Name>current</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Local><Local><Name>old</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Local><Local><Name>newElement</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Local><Local><Name>IS_NOT_REFERENCED</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>decrementSize</Name><Comment><![CDATA[

short summary
=================
Reduces the collectionsize by one

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment></Method><Method><Name>isSortFinished</Name><Comment><![CDATA[

short summary
=================
Tests if the sort is done. This method is specific for the ``internalSort`` Method. 
Does not iterate the list and checks order!

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``TRUE``: sort is completed ``FALSE``: sort is not done yet

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Parameter><Name>element</Name><Comment><![CDATA[The element that is currently considered in sortmethod]]></Comment><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Parameter><Parameter><Name>retVal</Name><Comment><![CDATA[BUSY if not done, SUCCESS if sort is done]]></Comment><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Local><Name>IS_NOT_REFERENCED</Name><Type>ULINT</Type><BitSize>64</BitSize></Local></Method><Method><Name>pop</Name><Comment><![CDATA[

short summary
=================
This property returns the last object in the list and removes it from the list. Can be seen as opposite of append.
Example:
On a list: (Head -->) A B C, list.pop will return C.
Example 2:
If you call append(x), a pop right after will return x.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">IObject</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>oldLast</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Local><Local><Name>IS_NOT_REFERENCED</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>prepend</Name><Comment><![CDATA[

short summary
=================
This methode adds the given object as new head to the list.
Adding NULL-Objects or THIS^ to the list is not possible. 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``CNM_ReturnTypes.SingleExecutionResult.SUCCESS``: prependCollection was successful
	``CNM_ReturnTypes.SingleExecutionResult.ERROR``: could not allocate container for all new elements, list is left unchanged

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>object</Name><Comment><![CDATA[The object to be prepended]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Local><Name>newElement</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Local><Local><Name>IS_NOT_REFERENCED</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>invert</Name><Comment><![CDATA[

short summary
=================
Inverts the List, so last element becomes first.
So List A B C D will be
D C B A

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================

]]></Comment><Local><Name>currentElement</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Local><Local><Name>nextElement</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Local><Local><Name>tmpElement</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Local><Local><Name>index</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>deepDestruct</Name><Comment><![CDATA[

short summary
=================
This method is a self-destruction if the object was created dynamically.
It will also destruct all the elements contained in the list, as well as the sorter, if set.

The output NULL is a constant which is always NULL,
this allows a semi-pleasant notation: ``foo.deepDestruct(NULL => foo);``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

InOut:
	+-----------------+------+---------+------------------------------------------+
	| Scope           | Name | Type    | Comment                                  |
	+=================+======+=========+==========================================+
	| Output CONSTANT | NULL | __XWORD | ``NULL`` is a constant which is always 0 |
	+-----------------+------+---------+------------------------------------------+

]]></Comment><Parameter><Name>NULL</Name><Comment><![CDATA[ NULL is a constant which is always 0 ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Local><Name>containerElement</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Local><Local><Name>next</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Local></Method><Method><Name>insertBefore</Name><Comment><![CDATA[

short summary
=================
Unlinks the passed ``element`` from the list and reinserts it before ``newNext`` All Links are updated.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>element</Name><Comment><![CDATA[The element that will be repositioned]]></Comment><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Parameter><Parameter><Name>newNext</Name><Comment><![CDATA[The element to insert in front of ]]></Comment><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Parameter><Parameter><Name>next</Name><Comment><![CDATA[The previous element of the old element position]]></Comment><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Local><Name>oldNext</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Local><Local><Name>newPrevious</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Local><Local><Name>oldPrevious</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Local><Local><Name>IS_NOT_REFERENCED</Name><Type>ULINT</Type><BitSize>64</BitSize></Local></Method><Method><Name>__setinternalSorter</Name><Parameter><Name>internalSorter</Name><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>incrementSize</Name><Comment><![CDATA[

short summary
=================
Increments the size of the list

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment></Method><Method><Name>compareTo</Name><Comment><![CDATA[

short summary
=================
This method compares a foreign object with the own one, this is needed for sort orders.
The abstract class evaluates every object that is NULL as greater, and all other objects as equal. 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``SMALLER``: ``THIS`` precedes in order,
	``EQUAL``: ``THIS`` and ``object`` at the same position in order,
	``GREATER``: ``THIS`` is after in order.
	Checkout :``CNM_CollectionInterfaces.ComparationResult``.

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">ComparationResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>object</Name><Comment><![CDATA[the object to be compared to]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Local><Name>collection</Name><Type Namespace="CNM_CollectionInterfaces">ICollection</Type><BitSize>64</BitSize></Local></Method><Method><Name>sortWithComparator</Name><Comment><![CDATA[

short summary
=================
This method sorts the data structure. 
It uses the passed Comperator to sort the structure.
This can take many cycles and should be called until the CNM_ReturnTypes.ExecutionState is no longer ``BUSY``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``ABORTED``: While sort was pending,execute had a falling edge,
	``BUSY``: Sort is in progress
	``ERROR``: Sort was not able to finish (p.e. List changed) call sort(false) to reset
	``IDLE``: Currently no sort in progress
	``SUCCESS``: Sorting was finished 

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the sorting, needs to be active until the ExecutionState is SUCCESS]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>comparator</Name><Comment><![CDATA[the comparator that should be used for the sort. Must not be changed while sort is in process]]></Comment><Type Namespace="CNM_AbstractObject">IComparator</Type><BitSize>64</BitSize></Parameter><Local><Name>privateSorter</Name><Type Namespace="CNM_Collections" PointerTo="1">LinkedListMergeSorter</Type><BitSize>64</BitSize></Local><Local><Name>linkedHead</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Local><Local><Name>linkedLast</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Local></Method><Method><Name>unlinkElement</Name><Comment><![CDATA[

short summary
=================
Unlinks the passed element from the list and closes the gap. 
Example: unlink C
A B C D will be
A B D 


.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>element</Name><Comment><![CDATA[The element that should be unlinked for the list]]></Comment><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Parameter><Parameter><Name>oldNext</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Parameter><Name>oldPrevious</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Local><Name>IS_NOT_REFERENCED</Name><Type>ULINT</Type><BitSize>64</BitSize></Local></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property><Property><Name>VTableOffset</Name><Value>1327944</Value></Property><Property><Name>VfInitVTableIndex</Name><Value>23</Value></Property><Property><Name>enable_dynamic_creation</Name></Property></Properties></DataType><DataType><Name Namespace="CNM_Collections">ArrayListShellSorter</Name><Comment><![CDATA[

short summary
=================
This FB sorts the list using a shellsort, which has O(n^(4/3)) runtime. Slower than merge or timsort but doesn't need additional memory.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

methods and properties
=========================

]]></Comment><BitSize>3776</BitSize><ExtendsType Namespace="CNM_CollectionInterfaces">AbstractArrayListSorter</ExtendsType><SubItem><Name>ArrayListShellSorter_915__sortWithComparator_931__lastExecute</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>3264</BitOffs><Default><Bool>false</Bool></Default><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>ArrayListShellSorter_915__sortWithComparator_931__executing</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>3272</BitOffs><Default><Bool>false</Bool></Default><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>ArrayListShellSorter_915__sortWithComparator_931__state</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><BitOffs>3280</BitOffs><Default><EnumText>SingleExecutionState.IDLE</EnumText></Default><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>ArrayListShellSorter_915__sortWithComparator_931__index</Name><Type>LWORD</Type><BitSize>64</BitSize><BitOffs>3328</BitOffs><Default><Value>0</Value></Default><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>ArrayListShellSorter_915__sortWithComparator_931__columnindex</Name><Type>INT</Type><BitSize>16</BitSize><BitOffs>3392</BitOffs><Default><Value>11</Value></Default><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>ArrayListShellSorter_915__sortWithComparator_931__columnwidth</Name><Type>LWORD</Type><BitSize>64</BitSize><BitOffs>3456</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>ArrayListShellSorter_915__sortWithComparator_931__currentElementIndex</Name><Type>LWORD</Type><BitSize>64</BitSize><BitOffs>3520</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>ArrayListShellSorter_915__sortWithComparator_931__initCurrentElementIndex</Name><Type>LWORD</Type><BitSize>64</BitSize><BitOffs>3584</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>ArrayListShellSorter_915__sortWithComparator_931__insertElementIndex</Name><Type>LWORD</Type><BitSize>64</BitSize><BitOffs>3648</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>ArrayListShellSorter_915__sortWithComparator_931__tmpElement</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize><BitOffs>3712</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><Method><Name>clone</Name><Comment><![CDATA[

short summary
=================
This method is used to create a new instance
of the object which has the same internal state as the object.
If the object is a container class, the references to the content objects
are not cloned for this there is the method ``ICloneable.deepClone``.

If an object does not support cloning the return value is
``CNM_ReturnTypes.CloneResult.CLONE_IS_NOT_SUPPORTED``.

If there is not enough memory or the cloning fails because the
attribute enable dynamic creation was forgotten the return value is 
``CNM_ReturnTypes.CloneResult.FAILED``.

Only if the return value is ``CNM_ReturnTypes.CloneResult.SUCCESS``
the output ``clonedObject`` points to the new object
otherwise ``clonedObject`` is NULL.  

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``CNM_ReturnTypes.CloneResult.SUCCESS``: new object clone was created,
	``CNM_ReturnTypes.CloneResult.FAILED``: object clone failed
	``CNM_ReturnTypes.CloneResult.CLONE_IS_NOT_SUPPORTED``: object does not support cloning

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">CloneResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>clonedObject</Name><Comment><![CDATA[ new object instance or NULL if somthing went wrong ]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Local><Name>newSorter</Name><Type Namespace="CNM_Collections" PointerTo="1">ArrayListShellSorter</Type><BitSize>64</BitSize></Local><Local><Name>sorter</Name><Type Namespace="CNM_CollectionInterfaces">IArrayListSorter</Type><BitSize>64</BitSize></Local><Local><Name>object</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Local><Name>clonedComparator</Name><Type Namespace="CNM_AbstractObject">IComparator</Type><BitSize>64</BitSize></Local></Method><Method><Name>getInitialColumnwidth</Name><Comment><![CDATA[

short summary
=================
returns the first columnwidth that should be used for the shellsort, based on Sedegewicks Term from 1986
.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: The width that sould be used for the first iteration

]]></Comment><ReturnType>LWORD</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>columnindex</Name><Type>INT</Type><BitSize>16</BitSize></Parameter><Parameter><Name>size</Name><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Local><Name>columnwidth</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Local><Name>preparedColumnwidth</Name><Comment><![CDATA[sedgewicks proposal for columns on shellsort]]></Comment><Type>LWORD</Type><ArrayInfo><LBound>0</LBound><Elements>12</Elements></ArrayInfo><BitSize>768</BitSize></Local><Local><Name>__Index__0</Name><Type>DINT</Type><BitSize>32</BitSize></Local></Method><Method><Name>getNextColumnWidth</Name><Comment><![CDATA[

short summary
=================
Gets the columnwidth that should be used for the next sort iteration based on Sedgewicks Term from 1986

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: The columnwidth that should be used for the next sortiteration
 
]]></Comment><ReturnType>LWORD</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>columnindex</Name><Type>INT</Type><BitSize>16</BitSize></Parameter><Local><Name>columnwidth</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Local><Name>preparedColumnwidth</Name><Comment><![CDATA[sedgewicks proposal for columns on shellsort]]></Comment><Type>LWORD</Type><ArrayInfo><LBound>0</LBound><Elements>12</Elements></ArrayInfo><BitSize>768</BitSize></Local><Local><Name>__Index__0</Name><Type>DINT</Type><BitSize>32</BitSize></Local></Method><Method><Name>sortWithComparator</Name><Comment><![CDATA[

short summary
=================
This method sorts the data structure. 
It uses the passed Comperator to sort the structure.
This can take many cycles and should be called until the CNM_ReturnTypes.ExecutionState is no longer ``BUSY``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``ABORTED``: While sort was pending,execute had a falling edge,
	``BUSY``: Sort is in progress
	``ERROR``: Sort was not able to finish (p.e. List changed) call sort(false) to reset
	``IDLE``: Currently no sort in progress
	``SUCCESS``: Sorting was finished 

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the sorting, needs to be active until the ExecutionState is SUCCESS]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>size</Name><Comment><![CDATA[The size of the list to be sorted]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>comparator</Name><Comment><![CDATA[the comparator that should be used for the sort. Must not be changed while sort is in process]]></Comment><Type Namespace="CNM_AbstractObject">IComparator</Type><BitSize>64</BitSize></Parameter><Parameter><Name>container</Name><Comment><![CDATA[the container, that contains the list elements]]></Comment><Type Namespace="CNM_AbstractObject" PointerTo="1">IObject</Type><BitSize>64</BitSize></Parameter><Local><Name>lastExecute</Name><Type>BOOL</Type><BitSize>8</BitSize><Properties><Property><Name>uselocation</Name><Value>ARRAYLISTSHELLSORTER_915__SORTWITHCOMPARATOR_931__LASTEXECUTE</Value></Property></Properties></Local><Local><Name>executing</Name><Type>BOOL</Type><BitSize>8</BitSize><Properties><Property><Name>uselocation</Name><Value>ARRAYLISTSHELLSORTER_915__SORTWITHCOMPARATOR_931__EXECUTING</Value></Property></Properties></Local><Local><Name>state</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><Properties><Property><Name>uselocation</Name><Value>ARRAYLISTSHELLSORTER_915__SORTWITHCOMPARATOR_931__STATE</Value></Property></Properties></Local><Local><Name>index</Name><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>ARRAYLISTSHELLSORTER_915__SORTWITHCOMPARATOR_931__INDEX</Value></Property></Properties></Local><Local><Name>columnindex</Name><Type>INT</Type><BitSize>16</BitSize><Properties><Property><Name>uselocation</Name><Value>ARRAYLISTSHELLSORTER_915__SORTWITHCOMPARATOR_931__COLUMNINDEX</Value></Property></Properties></Local><Local><Name>columnwidth</Name><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>ARRAYLISTSHELLSORTER_915__SORTWITHCOMPARATOR_931__COLUMNWIDTH</Value></Property></Properties></Local><Local><Name>currentElementIndex</Name><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>ARRAYLISTSHELLSORTER_915__SORTWITHCOMPARATOR_931__CURRENTELEMENTINDEX</Value></Property></Properties></Local><Local><Name>initCurrentElementIndex</Name><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>ARRAYLISTSHELLSORTER_915__SORTWITHCOMPARATOR_931__INITCURRENTELEMENTINDEX</Value></Property></Properties></Local><Local><Name>insertElementIndex</Name><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>ARRAYLISTSHELLSORTER_915__SORTWITHCOMPARATOR_931__INSERTELEMENTINDEX</Value></Property></Properties></Local><Local><Name>tmpElement</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>ARRAYLISTSHELLSORTER_915__SORTWITHCOMPARATOR_931__TMPELEMENT</Value></Property></Properties></Local><Local><Name>leave</Name><Type>BOOL</Type><BitSize>8</BitSize></Local><Local><Name>operationsThisCycle</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Local><Name>preparedColumnwidth</Name><Type>LWORD</Type><ArrayInfo><LBound>0</LBound><Elements>12</Elements></ArrayInfo><BitSize>768</BitSize></Local><Local><Name>__Index__0</Name><Type>DINT</Type><BitSize>32</BitSize></Local></Method><Method><Name>sedgewicksColumnwidth</Name><Comment><![CDATA[

short summary
=================
Caclulates the corresponding Columnwidth for very given Index based on Sedewicks Term from 1986

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: The columnwidth corresponding with the given Index

]]></Comment><ReturnType>LWORD</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>columnindex</Name><Type>INT</Type><BitSize>16</BitSize></Parameter></Method><Method><Name>__getclassName</Name><Comment><![CDATA[

short summary
=================
This abstract property returns the class name of the concrete object, 
which is useful to check the class name for ``__DELETE``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">ClassName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Local><Name>className</Name><Type Namespace="CNM_AbstractObject">ClassName</Type><BitSize>2048</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property><Property><Name>VTableOffset</Name><Value>1334656</Value></Property><Property><Name>VfInitVTableIndex</Name><Value>23</Value></Property><Property><Name>enable_dynamic_creation</Name></Property></Properties></DataType><DataType><Name Namespace="CNM_Collections">AbstractMergeBasedSorter</Name><Comment><![CDATA[

short summary
=================
Abstract Sorter for mergebased sortmethodes. Provides a default implementation for an indexed mergefunction and a method to efficient copy elements.

.. caution::
	Due to the characteristics of a merge, a merge must be performed atomically.
	As a merge of two lists l1 and l2 can take up to l1.size+l2.size-1 compares.
	That implies that at the last cycle of the merge, an atomic operation that requires up to list.size-1 compares must be performed.
	Therefore the maxCycleCompares may be exceeded and set the maxCycleCompares to a value smaller than list.size-1 may not have the desired effect.
 
.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

methods and properties
=========================

]]></Comment><BitSize>3712</BitSize><ExtendsType Namespace="CNM_CollectionInterfaces">AbstractArrayListSorter</ExtendsType><SubItem><Name>sortBuffer</Name><Type Namespace="CNM_AbstractObject" PointerTo="1">IObject</Type><BitSize>64</BitSize><BitOffs>3264</BitOffs></SubItem><SubItem><Name>AbstractMergeBasedSorter_946__merge_959__leftPartSize</Name><Type>LWORD</Type><BitSize>64</BitSize><BitOffs>3328</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>AbstractMergeBasedSorter_946__merge_959__rightPartSize</Name><Type>LWORD</Type><BitSize>64</BitSize><BitOffs>3392</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>AbstractMergeBasedSorter_946__merge_959__leftObjectToCompare</Name><Type>LWORD</Type><BitSize>64</BitSize><BitOffs>3456</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>AbstractMergeBasedSorter_946__merge_959__rightObjectToCompare</Name><Type>LWORD</Type><BitSize>64</BitSize><BitOffs>3520</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>AbstractMergeBasedSorter_946__merge_959__mergeIndex</Name><Type>LWORD</Type><BitSize>64</BitSize><BitOffs>3584</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>AbstractMergeBasedSorter_946__merge_959__state</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><BitOffs>3648</BitOffs><Default><EnumText>SingleExecutionState.SUCCESS</EnumText></Default><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><Method><Name>copyElements</Name><Comment><![CDATA[

short summary
=================
This method is used to copy elements from one memoryarea to another. Depending on the size is chosen if ether direct, single assignment or memcpy is used.
 
.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================

]]></Comment><Parameter><Name>sourceContainer</Name><Comment><![CDATA[The source from where the elements shold be copied]]></Comment><Type Namespace="CNM_AbstractObject" PointerTo="1">IObject</Type><BitSize>64</BitSize></Parameter><Parameter><Name>destinationContainer</Name><Comment><![CDATA[The destiation where the elements should be placed]]></Comment><Type Namespace="CNM_AbstractObject" PointerTo="1">IObject</Type><BitSize>64</BitSize></Parameter><Parameter><Name>sourceStartIndex</Name><Comment><![CDATA[The index of the first element to be copied]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>destinationStartIndex</Name><Comment><![CDATA[The index here the first copied element should be placed]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>EntryAmount</Name><Comment><![CDATA[How many Elements should be copied]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>EntrySize</Name><Comment><![CDATA[How many bytes has one entry]]></Comment><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Local><Name>sourceIndex</Name><Type>UDINT</Type><BitSize>32</BitSize></Local><Local><Name>destIndex</Name><Type>UDINT</Type><BitSize>32</BitSize></Local></Method><Method><Name>merge</Name><Comment><![CDATA[

short summary
=================
Function that sorts a specified part using a merge mechanism. Interrupts merge if max Amount of comparisons is reached.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: CNM_ReturnTypes.ExecutionState: the state of the merge, 
	SUCCESS if list is merged from left to right bound, 
	BUSY if list not completly merged, needs to be called again.

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>leftBound</Name><Comment><![CDATA[First element that should be included into the merge]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>rightBound</Name><Comment><![CDATA[Last element that should be included into the merge]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>border</Name><Comment><![CDATA[Where is the border between the left and the right part (element on borderposition belongs to right part]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>container</Name><Comment><![CDATA[the container, that contains the list elements]]></Comment><Type Namespace="CNM_AbstractObject" PointerTo="1">IObject</Type><BitSize>64</BitSize></Parameter><Parameter><Name>sortBuffer</Name><Comment><![CDATA[Has to be the same size as the list and it's content is overwritten in this method]]></Comment><Type Namespace="CNM_AbstractObject" ReferenceTo="true" PointerTo="1">IObject</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter><Parameter><Name>comparesThisCycle</Name><Type ReferenceTo="true">LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter><Local><Name>leftPartSize</Name><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>ABSTRACTMERGEBASEDSORTER_946__MERGE_959__LEFTPARTSIZE</Value></Property></Properties></Local><Local><Name>rightPartSize</Name><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>ABSTRACTMERGEBASEDSORTER_946__MERGE_959__RIGHTPARTSIZE</Value></Property></Properties></Local><Local><Name>leftObjectToCompare</Name><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>ABSTRACTMERGEBASEDSORTER_946__MERGE_959__LEFTOBJECTTOCOMPARE</Value></Property></Properties></Local><Local><Name>rightObjectToCompare</Name><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>ABSTRACTMERGEBASEDSORTER_946__MERGE_959__RIGHTOBJECTTOCOMPARE</Value></Property></Properties></Local><Local><Name>mergeIndex</Name><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>ABSTRACTMERGEBASEDSORTER_946__MERGE_959__MERGEINDEX</Value></Property></Properties></Local><Local><Name>state</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><Properties><Property><Name>uselocation</Name><Value>ABSTRACTMERGEBASEDSORTER_946__MERGE_959__STATE</Value></Property></Properties></Local></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_Collections">ArrayListMergeSorter</Name><Comment><![CDATA[

short summary
=================
This FB sorts the list using a mergesort, which has O(n*log(n)) runtime. 
For random data it is a bit faster than Timsort, else Timsort should be used. Needs to allocate extra memory while sorting, same size as currentContainerSize.

.. caution::
	Due to the characteristics of a merge, a merge must be performed atomically.
	As a merge of two lists l1 and l2 can take up to l1.size compares.
	That implies that at the last cycle of the merge, an atomic operation that requires up to list.size/2 compares must be performed.
	Therefore the maxCycleCompares may be exceeded and set the maxCycleCompares to a value smaller than list.size/2 may not have the desired effect.
	
.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

methods and properties
=========================

]]></Comment><BitSize>3904</BitSize><ExtendsType Namespace="CNM_Collections">AbstractMergeBasedSorter</ExtendsType><SubItem><Name>ArrayListMergeSorter_932__sortWithComparator_945__lastExecute</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>3712</BitOffs><Default><Bool>false</Bool></Default><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>ArrayListMergeSorter_932__sortWithComparator_945__executing</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>3720</BitOffs><Default><Bool>false</Bool></Default><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>ArrayListMergeSorter_932__sortWithComparator_945__state</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><BitOffs>3728</BitOffs><Default><EnumText>SingleExecutionState.IDLE</EnumText></Default><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>ArrayListMergeSorter_932__sortWithComparator_945__currentSortSize</Name><Type>LWORD</Type><BitSize>64</BitSize><BitOffs>3776</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>ArrayListMergeSorter_932__sortWithComparator_945__startAt</Name><Type>LWORD</Type><BitSize>64</BitSize><BitOffs>3840</BitOffs><Default><Value>0</Value></Default><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><Method><Name>clone</Name><Comment><![CDATA[

short summary
=================
This method is used to create a new instance
of the object which has the same internal state as the object.
If the object is a container class, the references to the content objects
are not cloned for this there is the method ``ICloneable.deepClone``.

If an object does not support cloning the return value is
``CNM_ReturnTypes.CloneResult.CLONE_IS_NOT_SUPPORTED``.

If there is not enough memory or the cloning fails because the
attribute enable dynamic creation was forgotten the return value is 
``CNM_ReturnTypes.CloneResult.FAILED``.

Only if the return value is ``CNM_ReturnTypes.CloneResult.SUCCESS``
the output ``clonedObject`` points to the new object
otherwise ``clonedObject`` is NULL.  

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return:	``CNM_ReturnTypes.CloneResult.SUCCESS``: new object clone was created,
	``CNM_ReturnTypes.CloneResult.FAILED``: object clone failed
	``CNM_ReturnTypes.CloneResult.CLONE_IS_NOT_SUPPORTED``: object does not support cloning

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">CloneResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>clonedObject</Name><Comment><![CDATA[ new object instance or NULL if somthing went wrong ]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Local><Name>newSorter</Name><Type Namespace="CNM_Collections" PointerTo="1">ArrayListMergeSorter</Type><BitSize>64</BitSize></Local><Local><Name>sorter</Name><Type Namespace="CNM_CollectionInterfaces">IArrayListSorter</Type><BitSize>64</BitSize></Local></Method><Method><Name>sortWithComparator</Name><Comment><![CDATA[

short summary
=================
This method sorts the data structure. 
It uses the passed Comperator to sort the structure.
This can take many cycles and should be called until the CNM_ReturnTypes.ExecutionState is no longer ``BUSY``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``ABORTED``: While sort was pending,execute had a falling edge,
	``BUSY``: Sort is in progress
	``ERROR``: Sort was not able to finish (p.e. List changed) call sort(false) to reset
	``IDLE``: Currently no sort in progress
	``SUCCESS``: Sorting was finished 

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the sorting, needs to be active until the ExecutionState is SUCCESS]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>size</Name><Comment><![CDATA[The size of the list to be sorted]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>comparator</Name><Comment><![CDATA[the comparator that should be used for the sort. Must not be changed while sort is in process]]></Comment><Type Namespace="CNM_AbstractObject">IComparator</Type><BitSize>64</BitSize></Parameter><Parameter><Name>container</Name><Comment><![CDATA[the container, that contains the list elements]]></Comment><Type Namespace="CNM_AbstractObject" PointerTo="1">IObject</Type><BitSize>64</BitSize></Parameter><Local><Name>lastExecute</Name><Type>BOOL</Type><BitSize>8</BitSize><Properties><Property><Name>uselocation</Name><Value>ARRAYLISTMERGESORTER_932__SORTWITHCOMPARATOR_945__LASTEXECUTE</Value></Property></Properties></Local><Local><Name>executing</Name><Type>BOOL</Type><BitSize>8</BitSize><Properties><Property><Name>uselocation</Name><Value>ARRAYLISTMERGESORTER_932__SORTWITHCOMPARATOR_945__EXECUTING</Value></Property></Properties></Local><Local><Name>state</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><Properties><Property><Name>uselocation</Name><Value>ARRAYLISTMERGESORTER_932__SORTWITHCOMPARATOR_945__STATE</Value></Property></Properties></Local><Local><Name>currentSortSize</Name><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>ARRAYLISTMERGESORTER_932__SORTWITHCOMPARATOR_945__CURRENTSORTSIZE</Value></Property></Properties></Local><Local><Name>startAt</Name><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>ARRAYLISTMERGESORTER_932__SORTWITHCOMPARATOR_945__STARTAT</Value></Property></Properties></Local><Local><Name>leftBound</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Local><Name>middle</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Local><Name>rightBound</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Local><Name>operationsThisCycle</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Local><Name>leave</Name><Type>BOOL</Type><BitSize>8</BitSize></Local><Local><Name>mergeState</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize></Local></Method><Method><Name>__getclassName</Name><Comment><![CDATA[

short summary
=================
This abstract property returns the class name of the concrete object, 
which is useful to check the class name for ``__DELETE``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">ClassName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Local><Name>className</Name><Type Namespace="CNM_AbstractObject">ClassName</Type><BitSize>2048</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property><Property><Name>VTableOffset</Name><Value>1336104</Value></Property><Property><Name>VfInitVTableIndex</Name><Value>23</Value></Property><Property><Name>enable_dynamic_creation</Name></Property></Properties></DataType><DataType><Name Namespace="CNM_CollectionInterfaces">ISectionBasedArrayListSorter</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_CollectionInterfaces">IArrayListSorter</ExtendsType><Method><Name>setSectionSorter</Name><Comment><![CDATA[

short summary
=================
This method sets an custom sectionsorter


.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>sectionSorter</Name><Comment><![CDATA[The section sorter that should be used]]></Comment><Type Namespace="CNM_CollectionInterfaces">ISectionSorter</Type><BitSize>64</BitSize></Parameter></Method><Properties><Property><Name>TcPlcInterfaceId</Name><Value>979</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_Collections">ArrayListTimSorter</Name><Comment><![CDATA[

short summary
=================
This FB sorts the list using TimSort, which has O(n*logn) runtime. 
For random data it is a bit slower than Mergesort. Needs to allocate extra memory while sorting, same size as currentContainerSize.

.. caution::
	Due to the characteristics of a merge, a merge must be performed atomically.
	As a merge of two lists l1 and l2 can take up to l1.size compares.
	That implies that at the last cycle of the merge, an atomic operation that requires up to list.size/2 compares must be performed.
	Therefore the maxCycleCompares may be exceeded and set the maxCycleCompares to a value smaller than list.size/2 may not have the desired effect.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

methods and properties
=========================

]]></Comment><BitSize>4224</BitSize><ExtendsType Namespace="CNM_Collections">AbstractMergeBasedSorter</ExtendsType><Implements Namespace="CNM_CollectionInterfaces">ISectionBasedArrayListSorter</Implements><SubItem><Name>secondSorter</Name><Type Namespace="CNM_CollectionInterfaces">ISectionSorter</Type><Comment><![CDATA[The currently used second sorter]]></Comment><BitSize>64</BitSize><BitOffs>3904</BitOffs></SubItem><SubItem><Name>secondSorterState</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><Comment><![CDATA[The state resultet from the last call to sectionsorter.sort()]]></Comment><BitSize>16</BitSize><BitOffs>3968</BitOffs></SubItem><SubItem><Name>privateSecondSorter</Name><Type>BOOL</Type><Comment><![CDATA[True when current sectionsorter is created internally and has to be destructed when a new sorter is set]]></Comment><BitSize>8</BitSize><BitOffs>3984</BitOffs><Default><Bool>false</Bool></Default></SubItem><SubItem><Name>ArrayListTimSorter_960__sortWithComparator_978__lastExecute</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>3992</BitOffs><Default><Bool>false</Bool></Default><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>ArrayListTimSorter_960__sortWithComparator_978__executing</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>4000</BitOffs><Default><Bool>false</Bool></Default><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>ArrayListTimSorter_960__sortWithComparator_978__state</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><BitOffs>4016</BitOffs><Default><EnumText>SingleExecutionState.IDLE</EnumText></Default><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>ArrayListTimSorter_960__sortWithComparator_978__sectionIndex</Name><Type>LWORD</Type><Comment><![CDATA[start index of the current section]]></Comment><BitSize>64</BitSize><BitOffs>4032</BitOffs><Default><Value>0</Value></Default><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>ArrayListTimSorter_960__sortWithComparator_978__currentSortSize</Name><Type>LWORD</Type><BitSize>64</BitSize><BitOffs>4096</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>ArrayListTimSorter_960__sortWithComparator_978__startAt</Name><Type>LWORD</Type><BitSize>64</BitSize><BitOffs>4160</BitOffs><Default><Value>0</Value></Default><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><Method><Name>setSectionSorter</Name><Comment><![CDATA[

short summary
=================
This method sets an custom sectionsorter

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================

]]></Comment><Parameter><Name>sectionSorter</Name><Type Namespace="CNM_CollectionInterfaces">ISectionSorter</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>clone</Name><Comment><![CDATA[

short summary
=================
This method is used to create a new instance
of the object which has the same internal state as the object.
If the object is a container class, the references to the content objects
are not cloned for this there is the method ``ICloneable.deepClone``.

If an object does not support cloning the return value is
``CNM_ReturnTypes.CloneResult.CLONE_IS_NOT_SUPPORTED``.

If there is not enough memory or the cloning fails because the
attribute enable dynamic creation was forgotten the return value is 
``CNM_ReturnTypes.CloneResult.FAILED``.

Only if the return value is ``CNM_ReturnTypes.CloneResult.SUCCESS``
the output ``clonedObject`` points to the new object
otherwise ``clonedObject`` is NULL.  

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``CNM_ReturnTypes.CloneResult.SUCCESS``: new object clone was created,
	``CNM_ReturnTypes.CloneResult.FAILED``: object clone failed
	``CNM_ReturnTypes.CloneResult.CLONE_IS_NOT_SUPPORTED``: object does not support cloning

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">CloneResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>clonedObject</Name><Comment><![CDATA[ new object instance or NULL if somthing went wrong ]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Local><Name>newSorter</Name><Type Namespace="CNM_Collections" PointerTo="1">ArrayListTimSorter</Type><BitSize>64</BitSize></Local></Method><Method><Name>destruct</Name><Comment><![CDATA[

short summary
=================
This method is a self-destruction if the object was created dynamically.
If the object is a container class, the container content is not destroyed with it,
for that there is the method ``ICloneable.deepDestruct``
The output NULL is a constant which is always NULL,
this allows a semi-pleasant notation: ``foo.destruct(NULL => foo);``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

InOut:
	+-----------------+------+---------+------+------------------------------------------+
	| Scope           | Name | Type    | Init | Comment                                  |
	+=================+======+=========+======+==========================================+
	| Output CONSTANT | NULL | __XWORD | 0    | ``NULL`` is a constant which is always 0 |
	+-----------------+------+---------+------+------------------------------------------+

]]></Comment><Parameter><Name>NULL</Name><Comment><![CDATA[ NULL is a constant which is always 0 ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Local><Name>tmp</Name><Comment><![CDATA[ __DELETE(THIS) is not allowed anymore in Tc 4026.
       tmp is just a helper pointer that points to this instance ]]></Comment><Type Namespace="CNM_Collections" PointerTo="1">ArrayListTimSorter</Type><BitSize>64</BitSize></Local></Method><Method><Name>getNewSecondSorter</Name><Comment><![CDATA[

short summary
=================
Gives ``THIS`` a new sectionSorter

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: the new section Sorter

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">ISectionSorter</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>sectionSorterPointer</Name><Type Namespace="CNM_Collections" PointerTo="1">SectionInsertionSorter</Type><BitSize>64</BitSize></Local></Method><Method><Name>setSecondSorterBounds</Name><Comment><![CDATA[

short summary
=================
This method is used to set the bounds (including) between the second sorter should sort.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================

]]></Comment><Parameter><Name>leftBound</Name><Comment><![CDATA[First element that should be sorted]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>rightBound</Name><Comment><![CDATA[Last element that should be sorted]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>sorter</Name><Comment><![CDATA[The sorter the bounds should be set]]></Comment><Type Namespace="CNM_CollectionInterfaces">ISectionSorter</Type><BitSize>64</BitSize></Parameter><Parameter><Name>maxCompares</Name><Comment><![CDATA[the amount of compares that should not be exceeded by the second sorter]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>sortWithComparator</Name><Comment><![CDATA[

short summary
=================
This method sorts the data structure. 
It uses the passed Comperator to sort the structure.
This can take many cycles and should be called until the CNM_ReturnTypes.ExecutionState is no longer ``BUSY``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``ABORTED``: While sort was pending,execute had a falling edge,
	``BUSY``: Sort is in progress
	``ERROR``: Sort was not able to finish (p.e. List changed) call sort(false) to reset
	``IDLE``: Currently no sort in progress
	``SUCCESS``: Sorting was finished 

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the sorting, needs to be active until the ExecutionState is SUCCESS]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>size</Name><Comment><![CDATA[The size of the list to be sorted]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>comparator</Name><Comment><![CDATA[the comparator that should be used for the sort. Must not be changed while sort is in process]]></Comment><Type Namespace="CNM_AbstractObject">IComparator</Type><BitSize>64</BitSize></Parameter><Parameter><Name>container</Name><Comment><![CDATA[the container, that contains the list elements]]></Comment><Type Namespace="CNM_AbstractObject" PointerTo="1">IObject</Type><BitSize>64</BitSize></Parameter><Local><Name>lastExecute</Name><Type>BOOL</Type><BitSize>8</BitSize><Properties><Property><Name>uselocation</Name><Value>ARRAYLISTTIMSORTER_960__SORTWITHCOMPARATOR_978__LASTEXECUTE</Value></Property></Properties></Local><Local><Name>executing</Name><Type>BOOL</Type><BitSize>8</BitSize><Properties><Property><Name>uselocation</Name><Value>ARRAYLISTTIMSORTER_960__SORTWITHCOMPARATOR_978__EXECUTING</Value></Property></Properties></Local><Local><Name>state</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><Properties><Property><Name>uselocation</Name><Value>ARRAYLISTTIMSORTER_960__SORTWITHCOMPARATOR_978__STATE</Value></Property></Properties></Local><Local><Name>sectionIndex</Name><Comment><![CDATA[start index of the current section]]></Comment><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>ARRAYLISTTIMSORTER_960__SORTWITHCOMPARATOR_978__SECTIONINDEX</Value></Property></Properties></Local><Local><Name>currentSortSize</Name><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>ARRAYLISTTIMSORTER_960__SORTWITHCOMPARATOR_978__CURRENTSORTSIZE</Value></Property></Properties></Local><Local><Name>startAt</Name><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>ARRAYLISTTIMSORTER_960__SORTWITHCOMPARATOR_978__STARTAT</Value></Property></Properties></Local><Local><Name>leftBound</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Local><Name>middle</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Local><Name>rightBound</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Local><Name>operationsThisCycle</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Local><Name>leave</Name><Type>BOOL</Type><BitSize>8</BitSize></Local><Local><Name>mergeState</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize></Local><Local><Name>sectionSize</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>deepDestruct</Name><Comment><![CDATA[

short summary
=================
This method is a self-destruction if the object was created dynamically.
If the object is a container class, the container content is destroyed with it.
The output NULL is a constant which is always NULL,
this allows a semi-pleasant notation: ``foo.deepDestruct(NULL => foo);``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

InOut:
	+-----------------+------+---------+------------------------------------------+
	| Scope           | Name | Type    | Comment                                  |
	+=================+======+=========+==========================================+
	| Output CONSTANT | NULL | __XWORD | ``NULL`` is a constant which is always 0 |
	+-----------------+------+---------+------------------------------------------+

]]></Comment><Parameter><Name>NULL</Name><Comment><![CDATA[ NULL is a constant which is always 0 ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter></Method><Method><Name>__getclassName</Name><Comment><![CDATA[

short summary
=================
This abstract property returns the class name of the concrete object, 
which is useful to check the class name for ``__DELETE``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">ClassName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Local><Name>className</Name><Type Namespace="CNM_AbstractObject">ClassName</Type><BitSize>2048</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property><Property><Name>VTableOffset</Name><Value>1336824</Value></Property><Property><Name>VfInitVTableIndex</Name><Value>23</Value></Property><Property><Name>enable_dynamic_creation</Name></Property></Properties></DataType><DataType><Name Namespace="CNM_Collections">DoublyLinkedElement</Name><Comment><![CDATA[

short summary
=================
Implementation of IDoublyLinkElement.
Does not allow NULL as object.


.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

methods and properties
=========================

]]></Comment><BitSize>2816</BitSize><ExtendsType Namespace="CNM_AbstractObject">Object</ExtendsType><Implements Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Implements><SubItem><Name>nextElement</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize><BitOffs>2624</BitOffs></SubItem><SubItem><Name>previousElement</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize><BitOffs>2688</BitOffs></SubItem><SubItem><Name>dataObject</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize><BitOffs>2752</BitOffs></SubItem><Method><Name>__setnext</Name><Comment><![CDATA[

short summary
=================
This property returns the next element that is linked to this element. Next element previous should be this object.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Parameter><Name>next</Name><Comment><![CDATA[

short summary
=================
This property returns the next element that is linked to this element. Next element previous should be this object.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getnext</Name><Comment><![CDATA[

short summary
=================
This property returns the next element that is linked to this element. Next element previous should be this object.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>next</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getprevious</Name><Comment><![CDATA[

short summary
=================
This property returns the previous element that is linked to this element. Previous element next should be this object.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>previous</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getobject</Name><Comment><![CDATA[

short summary
=================
This property returns :ref:`CNM_AbstractObject.IObject` that represents the data of this element.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">IObject</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>object</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setobject</Name><Comment><![CDATA[

short summary
=================
This property returns :ref:`CNM_AbstractObject.IObject` that represents the data of this element.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Parameter><Name>object</Name><Comment><![CDATA[

short summary
=================
This property returns :ref:`CNM_AbstractObject.IObject` that represents the data of this element.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setprevious</Name><Comment><![CDATA[

short summary
=================
This property returns the previous element that is linked to this element. Previous element next should be this object.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Parameter><Name>previous</Name><Comment><![CDATA[

short summary
=================
This property returns the previous element that is linked to this element. Previous element next should be this object.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getclassName</Name><Comment><![CDATA[

short summary
=================
This abstract property returns the class name of the concrete object, 
which is useful to check the class name for ``__DELETE``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">ClassName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Local><Name>className</Name><Type Namespace="CNM_AbstractObject">ClassName</Type><BitSize>2048</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property><Property><Name>VTableOffset</Name><Value>1337808</Value></Property><Property><Name>VfInitVTableIndex</Name><Value>23</Value></Property><Property><Name>enable_dynamic_creation</Name></Property></Properties></DataType><DataType><Name Namespace="CNM_Collections">IArrayListIterator</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_CollectionInterfaces">IIterator</ExtendsType><Method><Name>attachArrayList</Name><Comment><![CDATA[

short summary
=================
This methode attaches an array list to the iterator.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``CNM_ReturnTypes.SingleExecutionResult.SUCCESS``: the list could be attached to the iterator

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>list</Name><Comment><![CDATA[ The list to be attached. Should be of type ``CNM_CollectionInterfaces.IArrayList`` ]]></Comment><Type Namespace="CNM_CollectionInterfaces">IArrayList</Type><BitSize>64</BitSize></Parameter></Method><Properties><Property><Name>TcPlcInterfaceId</Name><Value>1076</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_Collections">AbstractArrayListIterator</Name><BitSize>3200</BitSize><ExtendsType Namespace="CNM_CollectionInterfaces">AbstractIterator</ExtendsType><Implements Namespace="CNM_Collections">IArrayListIterator</Implements><SubItem><Name>stepSize</Name><Type>DINT</Type><BitSize>32</BitSize><BitOffs>2944</BitOffs><Default><Value>1</Value></Default></SubItem><SubItem><Name>currentIndex</Name><Type>LWORD</Type><BitSize>64</BitSize><BitOffs>3008</BitOffs></SubItem><SubItem><Name>AbstractArrayListIterator_1060__iterate_1075__lastChangeVersion</Name><Type>LWORD</Type><BitSize>64</BitSize><BitOffs>3072</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>AbstractArrayListIterator_1060__iterate_1075__lastExecute</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>3136</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><Method><Name>__getsize</Name><ReturnType>LWORD</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>size</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getstartIndex</Name><ReturnType>LWORD</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>startIndex</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>iterate</Name><Comment><![CDATA[

short summary
=================
This methode returns the next object in the iteration and returns an execution state.
Example:
You have a list: 1 2 3
the first iterate call will return CNM_ReturnTypes.BUSY and object = 1
the second iterate call will return CNM_ReturnTypes.BUSY and object = 2
the third iterate call will return CNM_ReturnTypes.BUSY and object = 3
the forth iterate call will return CNM_ReturnTypes.SUCCESS and object = NULL

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``SingleExecutionState.SUCCESS``: Iteration finished, no new elements, returned NULL object
    ``SingleExecutionState.ERROR``: error during iteration
    ``SingleExecutionState.ABORT``: iteration aborted
    ``SingleExecutionState.BUSY``: returned an element and iteration in progress	
    ``SingleExecutionState.IDLE``: ready for iteration

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>object</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Local><Name>lastChangeVersion</Name><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>ABSTRACTARRAYLISTITERATOR_1060__ITERATE_1075__LASTCHANGEVERSION</Value></Property></Properties></Local><Local><Name>lastExecute</Name><Type>BOOL</Type><BitSize>8</BitSize><Properties><Property><Name>uselocation</Name><Value>ABSTRACTARRAYLISTITERATOR_1060__ITERATE_1075__LASTEXECUTE</Value></Property></Properties></Local><Local><Name>tmp</Name><Type Namespace="CNM_AbstractObject" PointerTo="1">IObject</Type><BitSize>64</BitSize></Local></Method><Method><Name>__getchanges</Name><ReturnType>LWORD</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>changes</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getcontainer</Name><ReturnType Namespace="CNM_AbstractObject" PointerTo="1">IObject</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>container</Name><Type Namespace="CNM_AbstractObject" PointerTo="1">IObject</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>attachArrayList</Name><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>list</Name><Type Namespace="CNM_CollectionInterfaces">IArrayList</Type><BitSize>64</BitSize></Parameter><Local><Name>ptmp</Name><Type Namespace="CNM_Collections" PointerTo="1">ArrayList</Type><BitSize>64</BitSize></Local></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_Collections">DefaultArrayListIterator</Name><BitSize>3200</BitSize><ExtendsType Namespace="CNM_Collections">AbstractArrayListIterator</ExtendsType><Method><Name>hasNext</Name><Comment><![CDATA[

short summary
=================
This methode returns if there exists another element to iterate to.

example
=================
WHILE(iterator.hasNext())DO
	iterator.getNext().foo();
END_WHILE

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``TRUE``: Iterator has a next object that can be fetched with getNext()
	``FALSE``: Iterator finished

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize></Method><Method><Name>__getstartIndex</Name><ReturnType>LWORD</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>startIndex</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getclassName</Name><ReturnType Namespace="CNM_AbstractObject">ClassName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Local><Name>className</Name><Type Namespace="CNM_AbstractObject">ClassName</Type><BitSize>2048</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property><Property><Name>VTableOffset</Name><Value>1342552</Value></Property><Property><Name>VfInitVTableIndex</Name><Value>23</Value></Property><Property><Name>enable_dynamic_creation</Name></Property></Properties></DataType><DataType><Name Namespace="CNM_Collections">ArrayList</Name><Comment><![CDATA[

short summary
=================
Implementation of IArraylist.
Does not allow empty objects as data!
Efficient if size stays small and index operations need to be performed in O(1).


.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

methods and properties
=========================

]]></Comment><BitSize>7232</BitSize><ExtendsType Namespace="CNM_Collections">AbstractList</ExtendsType><Implements Namespace="CNM_CollectionInterfaces">IArrayList</Implements><SubItem><Name>container</Name><Type Namespace="CNM_AbstractObject" PointerTo="1">IObject</Type><Comment><![CDATA[the container where the elements are stored]]></Comment><BitSize>64</BitSize><BitOffs>6720</BitOffs></SubItem><SubItem><Name>currentContainerCapacity</Name><Type>LWORD</Type><Comment><![CDATA[how many space does the container has, NOT how many places are currently taken]]></Comment><BitSize>64</BitSize><BitOffs>6784</BitOffs></SubItem><SubItem><Name>sorter</Name><Type Namespace="CNM_CollectionInterfaces">IArrayListSorter</Type><Comment><![CDATA[the sorter used to sort the list]]></Comment><BitSize>64</BitSize><BitOffs>6848</BitOffs></SubItem><SubItem><Name>privateSorter</Name><Type>BOOL</Type><Comment><![CDATA[true if the sorter were created inside this list, false if set from outside]]></Comment><BitSize>8</BitSize><BitOffs>6912</BitOffs></SubItem><SubItem><Name>CONTAINER_SIZE_STEPWIDTH</Name><Type>LWORD</Type><Comment><![CDATA[in which stepwidths should the containerCapacity increase]]></Comment><BitSize>64</BitSize><BitOffs>6976</BitOffs><Default><Value>256</Value></Default></SubItem><SubItem><Name>ArrayList_1000__iterate_1032__lastExecute</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>7040</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>ArrayList_1000__iterate_1032__executing</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>7048</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>ArrayList_1000__iterate_1032__state</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><BitOffs>7056</BitOffs><Default><EnumText>SingleExecutionState.IDLE</EnumText></Default><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>ArrayList_1000__iterate_1032__currentIndex</Name><Type>LWORD</Type><BitSize>64</BitSize><BitOffs>7104</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>ArrayList_1000__iterate_1032__changeIndex</Name><Type>LWORD</Type><BitSize>64</BitSize><BitOffs>7168</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><Method><Name>leftShiftObjects</Name><Comment><![CDATA[

short summary
=================
leftShift(0) : A B C D -> B C D
leftShift(1) : A B C D -> A C D

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: ``CNM_ReturnTypes.SingleExecutionResult.SUCCESS``: leftshift was successful
	``CNM_ReturnTypes.SingleExecutionResult.ERROR``: new Container couldn't be allocated, container left unchanged, startindex wrong

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>startIndex</Name><Comment><![CDATA[where the leftshift should start, the element at this index is removed and all elements on the right side are shifted one position]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Local><Name>index</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Local><Name>offset</Name><Type>ULINT</Type><BitSize>64</BitSize></Local><Local><Name>length</Name><Type>UDINT</Type><BitSize>32</BitSize></Local><Local><Name>IS_NOT_REFERENCED</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>remove</Name><Comment><![CDATA[

short summary
=================
This methode removes the first instance of the given object from the list.
Passing a null object leaves the list unchanged

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>object</Name><Comment><![CDATA[The object to be removed from the list]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Local><Name>index</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>setSorter</Name><Comment><![CDATA[

short summary
=================
This methode can replace the default sorter for a custom one. Check ``IListSorter`` and ``IArrayListSorter``

	
.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``THIS`` :``ISortable``

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">ISortable</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>sorter</Name><Comment><![CDATA[The instance of the sorter to be used to sort the list]]></Comment><Type Namespace="CNM_CollectionInterfaces">IArrayListSorter</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>iterate</Name><Comment><![CDATA[

short summary
=================
This method returns the next object in the list and returns an execution state.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``SUCCESS``: if last object from collection was returned,
	``ABORTED``: execute has a falling edge during iterate,
	``BUSY``: When iterate had rising edge on execute and not all objects had been returned yet
	``IDLE``: iterate not in progress, execute is false and iterate reseted 

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[False to init, True to retrieve next element]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>object</Name><Comment><![CDATA[The current element of the iteration]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Local><Name>lastExecute</Name><Type>BOOL</Type><BitSize>8</BitSize><Properties><Property><Name>uselocation</Name><Value>ARRAYLIST_1000__ITERATE_1032__LASTEXECUTE</Value></Property></Properties></Local><Local><Name>executing</Name><Type>BOOL</Type><BitSize>8</BitSize><Properties><Property><Name>uselocation</Name><Value>ARRAYLIST_1000__ITERATE_1032__EXECUTING</Value></Property></Properties></Local><Local><Name>state</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><Properties><Property><Name>uselocation</Name><Value>ARRAYLIST_1000__ITERATE_1032__STATE</Value></Property></Properties></Local><Local><Name>currentIndex</Name><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>ARRAYLIST_1000__ITERATE_1032__CURRENTINDEX</Value></Property></Properties></Local><Local><Name>changeIndex</Name><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>ARRAYLIST_1000__ITERATE_1032__CHANGEINDEX</Value></Property></Properties></Local><Local><Name>IS_NOT_REFERENCED</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>append</Name><Comment><![CDATA[

short summary
=================
This methode adds the given object to the end of the list.
Adding NULL-Objects or THIS^ to the list is not possible.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``CNM_ReturnTypes.SingleExecutionResult.SUCCESS``: new Container could be allocated and data was copied
	``CNM_ReturnTypes.SingleExecutionResult.ERROR``: new Container couldn't be allocated, container left unchanged
	
]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>object</Name><Comment><![CDATA[The object to be appended]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>announceListChange</Name><Comment><![CDATA[

short summary
=================
This method is called every time the list changes and can notify other components.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================

]]></Comment></Method><Method><Name>getObjectAt</Name><Comment><![CDATA[

short summary
=================
This methode returns the object at the given index.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``CNM_ReturnTypes.SingleExecutionResult.SUCCESS``: index within valid range, object could be retrieved
	``CNM_ReturnTypes.SingleExecutionResult.ERROR``: index was out of valid range

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>index</Name><Comment><![CDATA[the index to access the object from]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>object</Name><Comment><![CDATA[The object found at the index, undefined if OUT_OF_BOUNDS]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Local><Name>NULL_REFERENCE</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>__getclassName</Name><Comment><![CDATA[

short summary
=================
This abstract property returns the class name of the concrete object, 
which is useful to check the class name for ``__DELETE``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">ClassName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Local><Name>className</Name><Type Namespace="CNM_AbstractObject">ClassName</Type><BitSize>2048</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>sort</Name><Comment><![CDATA[

short summary
=================
This methode sorts the List using the .compareTo Methode of the objects within it.
This can take many cycles and should be called until the ``ExecutionState`` is no longer ``BUSY``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``CNM_ExecutionState``: the state of the sorting

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the sorting, needs to be active until the ExecutionState is SUCCESS]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Local><Name>OBJECT_NOT_REFERENCED</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>appendCollection</Name><Comment><![CDATA[

short summary
=================
This methode adds all elements of the given collection to the end of this list.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``CNM_ReturnTypes.SingleExecutionResult.SUCCESS``: new Container not needed / could be allocated and data was copied
	``CNM_ReturnTypes.SingleExecutionResult.ERROR``: new Container couldn't be allocated, container left unchanged

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>collectionToAppend</Name><Comment><![CDATA[The collection to be appended]]></Comment><Type Namespace="CNM_CollectionInterfaces">ICollection</Type><BitSize>64</BitSize></Parameter><Local><Name>currentIndex</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Local><Name>currentObject</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local></Method><Method><Name>clear</Name><Comment><![CDATA[

short summary
=================
This methode clears/deletes all clearable data from this object.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment></Method><Method><Name>getNewIterator</Name><Comment><![CDATA[

short summary
=================
This methode returns a NEW Iterator instance which can iterate the collection.
These iterators can be used in parallel to each other.

.. <warning>

The created Iterator was created using the __NEW operator and must be destructed to avoid memory leaks!

.. </warning>

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">IIterator</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>newIterator</Name><Type Namespace="CNM_Collections" PointerTo="1">DefaultArrayListIterator</Type><BitSize>64</BitSize></Local></Method><Method><Name>dequeue</Name><Comment><![CDATA[

short summary
=================
This property returns the last object in the first and removes it from the list. Can be seen as opposite of prepend.
Example:
On a list: (Head -->) A B C, list.dequeue will return A.
Example 2:
If you call prepend(x), a dequeue right after will return x.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_AbstractObject">IObject</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>NULL_REFERENCE</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>insertObjectAt</Name><Comment><![CDATA[

short summary
=================
This methode adds the given object at the given index. 
The element that was on this index before is not deleted,
but instead is shifted right by one position together with the other elements on indices large than ``index``.
If ``object`` is not Valid, list is left unchanged

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``CNM_ReturnTypes.SingleExecutionResult.SUCCESS``: insert was successful
	``CNM_ReturnTypes.SingleExecutionResult.ERROR``: insert failed, because container needs to increase but no memory left or index is not in valid range

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>index</Name><Comment><![CDATA[the index to insert the object at]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>object</Name><Comment><![CDATA[the object to be added]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>__getsizeInBytes</Name><Comment><![CDATA[

short summary
=================
This property returns the amount of bytes needed to store the Arraylist entries, not the amount of bytes occupied by the container.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType>UDINT</ReturnType><ReturnBitSize>32</ReturnBitSize><Local><Name>sizeInBytes</Name><Type>UDINT</Type><BitSize>32</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>replaceObjectAt</Name><Comment><![CDATA[

short summary
=================
This methode replaces the Interface reference inside the collection at the given index with the given Interface.

Replacing with NULL does not affect the list

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``CNM_ReturnTypes.SingleExecutionResult.SUCCESS``: index was valid and object at index replaced with given object
	``CNM_ReturnTypes.SingleExecutionResult.ERROR``: index was invalid, nothing changed


]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>index</Name><Comment><![CDATA[the index to replace the object at]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>withObject</Name><Comment><![CDATA[the object to be at this index instead]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>inverseSort</Name><Comment><![CDATA[

short summary
=================
This method sorts the List in the inverted order, so from great to low

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return:	``ABORTED``: While inverse was pending,execute had a falling edge,
	``BUSY``: Inverse is in progress
	``ERROR``: Inverse was not able to finish (p.e. List changed) call inverse(false) to reset
	``IDLE``: Currently invert is not in progress
	``SUCCESS``: Inversing was finished 

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the inverting, needs to be active until the ExecutionState is noz longer busy]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Local><Name>privateSorter</Name><Type Namespace="CNM_Collections" PointerTo="1">ArrayListShellSorter</Type><BitSize>64</BitSize></Local></Method><Method><Name>getContainerSizeIncrease</Name><Comment><![CDATA[

short summary
=================
Rounds the passed values to multiples of the CONTAINER_SIZE_STEPWIDTH, to calculate the increase of the containersize.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: the size rounded to the next greater Multiple of CONTAINER_SIZE_INCREASE

]]></Comment><ReturnType>LWORD</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>space</Name><Comment><![CDATA[how much space should be added to the cointainer, were space describes the amount of elements]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>getClonedInstance</Name><Comment><![CDATA[

short summary
=================
creates a new listinstance from the Type THIS^ has. 
If THIS^ has a valid sorter, it is cloned as well and set to the new Instance.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
return: ``SUCCESS``: new instance (and sorter) was created
	``FAILED``: Allocation of new instance (or sorter) was not possible
	``CLONE_NOT_SUPPORTED``: The sorter currently used by THIS^ can not be cloned.
	
]]></Comment><ReturnType Namespace="CNM_ReturnTypes">CloneResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>clonedList</Name><Comment><![CDATA[the new listinstance]]></Comment><Type Namespace="CNM_CollectionInterfaces">IList</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Local><Name>newInstance</Name><Type Namespace="CNM_CollectionInterfaces">IArrayList</Type><BitSize>64</BitSize></Local><Local><Name>clonedSorter</Name><Type Namespace="CNM_CollectionInterfaces">IArrayListSorter</Type><BitSize>64</BitSize></Local><Local><Name>clonedSorterObject</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local></Method><Method><Name>swap</Name><Comment><![CDATA[

short summary
=================
This method is used to swap two elements in the list on given positions.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================

]]></Comment><Parameter><Name>index1</Name><Comment><![CDATA[Position of one element that should be swapped]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>index2</Name><Comment><![CDATA[Position of the other element that should be swapped]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Local><Name>tmp</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local></Method><Method><Name>prependCollection</Name><Comment><![CDATA[

short summary
=================
This methode adds all elements of the given collection to the start of this list. 
If the collection to prepend is null or contains no element, list is unchanged.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``CNM_ReturnTypes.SingleExecutionResult.SUCCESS``: prepend was successful
	``CNM_ReturnTypes.SingleExecutionResult.ERROR``: collection to prepend didn't fit in old container, and new container couldn't be allocated

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>collectionToPrepend</Name><Comment><![CDATA[The collection to be prepended]]></Comment><Type Namespace="CNM_CollectionInterfaces">ICollection</Type><BitSize>64</BitSize></Parameter><Local><Name>currentIndex</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Local><Name>currentObject</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Local><Name>offset</Name><Type>ULINT</Type><BitSize>64</BitSize></Local></Method><Method><Name>decrementSize</Name><Comment><![CDATA[

short summary
=================
reduces the collectionsize by one. If 1,5*container_size_stepwidth places are empty, the container size is reduced by a single stepwidth. 
Should prevent continuious inc/dec-creasing of the container

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: ``CNM_ReturnTypes.SingleExecutionResult.SUCCESS``: new Container not needed or could be allocated and data was copied
	``CNM_ReturnTypes.SingleExecutionResult.ERROR``: needed new Container but couldn't be allocated, container left unchanged

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize></Method><Method><Name>rightShiftObjects</Name><Comment><![CDATA[

short summary
=================
rightShift(0) : A B C D -> _ A B C D

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: ``IndexBounds.IN_BOUNDS``: if startIndex is within the list
	``IndexBounds.OUT_OF_BOUNDS``: if startIndex is not within the list

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>startIndex</Name><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Local><Name>index</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Local><Name>prevObject</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Local><Name>currentObject</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Local><Name>offset</Name><Type>ULINT</Type><BitSize>64</BitSize></Local><Local><Name>length</Name><Type>UDINT</Type><BitSize>32</BitSize></Local><Local><Name>IS_NOT_REFERENCED</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>pop</Name><Comment><![CDATA[

short summary
=================
This property returns the last object in the list and removes it from the list. Can be seen as opposite of append.
Example:
On a list: (Head -->) A B C, list.pop will return C.
Example 2:
If you call append(x), a pop right after will return x.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
]]></Comment><ReturnType Namespace="CNM_AbstractObject">IObject</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>NULL_REFERENCE</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>getIndexOf</Name><Comment><![CDATA[

short summary
=================
This methode returns ths index of the first object that is equal to the given objects.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``CNM_ReturnTypes.SingleExecutionResult.SUCCESS``: Element was found inside the list
	``CNM_ReturnTypes.SingleExecutionResult.ERROR``: object couldn't be found in the list
	
]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>object</Name><Comment><![CDATA[the object to get the index from]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Parameter><Name>index</Name><Comment><![CDATA[The index where the first occurence where find, only valid if returnd success, else undefined(__XWORD Max) ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Local><Name>currentObject</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local></Method><Method><Name>removeObjectAt</Name><Comment><![CDATA[

short summary
=================
This methode removes the element at the given index from the list (does not delete it!).
Elements right from the object are shifted to close the gap.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``CNM_ReturnTypes.SingleExecutionResult.SUCCESS``: remove was successful
	``CNM_ReturnTypes.SingleExecutionResult.ERROR``: index out of bounds

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>index</Name><Comment><![CDATA[the index to remove the object from]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>object</Name><Comment><![CDATA[the removed object]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Local><Name>NULL_REFERENCE</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>invert</Name><Comment><![CDATA[

short summary
=================
Inverts the order of the elements inside the list. Does not apply any kind of sorting, only reverses.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================

]]></Comment><Local><Name>middle</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Local><Name>index</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>deepDestruct</Name><Comment><![CDATA[

short summary
=================
This method is a self-destruction if the object was created dynamically.
If the object is a container class, the container content is destroyed with it.
The output NULL is a constant which is always NULL,
this allows a semi-pleasant notation: ``foo.deepDestruct(NULL => foo);``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

InOut:
	+-----------------+------+---------+------------------------------------------+
	| Scope           | Name | Type    | Comment                                  |
	+=================+======+=========+==========================================+
	| Output CONSTANT | NULL | __XWORD | ``NULL`` is a constant which is always 0 |
	+-----------------+------+---------+------------------------------------------+

]]></Comment><Parameter><Name>NULL</Name><Comment><![CDATA[ NULL is a constant which is always 0 ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Local><Name>currentIndex</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Local><Name>currentItem</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local></Method><Method><Name>prepend</Name><Comment><![CDATA[

short summary
=================
This methode adds the given obejct to the end of the list.
Adding NULL-Objects or THIS^ to the list is not possible.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``CNM_ReturnTypes.SingleExecutionResult.SUCCESS``: new Container not needed / could be allocated and data was copied
	``CNM_ReturnTypes.SingleExecutionResult.ERROR``: new Container couldn't be allocated, container left unchanged
	
]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>object</Name><Comment><![CDATA[The object to be prepended]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>__setinternalSorter</Name><Comment><![CDATA[

short summary
=================
Can be used to inidcate that the Sorter in use is created from the list itself and is not visible from outside.
Is needed to determine if it should be destructed together with the list.

Visibilty is internal, because it is necessary to set this during the clone process for the cloned list.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Parameter><Name>internalSorter</Name><Comment><![CDATA[

short summary
=================
Can be used to inidcate that the Sorter in use is created from the list itself and is not visible from outside.
Is needed to determine if it should be destructed together with the list.

Visibilty is internal, because it is necessary to set this during the clone process for the cloned list.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>incrementSize</Name><Comment><![CDATA[

short summary
=================
increments the collectionsize by one. If necessary, enlarges the container to fit enough elements

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: ``CNM_ReturnTypes.SingleExecutionResult.SUCCESS``: new Container could be allocated and data was copied
	``CNM_ReturnTypes.SingleExecutionResult.ERROR``: new Container couldn't be allocated, container left unchanged

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize></Method><Method><Name>downscaleContainer</Name><Comment><![CDATA[

short summary
=================
This method decreases the containercapacity by the CONTAINER_SIZE_STEPWIDTH. 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``CNM_ReturnTypes.SingleExecutionResult.SUCCESS``: new Container could be allocated and data was copied
	``CNM_ReturnTypes.SingleExecutionResult.ERROR``: new Container couldn't be allocated, container left unchanged

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Local><Name>newContainer</Name><Type Namespace="CNM_AbstractObject" PointerTo="1">IObject</Type><BitSize>64</BitSize></Local><Local><Name>index</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Local><Name>sizeIncrease</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>getDeepClonedInstance</Name><Comment><![CDATA[

short summary
=================
creates a new listinstance from the Type THIS^ has. 
If THIS^ has a valid sorter, it is deepCloned and set to the new Instance.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
return: ``SUCCESS``: new instance (and sorter) was created
	``FAILED``: Allocation of new instance (or sorter) was not possible
	``CLONE_NOT_SUPPORTED``: The sorter currently used by THIS^ can not be deepCloned.
	
]]></Comment><ReturnType Namespace="CNM_ReturnTypes">CloneResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>deepClonedList</Name><Comment><![CDATA[the new listinstance]]></Comment><Type Namespace="CNM_CollectionInterfaces">IList</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Local><Name>newInstance</Name><Type Namespace="CNM_CollectionInterfaces">IArrayList</Type><BitSize>64</BitSize></Local><Local><Name>clonedSorter</Name><Type Namespace="CNM_CollectionInterfaces">IArrayListSorter</Type><BitSize>64</BitSize></Local><Local><Name>clonedSorterObject</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local></Method><Method><Name>sortWithComparator</Name><Comment><![CDATA[

short summary
=================
This method sorts the list. 
It uses the passed Comperator to do that.
This can take many cycles and should be called until the CNM_ReturnTypes.ExecutionState is no longer ``BUSY``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``ABORTED``: While sort was pending,execute had a falling edge,
	``BUSY``: Sort is in progress
	``ERROR``: Sort was not able to finish (p.e. List changed) call sort(false) to reset
	``IDLE``: Currently no sort in progress
	``SUCCESS``: Sorting was finished 

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the sorting, needs to be active until the ExecutionState is SUCCESS]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>comparator</Name><Comment><![CDATA[the comparator that should be used for the sort. Must not be changed while sort is in process]]></Comment><Type Namespace="CNM_AbstractObject">IComparator</Type><BitSize>64</BitSize></Parameter><Local><Name>privateSorter</Name><Type Namespace="CNM_Collections" PointerTo="1">ArrayListShellSorter</Type><BitSize>64</BitSize></Local><Local><Name>foo</Name><Type>INT</Type><BitSize>16</BitSize></Local></Method><Method><Name>upscaleContainer</Name><Comment><![CDATA[

short summary
=================
This method increases the container to have at least ``space`` more capacity. Actual capacity is a multiply of CONTAINER_SIZE_STEPWIDTH

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``CNM_ReturnTypes.SingleExecutionResult.SUCCESS``: new container could be allocated and data was transferd
	``CNM_ReturnTypes.SingleExecutionResult.ERROR``: allocation of new container failed

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>space</Name><Comment><![CDATA[The amount of storagecapacity that should be added]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Local><Name>newContainer</Name><Type Namespace="CNM_AbstractObject" PointerTo="1">IObject</Type><BitSize>64</BitSize></Local><Local><Name>index</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Local><Name>sizeIncrease</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property><Property><Name>VTableOffset</Name><Value>1338248</Value></Property><Property><Name>VfInitVTableIndex</Name><Value>23</Value></Property><Property><Name>enable_dynamic_creation</Name></Property></Properties></DataType><DataType><Name Namespace="CNM_CollectionInterfaces">ITree</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_CollectionInterfaces">ICollection</ExtendsType><Method><Name>insert</Name><Comment><![CDATA[

short summary
=================
A method to insert a single element into the tree.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: ``SUCCESS``: operation successful
	``ABORTED``: object was already contained
	``ERROR``: if the passed object was not valid (null) or tree had inconsistency

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>object</Name><Comment><![CDATA[the object that should be inserted]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>insertCollection</Name><Comment><![CDATA[

short summary
=================
This method inserts all elements of a collection into the tree



.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: ``SUCCESS``: operation successful
	``ABORTED``: execute has a falling edge during insert
	``BUSY``: insert is in progress
	``ERROR``: the passed collection is not valid / contained invalid elements
	``IDLE``: currently no insert in progress

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>collection</Name><Comment><![CDATA[The collection that should be inserted]]></Comment><Type Namespace="CNM_CollectionInterfaces">ICollection</Type><BitSize>64</BitSize></Parameter><Parameter><Name>execute</Name><Comment><![CDATA[If insert should be processed]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>insertResult</Name><Comment><![CDATA[ 
        SUCCESS if every element could be inserted, 
        ERROR if new collection contained values that couldn't be inserted due to duplication 
		ABORTED if methodcall was aborted by falling edge on executed 
    ]]></Comment><Type Namespace="CNM_ReturnTypes">SingleExecutionResult</Type><BitSize>16</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter></Method><Method><Name>insertCollectionWithBound</Name><Comment><![CDATA[

short summary
=================
This method provides a way to insert all elements of a collection into a tree while controlling 
the maximum number of allowed operations per cycle. 
The limit is not expected to be met precisely, but rather serves as an upper bound. 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: ``SUCCESS``: operation successful
	``ABORTED``: execute has a falling edge during insert
	``BUSY``: insert is in progress
	``ERROR``: the passed collection is not valid / contained invalid elements
	``IDLE``: currently no insert in progress

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>collection</Name><Comment><![CDATA[The collection that should be inserted]]></Comment><Type Namespace="CNM_CollectionInterfaces">ICollection</Type><BitSize>64</BitSize></Parameter><Parameter><Name>execute</Name><Comment><![CDATA[If insert should be processed]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>maxInsertOperationsPerCycle</Name><Comment><![CDATA[The amount of allowed operations per cycle]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>insertResult</Name><Comment><![CDATA[ 
        SUCCESS if every element could be inserted, 
        ERROR if new collection contained values that couldn't be inserted due to duplication
		ABORTED if methodcall was aborted by falling edge on executed 
    ]]></Comment><Type Namespace="CNM_ReturnTypes">SingleExecutionResult</Type><BitSize>16</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter></Method><Method><Name>remove</Name><Comment><![CDATA[

short summary
=================
Function to remove an object from the tree

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: ``SUCCESS``: if remove could be made
	``ABORTED``: if object wasn't in the tree
	``ERROR``: if object wasn't valid

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>object</Name><Comment><![CDATA[ The object that should be removed ]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter></Method><Properties><Property><Name>TcPlcInterfaceId</Name><Value>559</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_CollectionInterfaces">IBalancedTree</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_CollectionInterfaces">ITree</ExtendsType><Properties><Property><Name>TcPlcInterfaceId</Name><Value>556</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_CollectionInterfaces">IInstantBalancedBinarySearchTree</Name><BitSize>64</BitSize><ExtendsType GUID="{18071995-0000-0000-0000-000000000018}">PVOID</ExtendsType><Method><Name>__getforEach</Name><ReturnType Namespace="CNM_CollectionInterfaces">IInstantForEachStrategy</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>insertCollection</Name><Comment><![CDATA[

short summary
=================
This method inserts all elements of a collection into the tree



.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: ``SUCCESS``: operation successful
	``ABORTED``: execute has a falling edge during insert
	``ERROR``: the passed collection is not valid / contained invalid elements

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>collection</Name><Comment><![CDATA[The collection that should be inserted]]></Comment><Type Namespace="CNM_CollectionInterfaces">ICollection</Type><BitSize>64</BitSize></Parameter><Parameter><Name>insertResult</Name><Comment><![CDATA[ 
        SUCCESS if every element could be inserted, 
        ERROR if new collection contained values that couldn't be inserted due to duplication 
		ABORTED if methodcall was aborted by falling edge on executed 
    ]]></Comment><Type Namespace="CNM_ReturnTypes">SingleExecutionResult</Type><BitSize>16</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter></Method></DataType><DataType><Name Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTree</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_CollectionInterfaces">IBalancedTree</ExtendsType><Method><Name>__getinstant</Name><ReturnType Namespace="CNM_CollectionInterfaces">IInstantBalancedBinarySearchTree</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method></DataType><DataType><Name Namespace="CNM_CollectionInterfaces">ISet</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_CollectionInterfaces">ICollection</ExtendsType><Method><Name>getEqualObject</Name><Comment><![CDATA[

short summary
=================
Searches an object that is equal to the provided object in terms of the compareTo method (or a comparator provided by the parent).
 
.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: ``TRUE`` when an object that is equal is found, otherwise ``FALSE``

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Parameter><Name>object</Name><Comment><![CDATA[The object to search for]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Parameter><Name>result</Name><Comment><![CDATA[The found object or null if not found]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter></Method><Method><Name>intersect</Name><Comment><![CDATA[

short summary
=================
overwrites the content of this set with the intersection of this set and the given set
Set intersection: Common elements between two sets.

Example:
Set A = {2, 3, 1, 4}
Set B = {3, 5, 6, 4}

Intersection of A and B: {3, 4}

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: ``SUCCESS``: if intersect is complete
	``ABORTED``: execute has a falling edge during intersect,
	``BUSY``: Intersect is in Progress
	``ERROR``: the passed collection where not valid / contained invalid Elements
	``IDLE``: Currently no intersect in progress

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>set</Name><Comment><![CDATA[foreign set to intersect with]]></Comment><Type Namespace="CNM_CollectionInterfaces">ISet</Type><BitSize>64</BitSize></Parameter><Parameter><Name>execute</Name><Comment><![CDATA[If intersect should be processed]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter></Method><Method><Name>merge</Name><Comment><![CDATA[

short summary
=================
overwrites the content of this set with the union of this set and the given set
Set union: Combination of all elements from two sets.

Example:
Set A = {2, 3, 1, 4}
Set B = {3, 5, 6, 4}

Union of A and B: {1, 2, 3, 4, 5, 6}

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: ``SUCCESS``: if merge completed, 
	``ABORTED``: execute has a falling edge during merge,
	``BUSY``: merge is in Progress
	``ERROR``: the passed collection where not valid / contained invalid Elements
	``IDLE``: Currently no merge in progress

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>set</Name><Comment><![CDATA[foreign set to merge with]]></Comment><Type Namespace="CNM_CollectionInterfaces">ISet</Type><BitSize>64</BitSize></Parameter><Parameter><Name>execute</Name><Comment><![CDATA[If merge should be processed]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter></Method><Method><Name>subtract</Name><Comment><![CDATA[

short summary
=================
overwrites the content of this set with the set difference of this set and the given set
Set difference: Elements present in one set but not in the other.

Example:
Set A = {2, 3, 1, 4}
Set B = {3, 5, 6, 4}

Set difference (A - B): {1, 2}
Set difference (B - A): {5, 6}

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: ``SUCCESS``: if insert could made, error if object was already in the tree,
	``ABORTED``: execute has a falling edge during insert,
	``BUSY``: Insert is in Progress
	``ERROR``: the passed collection where not valid / contained invalid Elements
	``IDLE``: Currently no insert in progress

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>set</Name><Comment><![CDATA[foreign set to construct substraction]]></Comment><Type Namespace="CNM_CollectionInterfaces">ISet</Type><BitSize>64</BitSize></Parameter><Parameter><Name>execute</Name><Comment><![CDATA[If substract should be processed]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_Collections">IBBSTIterator</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_CollectionInterfaces">IIterator</ExtendsType><Method><Name>attachTree</Name><Comment><![CDATA[

short summary
=================
This methode attaches an array list to the iterator.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``CNM_ReturnTypes.SingleExecutionResult.SUCCESS``: the list could be attached to the iterator

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>list</Name><Comment><![CDATA[ The list to be attached. Should be of type ``CNM_CollectionInterfaces.IArrayList`` ]]></Comment><Type Namespace="CNM_CollectionInterfaces">ITree</Type><BitSize>64</BitSize></Parameter></Method><Properties><Property><Name>TcPlcInterfaceId</Name><Value>1182</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_Collections">AbstractBalancedBinarySearchTreeIterator</Name><BitSize>2944</BitSize><ExtendsType Namespace="CNM_CollectionInterfaces">AbstractIterator</ExtendsType><Implements Namespace="CNM_Collections">IBBSTIterator</Implements><Method><Name>__getroot</Name><ReturnType Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>root</Name><Type Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>attachTree</Name><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>list</Name><Type Namespace="CNM_CollectionInterfaces">ITree</Type><BitSize>64</BitSize></Parameter><Local><Name>ptmp</Name><Type Namespace="CNM_Collections" PointerTo="1">BalancedBinarySearchTree</Type><BitSize>64</BitSize></Local></Method><Method><Name>__getchanges</Name><ReturnType>LWORD</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>changes</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_Collections">DFS_BBSTIterator</Name><BitSize>9984</BitSize><ExtendsType Namespace="CNM_Collections">AbstractBalancedBinarySearchTreeIterator</ExtendsType><SubItem><Name>stack</Name><Type Namespace="CNM_Collections">LinkedList</Type><BitSize>6848</BitSize><BitOffs>2944</BitOffs></SubItem><SubItem><Name>currentNode</Name><Type Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</Type><BitSize>64</BitSize><BitOffs>9792</BitOffs></SubItem><SubItem><Name>lastChangeVersion</Name><Type>LWORD</Type><BitSize>64</BitSize><BitOffs>9856</BitOffs></SubItem><SubItem><Name>lastExecute</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>9920</BitOffs></SubItem><Method><Name>iterate</Name><Comment><![CDATA[

short summary
=================
This methode returns the next object in the iteration and returns an execution state.
Example:
You have a list: 1 2 3
the first iterate call will return CNM_ReturnTypes.BUSY and object = 1
the second iterate call will return CNM_ReturnTypes.BUSY and object = 2
the third iterate call will return CNM_ReturnTypes.BUSY and object = 3
the forth iterate call will return CNM_ReturnTypes.SUCCESS and object = NULL

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``SingleExecutionState.SUCCESS``: Iteration finished, no new elements, returned NULL object
    ``SingleExecutionState.ERROR``: error during iteration
    ``SingleExecutionState.ABORT``: iteration aborted
    ``SingleExecutionState.BUSY``: returned an element and iteration in progress	
    ``SingleExecutionState.IDLE``: ready for iteration

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>object</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Local><Name>tmp</Name><Type Namespace="CNM_AbstractObject" PointerTo="1">Object</Type><BitSize>64</BitSize></Local></Method><Method><Name>hasNext</Name><Comment><![CDATA[

short summary
=================
This methode returns if there exists another element to iterate to.

example
=================
WHILE(iterator.hasNext())DO
	iterator.getNext().foo();
END_WHILE

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``TRUE``: Iterator has a next object that can be fetched with getNext()
	``FALSE``: Iterator finished

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize></Method><Method><Name>__getclassName</Name><ReturnType Namespace="CNM_AbstractObject">ClassName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Local><Name>className</Name><Type Namespace="CNM_AbstractObject">ClassName</Type><BitSize>2048</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property><Property><Name>VTableOffset</Name><Value>1348176</Value></Property><Property><Name>VfInitVTableIndex</Name><Value>23</Value></Property><Property><Name>enable_dynamic_creation</Name></Property></Properties></DataType><DataType><Name Namespace="CNM_Collections">InstantBalancedBinarySearchTreeExecutor</Name><BitSize>256</BitSize><Implements Namespace="CNM_CollectionInterfaces">IInstantBalancedBinarySearchTree</Implements><Implements Namespace="CNM_CollectionInterfaces">IInstantForEachStrategy</Implements><SubItem><Name>usedTree</Name><Type Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTree</Type><BitSize>64</BitSize><BitOffs>192</BitOffs></SubItem><Method><Name>serial</Name><Comment><![CDATA[

short summary
=================
Method to perform a given action on all CNM_AbstractObject.Objects inside the collection.
CNM_AbstractObject.Objects are invoked with the applier in order until done, only then is the next invoked.
Order is defined by the default iterator.
If at any point the applier returns an error the foreach stops and returns an error.
Needs to reset the execution flag between calls.
Action to perform needs to implement :ref:`CNM_CollectionInterfaces.IApplier`.
Example:
You have a list of numbers: 1 2 3 and a ConcreteIncrementApplier that can take  a number and increment it. 
Calling list.forEach(TRUE, ConcreteIncrementApplier) will increment all numbers in the list, becoming: 2 3 4.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: CNM_ReturnTypes.ExecutionState

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>applier</Name><Comment><![CDATA[the applier (action) to be used on all obejcts in the collection]]></Comment><Type Namespace="CNM_CollectionInterfaces">IApplier</Type><BitSize>64</BitSize></Parameter><Local><Name>baseReturnState</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize></Local></Method><Method><Name>__getforEach</Name><ReturnType Namespace="CNM_CollectionInterfaces">IInstantForEachStrategy</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>forEach</Name><Type Namespace="CNM_CollectionInterfaces">IInstantForEachStrategy</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>stateToResult</Name><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>state</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize></Parameter></Method><Method><Name>parallel</Name><Comment><![CDATA[

short summary
=================
Method to perform a given action on all CNM_AbstractObject.Objects inside the collection.
All CNM_AbstractObject.Objects are invoked with the applier each cycle until all are done.
Needs to reset the execution flag between calls.
If at any point the applier returns an error the foreach stops and returns an error.
Action to perform needs to implement :ref:`CNM_CollectionInterfaces.IApplier`.
Example:
You have a list of numbers: 1 2 3 and a ConcreteIncrementApplier that can take  a number and increment it. 
Calling list.forEach(TRUE, ConcreteIncrementApplier) will increment all numbers in the list, becoming: 2 3 4.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: CNM_ReturnTypes.ExecutionState

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>applier</Name><Comment><![CDATA[the applier (action) to be used on all obejcts in the collection]]></Comment><Type Namespace="CNM_CollectionInterfaces">IApplier</Type><BitSize>64</BitSize></Parameter><Local><Name>baseReturnState</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize></Local></Method><Method><Name>insertCollection</Name><Comment><![CDATA[

short summary
=================
This method inserts all elements of a collection into the tree



.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: ``SUCCESS``: operation successful
	``ABORTED``: execute has a falling edge during insert
	``ERROR``: the passed collection is not valid / contained invalid elements

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>collection</Name><Comment><![CDATA[The collection that should be inserted]]></Comment><Type Namespace="CNM_CollectionInterfaces">ICollection</Type><BitSize>64</BitSize></Parameter><Parameter><Name>insertResult</Name><Comment><![CDATA[ 
        SUCCESS if every element could be inserted, 
        ERROR if new collection contained values that couldn't be inserted due to duplication 
		ABORTED if methodcall was aborted by falling edge on executed 
    ]]></Comment><Type Namespace="CNM_ReturnTypes">SingleExecutionResult</Type><BitSize>16</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Local><Name>baseReturnState</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize></Local></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_Collections">BalancedBinarySearchTree</Name><Comment><![CDATA[

short summary
=================
Interface for a balanced, binary, search tree

- balanced means that every node has a balanced (see ``Tree_Balance``)
- binary means that every node has two childs (they can be null)
- search means it is a set, every object can be only contained once

.. attention::
	search not only means you can't store an object with the same hash only once, instead it means you can only one element with this comparevalue.
	So if you compare elements by size and you have five diffrent objects with the same size, only one of them can be stored
	
.. warning::
	Do not change the compare value of objects while they are in the tree, doing so will destroy your tree which can lead to not finding elements, 
	hurt of search and balanced properties and os on. If you have to alter the value the correct way is:
	remove from tree, alter, insert. Same applies for foreach / iterate do not perform any operations changing the comparevalue
	
.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

methods and properties
=========================

]]></Comment><BitSize>8192</BitSize><ExtendsType Namespace="CNM_CollectionInterfaces">AbstractCollection</ExtendsType><Implements Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTree</Implements><SubItem><Name>rootNode</Name><Type Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</Type><BitSize>64</BitSize><BitOffs>6848</BitOffs></SubItem><SubItem><Name>nodeComparator</Name><Type Namespace="CNM_AbstractObject">IComparator</Type><BitSize>64</BitSize><BitOffs>6912</BitOffs></SubItem><SubItem><Name>resultFromClone</Name><Type>BOOL</Type><Comment><![CDATA[True if tree is result from clone operation]]></Comment><BitSize>8</BitSize><BitOffs>6976</BitOffs><Default><Bool>false</Bool></Default></SubItem><SubItem><Name>resultFromDeepClone</Name><Type>BOOL</Type><Comment><![CDATA[True if tree is result from deepclone operations]]></Comment><BitSize>8</BitSize><BitOffs>6984</BitOffs><Default><Bool>false</Bool></Default></SubItem><SubItem><Name>treeChangedIterate</Name><Type>BOOL</Type><Comment><![CDATA[Set to true if something in the tree was changed, reset when iterate is started]]></Comment><BitSize>8</BitSize><BitOffs>6992</BitOffs><Default><Bool>false</Bool></Default></SubItem><SubItem><Name>nodestack</Name><Type Namespace="CNM_CollectionInterfaces" PointerTo="1">IBalancedBinarySearchTreeNode</Type><Comment><![CDATA[nodestack used for iterate, placed in instance to be able to destroy it on destruct]]></Comment><BitSize>64</BitSize><BitOffs>7040</BitOffs></SubItem><SubItem><Name>LOWER_OPERATIONS_BOUND</Name><Type>LWORD</Type><BitSize>64</BitSize><BitOffs>7104</BitOffs><Default><Value>127</Value></Default></SubItem><SubItem><Name>UPPER_OPERATIONS_BOUND</Name><Type>LWORD</Type><BitSize>64</BitSize><BitOffs>7168</BitOffs><Default><Value>2047</Value></Default></SubItem><SubItem><Name>BalancedBinarySearchTree_1080____getinstant_1086__executor</Name><Type Namespace="CNM_Collections">InstantBalancedBinarySearchTreeExecutor</Type><BitSize>256</BitSize><BitOffs>7232</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>BalancedBinarySearchTree_1080__getInorderSuccessor_1117__currentNode</Name><Type Namespace="CNM_CollectionInterfaces">IBinaryTreeNode</Type><BitSize>64</BitSize><BitOffs>7488</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>BalancedBinarySearchTree_1080__insertCollectionWithBound_1124__lastExecute</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>7552</BitOffs><Default><Bool>false</Bool></Default><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>BalancedBinarySearchTree_1080__insertCollectionWithBound_1124__state</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><BitOffs>7568</BitOffs><Default><EnumText>SingleExecutionState.IDLE</EnumText></Default><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>BalancedBinarySearchTree_1080__intersect_1125__lastExecute</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>7584</BitOffs><Default><Bool>false</Bool></Default><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>BalancedBinarySearchTree_1080__intersect_1125__state</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><BitOffs>7600</BitOffs><Default><EnumText>SingleExecutionState.IDLE</EnumText></Default><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>BalancedBinarySearchTree_1080__intersect_1125__objectsToRemove</Name><Type Namespace="CNM_CollectionInterfaces">ILinkedList</Type><BitSize>64</BitSize><BitOffs>7616</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>BalancedBinarySearchTree_1080__intersect_1125__maxInsertOperationsPerCycle</Name><Type>LWORD</Type><BitSize>64</BitSize><BitOffs>7680</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>BalancedBinarySearchTree_1080__iterate_1126__lastExecute</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>7744</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>BalancedBinarySearchTree_1080__iterate_1126__executing</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>7752</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>BalancedBinarySearchTree_1080__iterate_1126__state</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><BitOffs>7760</BitOffs><Default><EnumText>SingleExecutionState.IDLE</EnumText></Default><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>BalancedBinarySearchTree_1080__iterate_1126__nextNode</Name><Type Namespace="CNM_CollectionInterfaces">IBinaryTreeNode</Type><BitSize>64</BitSize><BitOffs>7808</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>BalancedBinarySearchTree_1080__iterate_1126__currentNode</Name><Type Namespace="CNM_CollectionInterfaces">IBinaryTreeNode</Type><BitSize>64</BitSize><BitOffs>7872</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>BalancedBinarySearchTree_1080__iterate_1126__nodestack</Name><Type Namespace="CNM_CollectionInterfaces" PointerTo="1">IBalancedBinarySearchTreeNode</Type><BitSize>64</BitSize><BitOffs>7936</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>BalancedBinarySearchTree_1080__iterate_1126__stacktop</Name><Type>LWORD</Type><BitSize>64</BitSize><BitOffs>8000</BitOffs><Default><Value>0</Value></Default><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>BalancedBinarySearchTree_1080__subtract_1138__lastExecute</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>8064</BitOffs><Default><Bool>false</Bool></Default><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>BalancedBinarySearchTree_1080__subtract_1138__state</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><BitOffs>8080</BitOffs><Default><EnumText>SingleExecutionState.IDLE</EnumText></Default><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>BalancedBinarySearchTree_1080__subtract_1138__maxInsertOperationsPerCycle</Name><Type>LWORD</Type><BitSize>64</BitSize><BitOffs>8128</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><Method><Name>getClonedEmptyTree</Name><Comment><![CDATA[

short summary
=================
prepares a new empty tree object with the same internal state as THIS^

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">CloneResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>deepCloned</Name><Comment><![CDATA[indicates if tree should be cloned or deepcloned]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>newBalancedBinarySearchTree</Name><Type Namespace="CNM_Collections" PointerTo="1">BalancedBinarySearchTree</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Local><Name>comparator</Name><Type Namespace="CNM_AbstractObject">IComparator</Type><BitSize>64</BitSize></Local><Local><Name>OBJECT_NOT_REFERENCED</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>iterate</Name><Comment><![CDATA[

short summary
=================
This methode returns the next object in the iteration and returns an execution state.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: ``SUCCESS``: if last object from collection was returned,
	``ABORTED``: execute has a falling edge during iterate,
	``BUSY``: When iterate had rising edge on execute and not all objects had been returned yet
	``IDLE``: iterate not in progress, execute is false and iterate reseted 
	
]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>object</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Local><Name>lastExecute</Name><Type>BOOL</Type><BitSize>8</BitSize><Properties><Property><Name>uselocation</Name><Value>BALANCEDBINARYSEARCHTREE_1080__ITERATE_1126__LASTEXECUTE</Value></Property></Properties></Local><Local><Name>executing</Name><Type>BOOL</Type><BitSize>8</BitSize><Properties><Property><Name>uselocation</Name><Value>BALANCEDBINARYSEARCHTREE_1080__ITERATE_1126__EXECUTING</Value></Property></Properties></Local><Local><Name>state</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><Properties><Property><Name>uselocation</Name><Value>BALANCEDBINARYSEARCHTREE_1080__ITERATE_1126__STATE</Value></Property></Properties></Local><Local><Name>nextNode</Name><Type Namespace="CNM_CollectionInterfaces">IBinaryTreeNode</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>BALANCEDBINARYSEARCHTREE_1080__ITERATE_1126__NEXTNODE</Value></Property></Properties></Local><Local><Name>currentNode</Name><Type Namespace="CNM_CollectionInterfaces">IBinaryTreeNode</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>BALANCEDBINARYSEARCHTREE_1080__ITERATE_1126__CURRENTNODE</Value></Property></Properties></Local><Local><Name>nodestack</Name><Type Namespace="CNM_CollectionInterfaces" PointerTo="1">IBalancedBinarySearchTreeNode</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>BALANCEDBINARYSEARCHTREE_1080__ITERATE_1126__NODESTACK</Value></Property></Properties></Local><Local><Name>stacktop</Name><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>BALANCEDBINARYSEARCHTREE_1080__ITERATE_1126__STACKTOP</Value></Property></Properties></Local><Local><Name>stacksize</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Local><Name>OBJECT_NOT_REFERENCED</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>insert</Name><Comment><![CDATA[

short summary
=================
method to insert a single element into the tree 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: ``SUCCESS``: operation successful
	``ABORTED``: object was already contained
	``ERROR``: if the passed object was not valid (null) or tree had inconsistency

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>object</Name><Comment><![CDATA[The object that should be inserted]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Local><Name>heightNotChanged</Name><Type>BOOL</Type><BitSize>8</BitSize></Local><Local><Name>returnedRoot</Name><Type Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</Type><BitSize>64</BitSize></Local></Method><Method><Name>checkLeftRotation</Name><Comment><![CDATA[

short summary
=================
check if a leftrotation is neccesary (=> is right subtree to deep?), if necessary it is performed

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: returns the new root of the subtree, that replaces the node for that the rotation was checked
 
]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>elem</Name><Comment><![CDATA[The element for that the rotation should be checked]]></Comment><Type Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</Type><BitSize>64</BitSize></Parameter><Parameter><Name>removing</Name><Comment><![CDATA[indicates if method was called in context of remove (then true) or in context of insert (then false) ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>heightNotChanged</Name><Comment><![CDATA[signals if the height of any subtree has changed]]></Comment><Type ReferenceTo="true">BOOL</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter></Method><Method><Name>subtract</Name><Comment><![CDATA[

short summary
=================
overwrites the content of this set with the set difference of this set and the given set
Set difference: Elements present in one set but not in the other.

Example:
Set A = {2, 3, 1, 4}
Set B = {3, 5, 6, 4}

Set difference (A - B): {1, 2}
Set difference (B - A): {5, 6}

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: ``SUCCESS``: if insert could made, error if object was already in the tree,
	``ABORTED``: execute has a falling edge during insert,
	``BUSY``: Insert is in Progress
	``ERROR``: the passed collection where not valid / contained invalid Elements
	``IDLE``: Currently no insert in progress

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>set</Name><Comment><![CDATA[foreign set to construct substraction]]></Comment><Type Namespace="CNM_CollectionInterfaces">ISet</Type><BitSize>64</BitSize></Parameter><Parameter><Name>execute</Name><Comment><![CDATA[If substract should be processed]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Local><Name>lastExecute</Name><Type>BOOL</Type><BitSize>8</BitSize><Properties><Property><Name>uselocation</Name><Value>BALANCEDBINARYSEARCHTREE_1080__SUBTRACT_1138__LASTEXECUTE</Value></Property></Properties></Local><Local><Name>state</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><Properties><Property><Name>uselocation</Name><Value>BALANCEDBINARYSEARCHTREE_1080__SUBTRACT_1138__STATE</Value></Property></Properties></Local><Local><Name>maxInsertOperationsPerCycle</Name><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>BALANCEDBINARYSEARCHTREE_1080__SUBTRACT_1138__MAXINSERTOPERATIONSPERCYCLE</Value></Property></Properties></Local><Local><Name>object</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Local><Name>iterateState</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize></Local><Local><Name>insertOperationsThisCycle</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>remove</Name><Comment><![CDATA[

short summary
=================
Function to remove an object from the tree

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: ``SUCCESS``: if remove could be made
	``ABORTED``: if object wasn't in the tree
	``ERROR``: if object wasn't valid

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>object</Name><Comment><![CDATA[ The object that should be removed ]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Local><Name>heightNotChanged</Name><Type>BOOL</Type><BitSize>8</BitSize></Local><Local><Name>result</Name><Type Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</Type><BitSize>64</BitSize></Local><Local><Name>balancedBinaryRoot</Name><Type Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</Type><BitSize>64</BitSize></Local></Method><Method><Name>setNodeComparator</Name><Comment><![CDATA[

short summary
=================
Sets a comparator, that is used to compare two nodes of this tree.
Optional, if not set comparator of node will be used.

.. attention::
	Can only be set if tree is empty.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: ``SUCCESS``: set of the new comparator done
	``ABORTED``: comparator not set, tree already contained objects
	
]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>nodeComparator</Name><Comment><![CDATA[the comparator that should be used to compare two nodes]]></Comment><Type Namespace="CNM_AbstractObject">IComparator</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>getInorderSuccessor</Name><Comment><![CDATA[

short summary
=================
finds the next greater node (inorder successor) of a specified node
 
.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: ``TRUE`` if inorder successor is found, ``FALSE`` else

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Parameter><Name>nodebuffer</Name><Type Namespace="CNM_CollectionInterfaces" ReferenceTo="true" PointerTo="1">IBinaryTreeNode</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter><Parameter><Name>bufferindex</Name><Type ReferenceTo="true">LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter><Parameter><Name>successor</Name><Comment><![CDATA[if successor is found then successor, else null]]></Comment><Type Namespace="CNM_CollectionInterfaces">IBinaryTreeNode</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Local><Name>currentNode</Name><Type Namespace="CNM_CollectionInterfaces">IBinaryTreeNode</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>BALANCEDBINARYSEARCHTREE_1080__GETINORDERSUCCESSOR_1117__CURRENTNODE</Value></Property></Properties></Local><Local><Name>OBJECT_NOT_REFERENCED</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>inc</Name><Comment><![CDATA[

short summary
=================
method to increase \_\_xword without overflow

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================

]]></Comment><Parameter><Name>value</Name><Type ReferenceTo="true">LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter><Local><Name>XWORD_MAX</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>rotateLeft</Name><Comment><![CDATA[

short summary
=================
rotates a tree around a node

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: the new root

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>elem</Name><Comment><![CDATA[The element that sould be rotatet around]]></Comment><Type Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</Type><BitSize>64</BitSize></Parameter><Local><Name>newRoot</Name><Type Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</Type><BitSize>64</BitSize></Local></Method><Method><Name>checkRightRotation</Name><Comment><![CDATA[

short summary
=================
check if a rightrotation is neccesary (=> is left subtree to deep?), if necessary it is performed

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: the new root of the subtree, that replaces the node the rotation was checked for

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>elem</Name><Comment><![CDATA[The root of the subtree that should be checked for rotation]]></Comment><Type Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</Type><BitSize>64</BitSize></Parameter><Parameter><Name>removing</Name><Comment><![CDATA[indicates if method was called in context of remove (then true) or in context of insert (then false) ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>heightNotChanged</Name><Comment><![CDATA[signals if the height of any subtree changed ]]></Comment><Type ReferenceTo="true">BOOL</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter></Method><Method><Name>recursivSearchSuccessor</Name><Comment><![CDATA[

short summary
=================
gets the successor of a node and removes it from the tree so it can be inserted at another place (used when remove) and rebalances tree

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: The successor node of the elem node

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>elem</Name><Comment><![CDATA[the element a successor should be searched for]]></Comment><Type Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</Type><BitSize>64</BitSize></Parameter><Parameter><Name>heightNotChanged</Name><Comment><![CDATA[True if the successor was removed]]></Comment><Type ReferenceTo="true">BOOL</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter><Parameter><Name>newRoot</Name><Comment><![CDATA[returns the new root, bc root can be changed bc of rotation]]></Comment><Type Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Local><Name>leftChild</Name><Type Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</Type><BitSize>64</BitSize></Local></Method><Method><Name>insertCollectionWithBound</Name><Comment><![CDATA[

short summary
=================
This method provides a way to insert all elements of a collection into a tree while controlling 
the maximum number of allowed operations per cycle. 
The limit is not expected to be met precisely, but rather serves as an upper bound. 

If any value of the collection could not be inserted because of duplication, operation isn't aborted, 
insertion is tried for every element of the collection.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: ``SUCCESS``: if insert could made, error if object was already in the tree,
	``ABORTED``: execute has a falling edge during insert,
	``BUSY``: Insert is in Progress
	``ERROR``: the passed collection where not valid / contained invalid Elements
	``IDLE``: Currently no insert in progress

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>collection</Name><Comment><![CDATA[The collection that should be inserted]]></Comment><Type Namespace="CNM_CollectionInterfaces">ICollection</Type><BitSize>64</BitSize></Parameter><Parameter><Name>execute</Name><Comment><![CDATA[If insert should be processed]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>maxInsertOperationsPerCycle</Name><Comment><![CDATA[The amount of allowed operations per cycle]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>insertResult</Name><Comment><![CDATA[ 
        SUCCESS if every element could be inserted, 
        ERROR if new collection contained values that couldn't be inserted due to duplication 
		ABORTED if methodcall was aborted by falling edge on executed 
    ]]></Comment><Type Namespace="CNM_ReturnTypes">SingleExecutionResult</Type><BitSize>16</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Local><Name>lastExecute</Name><Type>BOOL</Type><BitSize>8</BitSize><Properties><Property><Name>uselocation</Name><Value>BALANCEDBINARYSEARCHTREE_1080__INSERTCOLLECTIONWITHBOUND_1124__LASTEXECUTE</Value></Property></Properties></Local><Local><Name>state</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><Properties><Property><Name>uselocation</Name><Value>BALANCEDBINARYSEARCHTREE_1080__INSERTCOLLECTIONWITHBOUND_1124__STATE</Value></Property></Properties></Local><Local><Name>iterateObject</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Local><Name>insertOperationsThisCycle</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>__setcloned</Name><Comment><![CDATA[

short summary
=================
Property to set the information that this tree is the result of a clone operation

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``True`` if this tree was created from a call to .clone, ``False`` else

]]></Comment><Parameter><Name>cloned</Name><Comment><![CDATA[

short summary
=================
Property to set the information that this tree is the result of a clone operation

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``True`` if this tree was created from a call to .clone, ``False`` else

]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>adaptBalanceAfterDoubleRotation</Name><Comment><![CDATA[

short summary
=================
after a double rotation balance have to be adopted

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================

]]></Comment><Parameter><Name>elem</Name><Comment><![CDATA[the element for that childs balance should be adapted]]></Comment><Type Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</Type><BitSize>64</BitSize></Parameter><Local><Name>leftChild</Name><Type Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</Type><BitSize>64</BitSize></Local><Local><Name>rightChild</Name><Type Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</Type><BitSize>64</BitSize></Local></Method><Method><Name>containsEqualObject</Name><Comment><![CDATA[

short summary
=================
True if collection contains any object for that object.compareTo(input) = CNM_ReturnTypes.Comparation_Result.Equal

.. attention::
	The objects can be diffrent as long as comparesTo says they are equal, the hashcode is not considered. To check for same Object, use :ref:containsObject

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: ``TRUE`` if an object is found for that .compareTo is equal, 
	``FALSE`` otherwise

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Parameter><Name>object</Name><Comment><![CDATA[the object to be checked if an object with equal value exists inside the collection]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Local><Name>currentElement</Name><Type Namespace="CNM_CollectionInterfaces">IBinaryTreeNode</Type><BitSize>64</BitSize></Local></Method><Method><Name>__getclassName</Name><Comment><![CDATA[

short summary
=================
This abstract property returns the class name of the concrete object, 
which is useful to check the class name for ``__DELETE``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">ClassName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Local><Name>className</Name><Type Namespace="CNM_AbstractObject">ClassName</Type><BitSize>2048</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>getEqualObject</Name><Comment><![CDATA[

short summary
=================
Searches an Object, that is equal to the provided object in terms of the compareTo Method (or an provided comparator from the parentstructure). 
Does not care about equal or not equal hashcodes.
 
.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: True when an object that is equal is found, false else

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Parameter><Name>object</Name><Comment><![CDATA[The object for that an aquvivelent is searched]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Parameter><Name>result</Name><Comment><![CDATA[The found object or null if not found]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Local><Name>currentNode</Name><Type Namespace="CNM_CollectionInterfaces">IBinaryTreeNode</Type><BitSize>64</BitSize></Local><Local><Name>OBJECT_NOT_REFERENCED</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>reorganizeRightRotate</Name><Comment><![CDATA[

short summary
=================
rotates right around a specified node, and cares about subtrees and balance

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: the node that replaced the node that was used to rotate around

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>elem</Name><Comment><![CDATA[the node around the rotation should be performed]]></Comment><Type Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</Type><BitSize>64</BitSize></Parameter><Parameter><Name>removing</Name><Comment><![CDATA[indicates if method was called in context of remove (then true) or in context of insert (then false) ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>heightNotChanged</Name><Comment><![CDATA[false if height changed, set to true when rotation rebalanced the tree]]></Comment><Type ReferenceTo="true">BOOL</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter><Local><Name>leftChild</Name><Type Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</Type><BitSize>64</BitSize></Local><Local><Name>rightChild</Name><Type Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</Type><BitSize>64</BitSize></Local></Method><Method><Name>clone</Name><Comment><![CDATA[

short summary
=================
This method is used to create a new instance
of the object which has the same internal state as the object.
If the object is a container class, the references to the content objects
are not cloned for this there is the method ``ICloneable.deepClone``.

If an object does not support cloning the return value is
``CNM_ReturnTypes.CloneResult.CLONE_IS_NOT_SUPPORTED``.

If there is not enough memory or the cloning fails because the
attribute enable dynamic creation was forgotten the return value is 
``CNM_ReturnTypes.CloneResult.FAILED``.

Only if the return value is ``CNM_ReturnTypes.CloneResult.SUCCESS``
the output ``clonedObject`` points to the new object
otherwise ``clonedObject`` is NULL.  

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``CNM_ReturnTypes.CloneResult.SUCCESS``: new object clone was created,
	``CNM_ReturnTypes.CloneResult.FAILED``: object clone failed
	``CNM_ReturnTypes.CloneResult.CLONE_IS_NOT_SUPPORTED``: object does not support cloning

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">CloneResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>clonedObject</Name><Comment><![CDATA[ new object instance or NULL if somthing went wrong ]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Local><Name>newBalancedBinarySearchTree</Name><Type Namespace="CNM_Collections" PointerTo="1">BalancedBinarySearchTree</Type><BitSize>64</BitSize></Local><Local><Name>newComparatorObject</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Local><Name>newComparator</Name><Type Namespace="CNM_AbstractObject">IComparator</Type><BitSize>64</BitSize></Local><Local><Name>newRootObject</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Local><Name>newRoot</Name><Type Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</Type><BitSize>64</BitSize></Local><Local><Name>binaryRoot</Name><Type Namespace="CNM_CollectionInterfaces">IBinaryTreeNode</Type><BitSize>64</BitSize></Local><Local><Name>OBJECT_NOT_REFERENCED</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>merge</Name><Comment><![CDATA[

short summary
=================
overwrites the content of this set with the union of this set and the given set
Set union: Combination of all elements from two sets.

Example:
Set A = {2, 3, 1, 4}
Set B = {3, 5, 6, 4}

Union of A and B: {1, 2, 3, 4, 5, 6}

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: ``SUCCESS``: if merge completed, 
	``ABORTED``: execute has a falling edge during merge,
	``BUSY``: merge is in Progress
	``ERROR``: the passed collection where not valid / contained invalid Elements
	``IDLE``: Currently no merge in progress

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>set</Name><Comment><![CDATA[foreign set to merge with]]></Comment><Type Namespace="CNM_CollectionInterfaces">ISet</Type><BitSize>64</BitSize></Parameter><Parameter><Name>execute</Name><Comment><![CDATA[If merge should be processed]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Local><Name>object</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Local><Name>iterateState</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize></Local></Method><Method><Name>getNewIterator</Name><Comment><![CDATA[

short summary
=================
This methode returns a NEW Iterator instance which can iterate the collection.
These iterators can be used in parallel to each other.

.. <warning>

The created Iterator was created using the __NEW operator and must be destructed to avoid memory leaks!

.. </warning>

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">IIterator</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>newIterator</Name><Type Namespace="CNM_Collections" PointerTo="1">DFS_BBSTIterator</Type><BitSize>64</BitSize></Local></Method><Method><Name>dec</Name><Comment><![CDATA[

short summary
=================
Method to decrease \_\_XWORD without overflow

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================

]]></Comment><Parameter><Name>value</Name><Comment><![CDATA[value to decrease]]></Comment><Type ReferenceTo="true">LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter><Local><Name>XWORD_MAX</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>intersect</Name><Comment><![CDATA[

short summary
=================
overwrites the content of this set with the intersection of this set and the given set
Set intersection: Common elements between two sets.

Example:
Set A = {2, 3, 1, 4}
Set B = {3, 5, 6, 4}

Intersection of A and B: {3, 4}

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: ``SUCCESS``: if intersect is complete
	``ABORTED``: execute has a falling edge during intersect,
	``BUSY``: Intersect is in Progress
	``ERROR``: the passed collection where not valid / contained invalid Elements
	``IDLE``: Currently no intersect in progress

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>set</Name><Comment><![CDATA[foreign set to intersect with]]></Comment><Type Namespace="CNM_CollectionInterfaces">ISet</Type><BitSize>64</BitSize></Parameter><Parameter><Name>execute</Name><Comment><![CDATA[If intersect should be processed]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Local><Name>lastExecute</Name><Type>BOOL</Type><BitSize>8</BitSize><Properties><Property><Name>uselocation</Name><Value>BALANCEDBINARYSEARCHTREE_1080__INTERSECT_1125__LASTEXECUTE</Value></Property></Properties></Local><Local><Name>state</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><Properties><Property><Name>uselocation</Name><Value>BALANCEDBINARYSEARCHTREE_1080__INTERSECT_1125__STATE</Value></Property></Properties></Local><Local><Name>objectsToRemove</Name><Type Namespace="CNM_CollectionInterfaces">ILinkedList</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>BALANCEDBINARYSEARCHTREE_1080__INTERSECT_1125__OBJECTSTOREMOVE</Value></Property></Properties></Local><Local><Name>maxInsertOperationsPerCycle</Name><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>BALANCEDBINARYSEARCHTREE_1080__INTERSECT_1125__MAXINSERTOPERATIONSPERCYCLE</Value></Property></Properties></Local><Local><Name>object</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Local><Name>iterateState</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize></Local><Local><Name>insertOperationsThisCycle</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>decrementSize</Name><Comment><![CDATA[

short summary
=================
decrements the size of the collection

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================

]]></Comment></Method><Method><Name>recursivInsert</Name><Comment><![CDATA[

short summary
=================
recursiv insert function, tries to insert in the Tree and if not on right position call itself again on a subtree, on way out of recursin (re)balance tree

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: the node that is the new root of the subtree for that the recursiv method is called

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>object</Name><Comment><![CDATA[the object that shoul be inserted]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Parameter><Name>elem</Name><Comment><![CDATA[the root of the tree we try to insert]]></Comment><Type Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</Type><BitSize>64</BitSize></Parameter><Parameter><Name>heightNotChanged</Name><Comment><![CDATA[is changed to false when insert was successful]]></Comment><Type ReferenceTo="true">BOOL</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter><Parameter><Name>insertResult</Name><Comment><![CDATA[SUCCESS if node could be inserted, ERROR if object already in the tree, ABORTED if object was null or empty node found]]></Comment><Type Namespace="CNM_ReturnTypes">SingleExecutionResult</Type><BitSize>16</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Local><Name>rightChild</Name><Type Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</Type><BitSize>64</BitSize></Local><Local><Name>binaryRightChild</Name><Type Namespace="CNM_CollectionInterfaces">IBinaryTreeNode</Type><BitSize>64</BitSize></Local><Local><Name>binaryLeftChild</Name><Type Namespace="CNM_CollectionInterfaces">IBinaryTreeNode</Type><BitSize>64</BitSize></Local><Local><Name>leftChild</Name><Type Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</Type><BitSize>64</BitSize></Local><Local><Name>OBJECT_IS_NOT_REFERENCED</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>__setsize</Name><Comment><![CDATA[

short summary
=================
This property allows to change the collection size without using insert / remove etc.
Can be used for clone operations etc. should never be visible for the user.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Parameter><Name>size</Name><Comment><![CDATA[

short summary
=================
This property allows to change the collection size without using insert / remove etc.
Can be used for clone operations etc. should never be visible for the user.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setroot</Name><Comment><![CDATA[

short summary
=================
This property points to the root of a tree

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Parameter><Name>root</Name><Comment><![CDATA[

short summary
=================
This property points to the root of a tree

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Type Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</Type><BitSize>64</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>recursivRemove</Name><Comment><![CDATA[

short summary
=================
recursiv remove an element tries to remove element from tree, if not possible calls itself on subtree, on way out of recursin (re)balance tree

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: the node that is the new root of the subtree for that the recursiv method is called

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>object</Name><Comment><![CDATA[The object that should be removed]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Parameter><Name>elem</Name><Comment><![CDATA[The root of the tree we try to delete the object from ]]></Comment><Type Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</Type><BitSize>64</BitSize></Parameter><Parameter><Name>heightNotChanged</Name><Comment><![CDATA[changed to false when node is removed]]></Comment><Type ReferenceTo="true">BOOL</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter><Parameter><Name>removeResult</Name><Comment><![CDATA[SUCCESS, if remove was successful]]></Comment><Type Namespace="CNM_ReturnTypes">SingleExecutionResult</Type><BitSize>16</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Local><Name>leftChild</Name><Type Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</Type><BitSize>64</BitSize></Local><Local><Name>binaryLeftChild</Name><Type Namespace="CNM_CollectionInterfaces">IBinaryTreeNode</Type><BitSize>64</BitSize></Local><Local><Name>binaryRightChild</Name><Type Namespace="CNM_CollectionInterfaces">IBinaryTreeNode</Type><BitSize>64</BitSize></Local><Local><Name>rightChild</Name><Type Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</Type><BitSize>64</BitSize></Local><Local><Name>testrightChild</Name><Type Namespace="CNM_CollectionInterfaces">IBinaryTreeNode</Type><BitSize>64</BitSize></Local><Local><Name>OBJECT_IS_NOT_REFERENCED</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>insertCollection</Name><Comment><![CDATA[

short summary
=================
This method inserts all elements of a collection into the tree

If any value of the collection could not be inserted because of duplication, operation isn't aborted, 
insertion is tried for every element of the collection.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: ``SUCCESS``: if insert could made, error if object was already in the tree,
	``ABORTED``: execute has a falling edge during insert,
	``BUSY``: Insert is in Progress
	``ERROR``: the passed collection where not valid / contained invalid Elements
	``IDLE``: Currently no insert in progress

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>collection</Name><Comment><![CDATA[The collection that should be inserted]]></Comment><Type Namespace="CNM_CollectionInterfaces">ICollection</Type><BitSize>64</BitSize></Parameter><Parameter><Name>execute</Name><Comment><![CDATA[If insert should be processed]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>insertResult</Name><Comment><![CDATA[ 
        SUCCESS if every element could be inserted, 
        ERROR if new collection contained values that couldn't be inserted due to duplication 
		ABORTED if methodcall was aborted by falling edge on executed 
    ]]></Comment><Type Namespace="CNM_ReturnTypes">SingleExecutionResult</Type><BitSize>16</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter></Method><Method><Name>__getroot</Name><Comment><![CDATA[

short summary
=================
This property points to the root of a tree

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>root</Name><Type Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__gettreeHeight</Name><Comment><![CDATA[

short summary
=================
Function to calculate the height of a tree, as its a balanced binary tree, is defined as 
height := log\ :sub:`2`\(Nodeamount) (Truncated)
log\ :sub:`2`\(x) := log(x)/log(2)

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================

]]></Comment><ReturnType>LWORD</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>treeHeight</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Local><Name>LOG2</Name><Type>LREAL</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>searchSuccessor</Name><Comment><![CDATA[

short summary
=================
searches a successor and removes it from the tree so it can be used to replace another (deleted) node

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: The successor node

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>elem</Name><Comment><![CDATA[The element that the successor is searched from]]></Comment><Type Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</Type><BitSize>64</BitSize></Parameter><Parameter><Name>heightNotChanged</Name><Comment><![CDATA[True if operation did not change the height of the subtree / heightchange was handled]]></Comment><Type ReferenceTo="true">BOOL</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter><Local><Name>newRoot</Name><Type Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</Type><BitSize>64</BitSize></Local><Local><Name>rightChild</Name><Type Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</Type><BitSize>64</BitSize></Local></Method><Method><Name>reorganizeLeftRotate</Name><Comment><![CDATA[

short summary
=================
performs a left rotation around a specified node and cares about the subtress and balance
 
.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: the new root that replaced the one that was used for rotation

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>elem</Name><Comment><![CDATA[The element around that should be rotatet]]></Comment><Type Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</Type><BitSize>64</BitSize></Parameter><Parameter><Name>removing</Name><Comment><![CDATA[indicates if method was called in context of remove (then true) or in context of insert (then false) ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>heightNotChanged</Name><Comment><![CDATA[false if the height of the tree changed]]></Comment><Type ReferenceTo="true">BOOL</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter><Local><Name>internLeftChild</Name><Type Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</Type><BitSize>64</BitSize></Local><Local><Name>internRightChild</Name><Type Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</Type><BitSize>64</BitSize></Local></Method><Method><Name>rotateRight</Name><Comment><![CDATA[

short summary
=================
rotates right around a specified node, doesnt care about balance and stuff, this is done in method ``reorganizeRightRotate``

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: the new root

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>elem</Name><Comment><![CDATA[the element that should be rotatet around]]></Comment><Type Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</Type><BitSize>64</BitSize></Parameter><Local><Name>newRoot</Name><Type Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</Type><BitSize>64</BitSize></Local></Method><Method><Name>clear</Name><Comment><![CDATA[

short summary
=================
This methode clears/deletes all clearable data from this object.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Local><Name>binaryRoot</Name><Type Namespace="CNM_CollectionInterfaces">IBinaryTreeNode</Type><BitSize>64</BitSize></Local><Local><Name>OBJECT_NOT_REFERENCED</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>compareNodes</Name><Comment><![CDATA[

short summary
=================
compares two objects (should be nodevalues, or values to be inserted), uses the comparator set with method ``setNodeComparator``

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: ``SMALLER``: ``object1`` precedes in order,
	``EQUAL``: ``object1`` and ``object2`` at the same position in order,
	``GREATER``: ``object1`` is after in order. Checkout the library CNM_ReturnTypes.

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">ComparationResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>object1</Name><Comment><![CDATA[first object to compare]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Parameter><Name>object2</Name><Comment><![CDATA[second object to compare]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>destructNodeAndAllChilds</Name><Comment><![CDATA[

short summary
=================
destructs / deepdestructs all nodes in the subtrees of a specified node and this node

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================

]]></Comment><Parameter><Name>node</Name><Comment><![CDATA[the node that should be destructed with all it's childs]]></Comment><Type Namespace="CNM_CollectionInterfaces" ReferenceTo="true">IBinaryTreeNode</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter><Parameter><Name>destructDeep</Name><Comment><![CDATA[if true also the node contents will be destructed, if false only the nodes will be destructed]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Local><Name>child</Name><Type Namespace="CNM_CollectionInterfaces">IBinaryTreeNode</Type><BitSize>64</BitSize></Local><Local><Name>OBJECT_NOT_REFERENCED</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>containsObject</Name><Comment><![CDATA[

short summary
=================
This methode checks if a given object is contained in the collection.
Overwrite default implementation to use the advantages of balanced trees

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``FALSE``: list does not contain given object
	``TRUE``: list does contain given object

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Parameter><Name>object</Name><Comment><![CDATA[the object to be checked if it exists inside the collection]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Local><Name>currentElement</Name><Type Namespace="CNM_CollectionInterfaces">IBinaryTreeNode</Type><BitSize>64</BitSize></Local></Method><Method><Name>deepDestruct</Name><Comment><![CDATA[

short summary
=================
This method is a self-destruction if the object was created dynamically.
If the object is a container class, the container content is destroyed with it.
The output NULL is a constant which is always NULL,
this allows a semi-pleasant notation: ``foo.deepDestruct(NULL => foo);``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

InOut:
	+-----------------+------+---------+------------------------------------------+
	| Scope           | Name | Type    | Comment                                  |
	+=================+======+=========+==========================================+
	| Output CONSTANT | NULL | __XWORD | ``NULL`` is a constant which is always 0 |
	+-----------------+------+---------+------------------------------------------+

]]></Comment><Parameter><Name>NULL</Name><Comment><![CDATA[ NULL is a constant which is always 0 ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter></Method><Method><Name>__getinstant</Name><ReturnType Namespace="CNM_CollectionInterfaces">IInstantBalancedBinarySearchTree</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>instant</Name><Type Namespace="CNM_CollectionInterfaces">IInstantBalancedBinarySearchTree</Type><BitSize>64</BitSize></Local><Local><Name>executor</Name><Type Namespace="CNM_Collections">InstantBalancedBinarySearchTreeExecutor</Type><BitSize>256</BitSize><Properties><Property><Name>uselocation</Name><Value>BALANCEDBINARYSEARCHTREE_1080____GETINSTANT_1086__EXECUTOR</Value></Property></Properties></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>getSmallestNode</Name><Comment><![CDATA[

short summary
=================
finds the smallest node in a specified (sub)tree

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: the node with the smallest value based on the comparedTo Method

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">IBinaryTreeNode</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>startNode</Name><Comment><![CDATA[the node from that the search should be started]]></Comment><Type Namespace="CNM_CollectionInterfaces">IBinaryTreeNode</Type><BitSize>64</BitSize></Parameter><Parameter><Name>nodebuffer</Name><Type Namespace="CNM_CollectionInterfaces" ReferenceTo="true" PointerTo="1">IBinaryTreeNode</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter><Parameter><Name>bufferindex</Name><Type ReferenceTo="true">LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter><Local><Name>currNode</Name><Type Namespace="CNM_CollectionInterfaces">IBinaryTreeNode</Type><BitSize>64</BitSize></Local><Local><Name>OBJECT_NOT_REFERENCED</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>deepClone</Name><Comment><![CDATA[

short summary
=================
This method is used to create a new instance
of the object which has the same internal state as the object.
If the object is a container class, the references to the content objects
are cloned too.

If an object does not support cloning the return value is
``CNM_ReturnTypes.CloneResult.CLONE_IS_NOT_SUPPORTED``.

If there is not enough memory or the cloning fails because the
attribute enable dynamic creation was forgotten the return value is 
``CNM_ReturnTypes.CloneResult.FAILED``.
If something goes wrong, then this method must clean up everything
that has been cloned and free the memory again.
**The deepClone either works completely, or not at all**

Only if the return value is ``CNM_ReturnTypes.CloneResult.SUCCESS``
the output ``clonedObject`` points to the new object
otherwise ``clonedObject`` is NULL.  

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``CNM_ReturnTypes.CloneResult.SUCCESS``: new object clone was created,
	``CNM_ReturnTypes.CloneResult.FAILED``: object clone failed
	``CNM_ReturnTypes.CloneResult.CLONE_IS_NOT_SUPPORTED``: object does not support deep cloning

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">CloneResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>clonedObject</Name><Comment><![CDATA[ new object instance or NULL if somthing went wrong ]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Local><Name>newTreeObject</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Local><Name>newTree</Name><Type Namespace="CNM_Collections" PointerTo="1">BalancedBinarySearchTree</Type><BitSize>64</BitSize></Local><Local><Name>currentNode</Name><Type Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</Type><BitSize>64</BitSize></Local><Local><Name>binaryRoot</Name><Type Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</Type><BitSize>64</BitSize></Local><Local><Name>rootObject</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local></Method><Method><Name>incrementSize</Name><Comment><![CDATA[

short summary
=================
increments the size of the collection

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================

]]></Comment></Method><Method><Name>__setdeepCloned</Name><Comment><![CDATA[

short summary
=================
Property to set the information that this tree is the result of a deepclone operation

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``True`` if this tree is the result from a call to deepClone, ``False`` else

]]></Comment><Parameter><Name>deepCloned</Name><Comment><![CDATA[

short summary
=================
Property to set the information that this tree is the result of a deepclone operation

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``True`` if this tree is the result from a call to deepClone, ``False`` else

]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>getClonedComparator</Name><Comment><![CDATA[

short summary
=================
prepares a new Comparator (if set)

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">CloneResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>deepCloned</Name><Comment><![CDATA[True if called from deepclonecontext]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>newComparator</Name><Comment><![CDATA[New comparator Object, null if not existent or not cloneable]]></Comment><Type Namespace="CNM_AbstractObject">IComparator</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Local><Name>newComparatorObject</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local></Method><Method><Name>compareTo</Name><Comment><![CDATA[

short summary
=================
This method compares a foreign object with the own one, this is needed for sort orders.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``SMALLER``: ``THIS`` precedes in order,
	``EQUAL``: ``THIS`` and ``object`` at the same position in order,
	``GREATER``: ``THIS`` is after in order.

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">ComparationResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>object</Name><Comment><![CDATA[ foreign object to compare]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Local><Name>treeToCompare</Name><Type Namespace="CNM_Collections" PointerTo="1">BalancedBinarySearchTree</Type><BitSize>64</BitSize></Local></Method><Method><Name>announceChange</Name><Comment><![CDATA[

short summary
=================
called every time the tree changes, can be used to notify components

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================

]]></Comment></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property><Property><Name>VTableOffset</Name><Value>1343368</Value></Property><Property><Name>VfInitVTableIndex</Name><Value>23</Value></Property><Property><Name>enable_dynamic_creation</Name></Property></Properties></DataType><DataType><Name Namespace="CNM_Collections">CollectionFactory</Name><Comment><![CDATA[

short summary
=================
Class that provides getter for new CollectionInstances and is able to destruct them.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

methods and properties
=========================

]]></Comment><BitSize>3584</BitSize><ExtendsType Namespace="CNM_AbstractObject">Object</ExtendsType><Implements Namespace="CNM_CollectionInterfaces">ICollectionFactory</Implements><Method><Name>getNewBBSTreeNode</Name><Comment><![CDATA[

short summary
=================
function to create a new balanced binary searchtree node

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: the new created BalancedBinarySearchTree Node

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTreeNode</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>object</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Local><Name>newTreeNode</Name><Type Namespace="CNM_Collections" PointerTo="1">BalancedBinarySearchTreeNode</Type><BitSize>64</BitSize></Local><Local><Name>IS_NOT_REFERENCED</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>getNewArrayListSectionInsertionSorter</Name><Comment><![CDATA[

short summary
=================
ThisMethod will create a new Insertionsorter that is capable to sort only a part of a list.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">ISectionSorter</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>newSorter</Name><Type Namespace="CNM_Collections" PointerTo="1">SectionInsertionSorter</Type><BitSize>64</BitSize></Local></Method><Method><Name>destructObjectArrayList</Name><Parameter><Name>objectList</Name><Type Namespace="CNM_CollectionInterfaces">IArrayList</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>destructObjectLinkedList</Name><Parameter><Name>objectList</Name><Type Namespace="CNM_CollectionInterfaces">ILinkedList</Type><BitSize>64</BitSize></Parameter><Local><Name>concreteList</Name><Type Namespace="CNM_Collections" PointerTo="1">LinkedList</Type><BitSize>64</BitSize></Local></Method><Method><Name>getNewArrayListShellSorter</Name><Comment><![CDATA[

short summary
=================
This method will create a new shellsorter that can sort an Arraylist

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">IArrayListSorter</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>newSorter</Name><Type Namespace="CNM_Collections" PointerTo="1">ArrayListShellSorter</Type><BitSize>64</BitSize></Local></Method><Method><Name>destructArrayListSorter</Name><Parameter><Name>ArrayListSorter</Name><Type Namespace="CNM_CollectionInterfaces">IArrayListSorter</Type><BitSize>64</BitSize></Parameter><Local><Name>concreteMergeSorter</Name><Type Namespace="CNM_Collections" PointerTo="1">ArrayListMergeSorter</Type><BitSize>64</BitSize></Local><Local><Name>concreteShellSorter</Name><Type Namespace="CNM_Collections" PointerTo="1">ArrayListShellSorter</Type><BitSize>64</BitSize></Local><Local><Name>concreteTimSorter</Name><Type Namespace="CNM_Collections" PointerTo="1">ArrayListTimSorter</Type><BitSize>64</BitSize></Local><Local><Name>concreteSectionIsertionSorter</Name><Type Namespace="CNM_Collections" PointerTo="1">SectionInsertionSorter</Type><BitSize>64</BitSize></Local></Method><Method><Name>getNewArrayListMergeSorter</Name><Comment><![CDATA[

short summary
=================
This method will create a new MergeSorter

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">IArrayListSorter</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>newSorter</Name><Type Namespace="CNM_Collections" PointerTo="1">ArrayListMergeSorter</Type><BitSize>64</BitSize></Local></Method><Method><Name>destructDoublyLinkedElement</Name><Parameter><Name>element</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Parameter><Parameter><Name>unlinkElement</Name><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Local><Name>concreteElement</Name><Type Namespace="CNM_Collections" PointerTo="1">DoublyLinkedElement</Type><BitSize>64</BitSize></Local><Local><Name>nextElement</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Local></Method><Method><Name>getNewDoublyLinkedElement</Name><ReturnType Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>object</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Parameter><Name>previousElement</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Parameter><Parameter><Name>nextElement</Name><Type Namespace="CNM_CollectionInterfaces">IDoublyLinkedElement</Type><BitSize>64</BitSize></Parameter><Parameter><Name>linkElements</Name><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Local><Name>newElement</Name><Type Namespace="CNM_Collections" PointerTo="1">DoublyLinkedElement</Type><BitSize>64</BitSize></Local></Method><Method><Name>getNewArrayListTimSorter</Name><Comment><![CDATA[

short summary
=================
This Method will create a new Timsorter that can sort an ArrayList

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">IArrayListSorter</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>newSorter</Name><Type Namespace="CNM_Collections" PointerTo="1">ArrayListTimSorter</Type><BitSize>64</BitSize></Local></Method><Method><Name>clone</Name><Comment><![CDATA[

short summary
=================
This method is used to create a new instance
of the object which has the same internal state as the object.
If the object is a container class, the references to the content objects
are not cloned for this there is the method `ICloneable.deepClone`.

If an object does not support cloning the return value is
``CNM_ReturnTypes.CloneResult.CLONE_IS_NOT_SUPPORTED``.

If there is not enough memory or the cloning fails because the
attribute enable dynamic creation was forgotten the return value is 
``CNM_ReturnTypes.CloneResult.FAILED``.

Only if the return value is ``CNM_ReturnTypes.CloneResult.SUCCESS``
the output ``clonedObject`` points to the new object
otherwise ``clonedObject`` is NULL.  

.. attention:: 
	For derivations: **If a derived class needs ``clone`` this method must be overwritten.**
	and don't forget the attribute ``{attribute 'enable_dynamic_creation'}``  

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``CNM_ReturnTypes.CloneResult.SUCCESS``: new object clone was created,
	``CNM_ReturnTypes.CloneResult.FAILED``: object clone failed
	``CNM_ReturnTypes.CloneResult.CLONE_IS_NOT_SUPPORTED``: object does not support cloning

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">CloneResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>clonedObject</Name><Comment><![CDATA[ new object instance or NULL if somthing went wrong ]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter></Method><Method><Name>getNewObjectArrayList</Name><ReturnType Namespace="CNM_CollectionInterfaces">IArrayList</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>newList</Name><Type Namespace="CNM_Collections" PointerTo="1">ArrayList</Type><BitSize>64</BitSize></Local></Method><Method><Name>getNewBBSTree</Name><Comment><![CDATA[

short summary
=================
function to create a new balanced binary searchtree

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: the new created BalancedBinarySearchTree

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">IBalancedBinarySearchTree</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>comparator</Name><Comment><![CDATA[Optional custom comparator]]></Comment><Type Namespace="CNM_AbstractObject">IComparator</Type><BitSize>64</BitSize></Parameter><Local><Name>newBalancedBinarySearchTree</Name><Type Namespace="CNM_Collections" PointerTo="1">BalancedBinarySearchTree</Type><BitSize>64</BitSize></Local><Local><Name>OBJECT_NOT_REFERENCED</Name><Type>LWORD</Type><BitSize>64</BitSize></Local></Method><Method><Name>deepClone</Name><Comment><![CDATA[

short summary
=================
This method is used to create a new instance
of the object which has the same internal state as the object.
If the object is a container class, the references to the content objects
are cloned too.

If an object does not support cloning the return value is
``CNM_ReturnTypes.CloneResult.CLONE_IS_NOT_SUPPORTED``.

If there is not enough memory or the cloning fails because the
attribute enable dynamic creation was forgotten the return value is 
``CNM_ReturnTypes.CloneResult.FAILED``.
If something goes wrong, then this method must clean up everything
that has been cloned and free the memory again.
**The deepClone either works completely, or not at all**

Only if the return value is ``CNM_ReturnTypes.CloneResult.SUCCESS``
the output ``clonedObject`` points to the new object
otherwise ``clonedObject`` is NULL.  

.. attention:: 
	For derivations: **If a derived class needs ``deepClone`` this method must be overwritten.**
	and don't forget the attribute ``{attribute 'enable_dynamic_creation'}``, even for container content 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return:``CNM_ReturnTypes.CloneResult.SUCCESS``: new object clone was created,
``CNM_ReturnTypes.CloneResult.FAILED``: object clone failed
``CNM_ReturnTypes.CloneResult.CLONE_IS_NOT_SUPPORTED``: object does not support deep cloning

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">CloneResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>clonedObject</Name><Comment><![CDATA[ new object instance or NULL if somthing went wrong ]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter></Method><Method><Name>destructObjectList</Name><Parameter><Name>objectList</Name><Type Namespace="CNM_CollectionInterfaces">IList</Type><BitSize>64</BitSize></Parameter><Local><Name>concreteList</Name><Type Namespace="CNM_Collections" PointerTo="1">LinkedList</Type><BitSize>64</BitSize></Local></Method><Method><Name>__getclassName</Name><Comment><![CDATA[

short summary
=================
This abstract property returns the class name of the concrete object, 
which is useful to check the class name for ``__DELETE``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">ClassName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Local><Name>className</Name><Type Namespace="CNM_AbstractObject">ClassName</Type><BitSize>2048</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>getNewObjectLinkedList</Name><ReturnType Namespace="CNM_CollectionInterfaces">ILinkedList</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>newList</Name><Type Namespace="CNM_Collections" PointerTo="1">LinkedList</Type><BitSize>64</BitSize></Local></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_CollectionInterfaces">IApplierChainContinue</Name><BitSize>64</BitSize><ExtendsType GUID="{18071995-0000-0000-0000-000000000018}">PVOID</ExtendsType><Method><Name>andThen</Name><ReturnType Namespace="CNM_CollectionInterfaces">IApplierChainContinue</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>applier</Name><Type Namespace="CNM_CollectionInterfaces">IApplier</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>finish</Name><ReturnType Namespace="CNM_CollectionInterfaces">IApplier</ReturnType><ReturnBitSize>64</ReturnBitSize></Method></DataType><DataType><Name Namespace="CNM_CollectionInterfaces">IApplierChainBuilder</Name><BitSize>64</BitSize><ExtendsType GUID="{18071995-0000-0000-0000-000000000018}">PVOID</ExtendsType><Method><Name>startWith</Name><ReturnType Namespace="CNM_CollectionInterfaces">IApplierChainContinue</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>applier</Name><Type Namespace="CNM_CollectionInterfaces">IApplier</Type><BitSize>64</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_Collections">ApplierList</Name><BitSize>9856</BitSize><ExtendsType Namespace="CNM_AbstractObject">Object</ExtendsType><Implements Namespace="CNM_CollectionInterfaces">IApplierList</Implements><SubItem><Name>myList</Name><Type Namespace="CNM_Collections">ArrayList</Type><BitSize>7232</BitSize><BitOffs>2624</BitOffs></SubItem><Method><Name>__getcount</Name><ReturnType>LWORD</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>count</Name><Type>LWORD</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getlist</Name><ReturnType Namespace="CNM_CollectionInterfaces">IArrayList</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>list</Name><Type Namespace="CNM_CollectionInterfaces">IArrayList</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>getApplier</Name><ReturnType Namespace="CNM_CollectionInterfaces">IApplier</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>index</Name><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Local><Name>obj</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local></Method><Method><Name>clear</Name><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize></Method><Method><Name>addApplier</Name><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>applier</Name><Type Namespace="CNM_CollectionInterfaces">IApplier</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>addAppliers</Name><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>appliers</Name><Type Namespace="CNM_CollectionInterfaces">ICollection</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>__getclassName</Name><ReturnType Namespace="CNM_AbstractObject">ClassName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Local><Name>className</Name><Type Namespace="CNM_AbstractObject">ClassName</Type><BitSize>2048</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_Collections">AbstractApplier</Name><Comment><![CDATA[

short summary
=================
An abstract class to implement the logic of Appliers for forEach. Users only need to implement apply in inherited class and should not change any other method.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

methods and properties
=========================

]]></Comment><BitSize>12672</BitSize><ExtendsType Namespace="CNM_AbstractObject">Object</ExtendsType><Implements Namespace="CNM_CollectionInterfaces">IApplier</Implements><SubItem><Name>myactions</Name><Type Namespace="CNM_Collections">ApplierList</Type><BitSize>9856</BitSize><BitOffs>2816</BitOffs></SubItem><Method><Name>__getactions</Name><ReturnType Namespace="CNM_CollectionInterfaces">IApplierList</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>actions</Name><Type Namespace="CNM_CollectionInterfaces">IApplierList</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>deepDestruct</Name><Comment><![CDATA[

short summary
=================
This method is a self-destruction if the object was created dynamically.
If the object is a container class, the container content is destroyed with it.
The output NULL is a constant which is always NULL,
this allows a semi-pleasant notation: ``foo.deepDestruct(NULL => foo);``.

.. attention:: 
	For derivations: **If a derived class needs ``deepDestruct`` this method must be overwritten.**
	otherwise it just calls :ref:`Object.destruct`. 


.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

InOut:
	+-----------------+------+---------+------+------------------------------------------+
	| Scope           | Name | Type    | Init | Comment                                  |
	+=================+======+=========+======+==========================================+
	| Output CONSTANT | NULL | __XWORD | 0    | ``NULL`` is a constant which is always 0 |
	+-----------------+------+---------+------+------------------------------------------+

]]></Comment><Parameter><Name>NULL</Name><Comment><![CDATA[ NULL is a constant which is always 0 ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property><Property><Name>suppress_warning_0</Name><Value>C0533</Value></Property></Properties></Parameter></Method><Method><Name>apply</Name><Comment><![CDATA[

short summary
=================
A method to apply the concrete action on the given object (THIS^.object)

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: CNM_ReturnTypes.SingleExecutionState

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the application, should to be active until the CNM_ReturnTypes.SingleExecutionState is SUCCESS]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter></Method><Method><Name>accept</Name><Comment><![CDATA[

short summary
=================
Methode to accept an object.
Example:
NumberIncrementer.accept(Number);

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>object</Name><Comment><![CDATA[object to accept]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>__getclassName</Name><Comment><![CDATA[

short summary
=================
This abstract property returns the class name of the concrete object, 
which is useful to check the class name for ``__DELETE``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">ClassName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Local><Name>className</Name><Type Namespace="CNM_AbstractObject">ClassName</Type><BitSize>2048</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_CollectionInterfaces">IChainedApplier</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_CollectionInterfaces">IApplier</ExtendsType><Method><Name>andThen</Name><Comment><![CDATA[

short summary
=================
Method to append another Applier to the chained applier.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: ``THIS^``:ref:`IChainedApplier`

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">IChainedApplier</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>applier</Name><Comment><![CDATA[the applier to be used additionaly when using applyAll]]></Comment><Type Namespace="CNM_CollectionInterfaces">IApplier</Type><BitSize>64</BitSize></Parameter></Method><Properties><Property><Name>TcPlcInterfaceId</Name><Value>1260</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_Collections">ChainedApplier</Name><Comment><![CDATA[

short summary
=================
An abstract class to implement the logic of Appliers for forEach. Users only need to implement apply in inherited class and should not change any other method.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

methods and properties
=========================

]]></Comment><BitSize>16448</BitSize><ExtendsType Namespace="CNM_Collections">AbstractApplier</ExtendsType><Implements Namespace="CNM_CollectionInterfaces">IChainedApplier</Implements><SubItem><Name>object</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize><BitOffs>13056</BitOffs></SubItem><SubItem><Name>ChainedApplier_1210__apply_1222__iterator</Name><Type Namespace="CNM_Collections">DefaultArrayListIterator</Type><BitSize>3200</BitSize><BitOffs>13120</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>ChainedApplier_1210__apply_1222__lastExecute</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>16320</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>ChainedApplier_1210__apply_1222__step</Name><Type>USINT</Type><BitSize>8</BitSize><BitOffs>16328</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>ChainedApplier_1210__apply_1222__returnState</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><BitOffs>16336</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>ChainedApplier_1210__apply_1222__currentApplier</Name><Type Namespace="CNM_CollectionInterfaces">IApplier</Type><BitSize>64</BitSize><BitOffs>16384</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><Method><Name>getStepFromState</Name><ReturnType>USINT</ReturnType><ReturnBitSize>8</ReturnBitSize><Parameter><Name>result</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize></Parameter><Local><Name>STEP_IDLE</Name><Type>USINT</Type><BitSize>8</BitSize></Local><Local><Name>STEP_INIT</Name><Type>USINT</Type><BitSize>8</BitSize></Local><Local><Name>STEP_RUN</Name><Type>USINT</Type><BitSize>8</BitSize></Local><Local><Name>STEP_DONE</Name><Type>USINT</Type><BitSize>8</BitSize></Local><Local><Name>STEP_ERROR</Name><Type>USINT</Type><BitSize>8</BitSize></Local></Method><Method><Name>apply</Name><Comment><![CDATA[

short summary
=================
A method to apply the concrete action on the given object (THIS^.object)

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: CNM_ReturnTypes.SingleExecutionState

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the application, should to be active until the CNM_ReturnTypes.SingleExecutionState is SUCCESS]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Local><Name>iterator</Name><Type Namespace="CNM_Collections">DefaultArrayListIterator</Type><BitSize>3200</BitSize><Properties><Property><Name>uselocation</Name><Value>CHAINEDAPPLIER_1210__APPLY_1222__ITERATOR</Value></Property></Properties></Local><Local><Name>lastExecute</Name><Type>BOOL</Type><BitSize>8</BitSize><Properties><Property><Name>uselocation</Name><Value>CHAINEDAPPLIER_1210__APPLY_1222__LASTEXECUTE</Value></Property></Properties></Local><Local><Name>step</Name><Type>USINT</Type><BitSize>8</BitSize><Properties><Property><Name>uselocation</Name><Value>CHAINEDAPPLIER_1210__APPLY_1222__STEP</Value></Property></Properties></Local><Local><Name>returnState</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><Properties><Property><Name>uselocation</Name><Value>CHAINEDAPPLIER_1210__APPLY_1222__RETURNSTATE</Value></Property></Properties></Local><Local><Name>currentApplier</Name><Type Namespace="CNM_CollectionInterfaces">IApplier</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>CHAINEDAPPLIER_1210__APPLY_1222__CURRENTAPPLIER</Value></Property></Properties></Local><Local><Name>STEP_IDLE</Name><Type>USINT</Type><BitSize>8</BitSize></Local><Local><Name>STEP_INIT</Name><Type>USINT</Type><BitSize>8</BitSize></Local><Local><Name>STEP_RUN</Name><Type>USINT</Type><BitSize>8</BitSize></Local><Local><Name>STEP_DONE</Name><Type>USINT</Type><BitSize>8</BitSize></Local><Local><Name>STEP_ERROR</Name><Type>USINT</Type><BitSize>8</BitSize></Local></Method><Method><Name>accept</Name><Comment><![CDATA[

short summary
=================
Methode to accept an object.
Example:
NumberIncrementer.accept(Number);

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>object</Name><Comment><![CDATA[object to accept]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>andThen</Name><Comment><![CDATA[

short summary
=================
Method to concat actions perfomed on an object. This way two (or more) Actions can be performed on data with one foreach.
All concatinated appliers can be cleared with THIS^.clear();
Example:
You want to double your numbers and then increment them, you would write:
ConcreteDoubleApplier.andThen(ConcreteIncrementApplier);
If you have a list with 1 2 3, after a forEach with this Applier the list will be transformed to: 3 5 7.

.. warning::
    It is possible to create infinite loops using andThen. For example: A1.andThen(A2).andThen(A1)
	The program will go into unknown behaviour if this occurs and the foreach call may or may not work as you intended.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: ``THIS^`` :ref:`IApplier`

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">IChainedApplier</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>applier</Name><Comment><![CDATA[the applier to be used on each object]]></Comment><Type Namespace="CNM_CollectionInterfaces">IApplier</Type><BitSize>64</BitSize></Parameter><Local><Name>chained</Name><Type Namespace="CNM_CollectionInterfaces">IChainedApplier</Type><BitSize>64</BitSize></Local><Local><Name>clonedActions</Name><Type Namespace="CNM_CollectionInterfaces">ICollection</Type><BitSize>64</BitSize></Local><Local><Name>cloneObj</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Local><Name>pList</Name><Type Namespace="CNM_Collections" PointerTo="1">ApplierList</Type><BitSize>64</BitSize></Local></Method><Method><Name>__getclassName</Name><Comment><![CDATA[

short summary
=================
This abstract property returns the class name of the concrete object, 
which is useful to check the class name for ``__DELETE``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">ClassName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Local><Name>className</Name><Type Namespace="CNM_AbstractObject">ClassName</Type><BitSize>2048</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property><Property><Name>VTableOffset</Name><Value>1350160</Value></Property><Property><Name>VfInitVTableIndex</Name><Value>23</Value></Property><Property><Name>enable_dynamic_creation</Name></Property></Properties></DataType><DataType><Name Namespace="CNM_Collections">ApplierBuilder</Name><BitSize>9792</BitSize><ExtendsType Namespace="CNM_AbstractObject">Object</ExtendsType><Implements Namespace="CNM_CollectionInterfaces">IApplierChainBuilder</Implements><Implements Namespace="CNM_CollectionInterfaces">IApplierChainContinue</Implements><SubItem><Name>applierList</Name><Type Namespace="CNM_Collections">ArrayList</Type><BitSize>7232</BitSize><BitOffs>2560</BitOffs></SubItem><Method><Name>finish</Name><ReturnType Namespace="CNM_CollectionInterfaces">IApplier</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>object</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Local><Name>chainedApplier</Name><Type Namespace="CNM_Collections" PointerTo="1">ChainedApplier</Type><BitSize>64</BitSize></Local><Local><Name>applier1</Name><Type Namespace="CNM_CollectionInterfaces">IApplier</Type><BitSize>64</BitSize></Local><Local><Name>applier2</Name><Type Namespace="CNM_CollectionInterfaces">IApplier</Type><BitSize>64</BitSize></Local><Local><Name>applierNext</Name><Type Namespace="CNM_CollectionInterfaces">IApplier</Type><BitSize>64</BitSize></Local></Method><Method><Name>startWith</Name><ReturnType Namespace="CNM_CollectionInterfaces">IApplierChainContinue</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>applier</Name><Type Namespace="CNM_CollectionInterfaces">IApplier</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>andThen</Name><ReturnType Namespace="CNM_CollectionInterfaces">IApplierChainContinue</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>applier</Name><Type Namespace="CNM_CollectionInterfaces">IApplier</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>__getclassName</Name><ReturnType Namespace="CNM_AbstractObject">ClassName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Local><Name>className</Name><Type Namespace="CNM_AbstractObject">ClassName</Type><BitSize>2048</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name GUID="{B57D3F4A-0836-49B0-81C3-BED5F4817EC9}" TcBaseType="true" CName="TcEventSeverity*" RemovableEnumPrefix="TCEVENTSEVERITY_">TcEventSeverity</Name><BitSize>16</BitSize><BaseType GUID="{18071995-0000-0000-0000-000000000006}">INT</BaseType><EnumInfo><Text><![CDATA[TCEVENTSEVERITY_Verbose]]></Text><Enum>0</Enum></EnumInfo><EnumInfo><Text><![CDATA[TCEVENTSEVERITY_Info]]></Text><Enum>1</Enum></EnumInfo><EnumInfo><Text><![CDATA[TCEVENTSEVERITY_Warning]]></Text><Enum>2</Enum></EnumInfo><EnumInfo><Text><![CDATA[TCEVENTSEVERITY_Error]]></Text><Enum>3</Enum></EnumInfo><EnumInfo><Text><![CDATA[TCEVENTSEVERITY_Critical]]></Text><Enum>4</Enum></EnumInfo><Properties><Property><Name>plcAttribute_qualified_only</Name></Property><Property><Name>plcAttribute_strict</Name></Property></Properties><Hides><Hide GUID="{777FF09F-0B00-4AF2-BD7C-C1E2CE4A0947}" /><Hide GUID="{EC3C119D-4FEC-4197-96FB-DAE1B7C403FB}" /></Hides></DataType><DataType><Name GUID="{EB67FE92-FBB1-4149-A2D5-DDFE2EFA568C}" TcBaseType="true" CName="TcEventEntryFlags*">TcEventEntryFlags</Name><BitSize>8</BitSize><BaseType GUID="{18071995-0000-0000-0000-000000000001}">BYTE</BaseType><EnumInfo><Text><![CDATA[None]]></Text><Enum>0</Enum></EnumInfo><EnumInfo><Text><![CDATA[WithConfirmation]]></Text><Enum>#x1</Enum></EnumInfo><Properties><Property><Name>plcAttribute_qualified_only</Name></Property></Properties><Hides><Hide GUID="{3C674EEB-D690-4295-AE43-3728EFC1EF66}" /></Hides></DataType><DataType><Name GUID="{6925E8D1-EDCA-47DD-B80C-A6329A85D63D}" TcBaseType="true" CName="TcEventEntry*">TcEventEntry</Name><BitSize>192</BitSize><SubItem><Name>uuidEventClass</Name><Type GUID="{18071995-0000-0000-0000-000000000021}">GUID</Type><BitSize>128</BitSize><BitOffs>0</BitOffs></SubItem><SubItem><Name>nEventId</Name><Type GUID="{18071995-0000-0000-0000-000000000008}">UDINT</Type><BitSize>32</BitSize><BitOffs>128</BitOffs></SubItem><SubItem><Name>eSeverity</Name><Type GUID="{B57D3F4A-0836-49B0-81C3-BED5F4817EC9}">TcEventSeverity</Type><BitSize>16</BitSize><BitOffs>160</BitOffs></SubItem><SubItem><Name>eFlags</Name><Type GUID="{EB67FE92-FBB1-4149-A2D5-DDFE2EFA568C}">TcEventEntryFlags</Type><BitSize>8</BitSize><BitOffs>176</BitOffs></SubItem><Hides><Hide GUID="{F00C83AD-DEC8-486E-AE99-5E0A75C26DE0}" /><Hide GUID="{128902B7-F178-4299-B8BF-51215A80685F}" /></Hides></DataType><DataType><Name>UDINT (81..10000)</Name><BitSize>32</BitSize><BaseType>UDINT</BaseType><Properties><Property><Name>LowerBorder</Name><Value>81</Value></Property><Property><Name>UpperBorder</Name><Value>10000</Value></Property></Properties></DataType><DataType><Name GUID="{D00B082B-57D8-4AC8-8507-86F44A26E0F2}" Namespace="AoC">AocError</Name><DisplayName TxtId=""><![CDATA[NewEventClass_DisplayText]]></DisplayName><EventId><Name Id="1">ParseError</Name><DisplayName TxtId=""><![CDATA[ParseError]]></DisplayName><Severity>Error</Severity></EventId><EventId><Name Id="2">CalculationError</Name><DisplayName TxtId=""><![CDATA[CalculationError]]></DisplayName><Severity>Error</Severity></EventId><EventId><Name Id="3">TestError</Name><DisplayName TxtId=""><![CDATA[TestError]]></DisplayName><Severity>Error</Severity></EventId><EventId><Name Id="4">Wtf</Name><DisplayName TxtId=""><![CDATA[AocErrorEvent4_DisplayText]]></DisplayName><Severity>Verbose</Severity></EventId><Translations><Text TxtId="ParseError"><Text LcId="1031"><![CDATA[Fehler beim Parsen der Eingabe {0}]]></Text><Text LcId="1033"><![CDATA[Error while parsing input {0}]]></Text></Text><Text TxtId="CalculationError"><Text LcId="1031"><![CDATA[Fehler beim berechnen des Ergebniss {0}]]></Text><Text LcId="1033"><![CDATA[Error while calculationg the result {0}]]></Text></Text><Text TxtId="TestError"><Text LcId="1031"><![CDATA[Ein Test ist Fehlgeschlagen {0}]]></Text><Text LcId="1033"><![CDATA[A test case failed {0}]]></Text></Text><Text TxtId="AocErrorEvent4_DisplayText"><Text LcId="1031"><![CDATA[was zum fick {0}]]></Text><Text LcId="1033"><![CDATA[wtf {0}]]></Text></Text></Translations><Hides><Hide GUID="{0708F746-AACA-4C77-B13F-B93D261D6C05}" /><Hide GUID="{77E23522-69DE-4757-87C5-BC2469A12647}" /><Hide GUID="{3466FA49-B8A1-4D6A-8BF0-FFA46AB6B638}" /><Hide GUID="{CA4BB751-07EC-4FBA-8E56-4475F9F38CC5}" /><Hide GUID="{BD9442A8-7761-4A47-92AD-DB14B706C557}" /><Hide GUID="{11EFC73C-483B-4D55-B3F7-DF65C9767DB3}" /><Hide GUID="{14CD66B8-33E5-45E3-A78D-4407A1C04D2D}" /><Hide GUID="{DFA6279E-B497-4E13-A415-0436F391259D}" /><Hide GUID="{2F411C81-B6B3-43CB-A258-067713DD0E98}" /><Hide GUID="{22846938-E231-4F00-8172-8B217000BD5D}" /></Hides></DataType><DataType><Name Namespace="AoC">ST_AocError</Name><BitSize>768</BitSize><SubItem><Name>ParseError</Name><Type GUID="{6925E8D1-EDCA-47DD-B80C-A6329A85D63D}">TcEventEntry</Type><BitSize>192</BitSize><BitOffs>0</BitOffs><Default><SubItem><Name>.uuidEventClass.Data1</Name><Value>3490383915</Value></SubItem><SubItem><Name>.uuidEventClass.Data2</Name><Value>22488</Value></SubItem><SubItem><Name>.uuidEventClass.Data3</Name><Value>19144</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[0]</Name><Value>133</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[1]</Name><Value>7</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[2]</Name><Value>134</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[3]</Name><Value>244</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[4]</Name><Value>74</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[5]</Name><Value>38</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[6]</Name><Value>224</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[7]</Name><Value>242</Value></SubItem><SubItem><Name>.nEventID</Name><EnumText>E_AocError.ParseError</EnumText></SubItem><SubItem><Name>.eSeverity</Name><EnumText>TcEventSeverity.Error</EnumText></SubItem></Default></SubItem><SubItem><Name>CalculationError</Name><Type GUID="{6925E8D1-EDCA-47DD-B80C-A6329A85D63D}">TcEventEntry</Type><BitSize>192</BitSize><BitOffs>192</BitOffs><Default><SubItem><Name>.uuidEventClass.Data1</Name><Value>3490383915</Value></SubItem><SubItem><Name>.uuidEventClass.Data2</Name><Value>22488</Value></SubItem><SubItem><Name>.uuidEventClass.Data3</Name><Value>19144</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[0]</Name><Value>133</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[1]</Name><Value>7</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[2]</Name><Value>134</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[3]</Name><Value>244</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[4]</Name><Value>74</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[5]</Name><Value>38</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[6]</Name><Value>224</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[7]</Name><Value>242</Value></SubItem><SubItem><Name>.nEventID</Name><EnumText>E_AocError.CalculationError</EnumText></SubItem><SubItem><Name>.eSeverity</Name><EnumText>TcEventSeverity.Error</EnumText></SubItem></Default></SubItem><SubItem><Name>TestError</Name><Type GUID="{6925E8D1-EDCA-47DD-B80C-A6329A85D63D}">TcEventEntry</Type><BitSize>192</BitSize><BitOffs>384</BitOffs><Default><SubItem><Name>.uuidEventClass.Data1</Name><Value>3490383915</Value></SubItem><SubItem><Name>.uuidEventClass.Data2</Name><Value>22488</Value></SubItem><SubItem><Name>.uuidEventClass.Data3</Name><Value>19144</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[0]</Name><Value>133</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[1]</Name><Value>7</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[2]</Name><Value>134</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[3]</Name><Value>244</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[4]</Name><Value>74</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[5]</Name><Value>38</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[6]</Name><Value>224</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[7]</Name><Value>242</Value></SubItem><SubItem><Name>.nEventID</Name><EnumText>E_AocError.TestError</EnumText></SubItem><SubItem><Name>.eSeverity</Name><EnumText>TcEventSeverity.Error</EnumText></SubItem></Default></SubItem><SubItem><Name>Wtf</Name><Type GUID="{6925E8D1-EDCA-47DD-B80C-A6329A85D63D}">TcEventEntry</Type><BitSize>192</BitSize><BitOffs>576</BitOffs><Default><SubItem><Name>.uuidEventClass.Data1</Name><Value>3490383915</Value></SubItem><SubItem><Name>.uuidEventClass.Data2</Name><Value>22488</Value></SubItem><SubItem><Name>.uuidEventClass.Data3</Name><Value>19144</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[0]</Name><Value>133</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[1]</Name><Value>7</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[2]</Name><Value>134</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[3]</Name><Value>244</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[4]</Name><Value>74</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[5]</Name><Value>38</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[6]</Name><Value>224</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[7]</Name><Value>242</Value></SubItem><SubItem><Name>.nEventID</Name><EnumText>E_AocError.Wtf</EnumText></SubItem><SubItem><Name>.eSeverity</Name><EnumText>TcEventSeverity.Verbose</EnumText></SubItem></Default></SubItem><Properties><Property><Name>TcTypeSystem</Name></Property><Property><Name>TcEventClass</Name><Value>AoC.AocError</Value></Property><Property><Name>Namespace</Name><Value>AoC</Value></Property></Properties></DataType><DataType><Name Namespace="Tc2_System">T_AmsNetID</Name><Comment><![CDATA[ TwinCAT AMS netID address string. ]]></Comment><BitSize>192</BitSize><BaseType>STRING(23)</BaseType></DataType><DataType><Name>TYPE_CLASS</Name><BitSize>32</BitSize><BaseType>DWORD</BaseType><EnumInfo><Text>TYPE_BOOL</Text><Enum>0</Enum></EnumInfo><EnumInfo><Text>TYPE_BIT</Text><Enum>1</Enum></EnumInfo><EnumInfo><Text>TYPE_BYTE</Text><Enum>2</Enum></EnumInfo><EnumInfo><Text>TYPE_WORD</Text><Enum>3</Enum></EnumInfo><EnumInfo><Text>TYPE_DWORD</Text><Enum>4</Enum></EnumInfo><EnumInfo><Text>TYPE_LWORD</Text><Enum>5</Enum></EnumInfo><EnumInfo><Text>TYPE_SINT</Text><Enum>6</Enum></EnumInfo><EnumInfo><Text>TYPE_INT</Text><Enum>7</Enum></EnumInfo><EnumInfo><Text>TYPE_DINT</Text><Enum>8</Enum></EnumInfo><EnumInfo><Text>TYPE_LINT</Text><Enum>9</Enum></EnumInfo><EnumInfo><Text>TYPE_USINT</Text><Enum>10</Enum></EnumInfo><EnumInfo><Text>TYPE_UINT</Text><Enum>11</Enum></EnumInfo><EnumInfo><Text>TYPE_UDINT</Text><Enum>12</Enum></EnumInfo><EnumInfo><Text>TYPE_ULINT</Text><Enum>13</Enum></EnumInfo><EnumInfo><Text>TYPE_REAL</Text><Enum>14</Enum></EnumInfo><EnumInfo><Text>TYPE_LREAL</Text><Enum>15</Enum></EnumInfo><EnumInfo><Text>TYPE_STRING</Text><Enum>16</Enum></EnumInfo><EnumInfo><Text>TYPE_WSTRING</Text><Enum>17</Enum></EnumInfo><EnumInfo><Text>TYPE_TIME</Text><Enum>18</Enum></EnumInfo><EnumInfo><Text>TYPE_DATE</Text><Enum>19</Enum></EnumInfo><EnumInfo><Text>TYPE_DATEANDTIME</Text><Enum>20</Enum></EnumInfo><EnumInfo><Text>TYPE_TIMEOFDAY</Text><Enum>21</Enum></EnumInfo><EnumInfo><Text>TYPE_POINTER</Text><Enum>22</Enum></EnumInfo><EnumInfo><Text>TYPE_REFERENCE</Text><Enum>23</Enum></EnumInfo><EnumInfo><Text>TYPE_SUBRANGE</Text><Enum>24</Enum></EnumInfo><EnumInfo><Text>TYPE_ENUM</Text><Enum>25</Enum></EnumInfo><EnumInfo><Text>TYPE_ARRAY</Text><Enum>26</Enum></EnumInfo><EnumInfo><Text>TYPE_PARAMS</Text><Enum>27</Enum></EnumInfo><EnumInfo><Text>TYPE_USERDEF</Text><Enum>28</Enum></EnumInfo><EnumInfo><Text>TYPE_NONE</Text><Enum>29</Enum></EnumInfo><EnumInfo><Text>TYPE_ANY</Text><Enum>30</Enum></EnumInfo><EnumInfo><Text>TYPE_ANYBIT</Text><Enum>31</Enum></EnumInfo><EnumInfo><Text>TYPE_ANYDATE</Text><Enum>32</Enum></EnumInfo><EnumInfo><Text>TYPE_ANYINT</Text><Enum>33</Enum></EnumInfo><EnumInfo><Text>TYPE_ANYNUM</Text><Enum>34</Enum></EnumInfo><EnumInfo><Text>TYPE_ANYREAL</Text><Enum>35</Enum></EnumInfo><EnumInfo><Text>TYPE_LAZY</Text><Enum>36</Enum></EnumInfo><EnumInfo><Text>TYPE_LTIME</Text><Enum>37</Enum></EnumInfo><EnumInfo><Text>TYPE_BITCONST</Text><Enum>38</Enum></EnumInfo><EnumInfo><Text>TYPE_UXINT</Text><Enum>39</Enum></EnumInfo><EnumInfo><Text>TYPE_XWORD</Text><Enum>40</Enum></EnumInfo><EnumInfo><Text>TYPE_XINT</Text><Enum>41</Enum></EnumInfo><EnumInfo><Text>TYPE_XSTRING</Text><Enum>42</Enum></EnumInfo><EnumInfo><Text>TYPE_VARLENARRAY</Text><Enum>43</Enum></EnumInfo><EnumInfo><Text>TYPE_ANYSTRING</Text><Enum>44</Enum></EnumInfo><EnumInfo><Text>TYPE_VECTOR</Text><Enum>45</Enum></EnumInfo><EnumInfo><Text>TYPE_LDATE</Text><Enum>46</Enum></EnumInfo><EnumInfo><Text>TYPE_LDATEANDTIME</Text><Enum>47</Enum></EnumInfo><EnumInfo><Text>TYPE_LTIMEOFDAY</Text><Enum>48</Enum></EnumInfo><Properties><Property><Name>qualified_only</Name></Property><Property><Name>m4export_hide</Name></Property><Property><Name>generate_implicit_init_function</Name></Property></Properties></DataType><DataType><Name>AnyType</Name><BitSize>128</BitSize><SubItem><Name>pValue</Name><Type PointerTo="1">BYTE</Type><BitSize>64</BitSize><BitOffs>0</BitOffs></SubItem><SubItem><Name>diSize</Name><Type>DINT</Type><BitSize>32</BitSize><BitOffs>64</BitOffs></SubItem><SubItem><Name>TypeClass</Name><Type>TYPE_CLASS</Type><BitSize>32</BitSize><BitOffs>96</BitOffs></SubItem><Properties><Property><Name>linkalways</Name></Property></Properties></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">AssertMessage</Name><Comment><![CDATA[

short summary
=================
AssertMessage is an alias of Tc2_System.T_MaxString.
It's just a tmeporary type to ease the change to 
an alarm event (but there is no library for this yet)

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><BitSize>2048</BitSize><BaseType Namespace="Tc2_System">T_MaxString</BaseType></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">IBinaryAssertions</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>isEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if all bytes of memory of
``data`` and ``dataToCompare`` are equal

.. attention:: 
	Binary comparison means it compares values byte by byte, regardless of type information (signs, ``REAL`` etc...)
	and it compares padding bytes, too.

.. attention:: 
	``STRING`` and ``WSTRING`` is null terminated
	that means TwinCAT sets null byte/word at the end of the string and touches nothing else
	For example ``foo :STRING(3) := 'foo';`` looks binary 16#66 16#6F 16#6F 16#00.
	if you set foo to an empty string ``foo := ''`` it looks like 16#00 16#6F 16#6F 16#00.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>data</Name><Comment><![CDATA[ current binary data ]]></Comment><Type>AnyType</Type><BitSize>128</BitSize><Properties><Property><Name>anytypeclass</Name><Value>ANY</Value></Property></Properties></Parameter><Parameter><Name>dataToCompare</Name><Comment><![CDATA[ binary data with the expected values ]]></Comment><Type>AnyType</Type><BitSize>128</BitSize><Properties><Property><Name>anytypeclass</Name><Value>ANY</Value></Property></Properties></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter><Properties><Property><Name>hasanytype</Name></Property></Properties></Method><Method><Name>isGreaterThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks the bytes of memory of
``data`` and ``dataToCompare`` if the content of the first unequal
``data`` byte is greater than the byte of ``dataToCompare``
the assertion is true

.. attention:: 
	Binary comparison means it compares values byte by byte, regardless of type information (signs, ``REAL`` etc...)
	and it compares padding bytes, too.

.. attention:: 
	``STRING`` and ``WSTRING`` is null terminated
	that means TwinCAT sets null byte/word at the end of the string and touches nothing else
	For example ``foo :STRING(3) := 'foo';`` looks binary 16#66 16#6F 16#6F 16#00.
	if you set foo to an empty string ``foo := ''`` it looks like 16#00 16#6F 16#6F 16#00.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>data</Name><Comment><![CDATA[ current binary data ]]></Comment><Type>AnyType</Type><BitSize>128</BitSize><Properties><Property><Name>anytypeclass</Name><Value>ANY</Value></Property></Properties></Parameter><Parameter><Name>dataToCompare</Name><Comment><![CDATA[ binary data with smaller values ]]></Comment><Type>AnyType</Type><BitSize>128</BitSize><Properties><Property><Name>anytypeclass</Name><Value>ANY</Value></Property></Properties></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter><Properties><Property><Name>hasanytype</Name></Property></Properties></Method><Method><Name>isLessThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks the bytes of memory of
``data`` and ``dataToCompare`` if the content of the first unequal
``data`` byte is less than the byte of ``dataToCompare``
the assertion is true

.. attention:: 
	Binary comparison means it compares values byte by byte, regardless of type information (signs, ``REAL`` etc...)
	and it compares padding bytes, too.

.. attention:: 
	``STRING`` and ``WSTRING`` is null terminated
	that means TwinCAT sets null byte/word at the end of the string and touches nothing else
	For example ``foo :STRING(3) := 'foo';`` looks binary 16#66 16#6F 16#6F 16#00.
	if you set foo to an empty string ``foo := ''`` it looks like 16#00 16#6F 16#6F 16#00.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>data</Name><Comment><![CDATA[ current binary data ]]></Comment><Type>AnyType</Type><BitSize>128</BitSize><Properties><Property><Name>anytypeclass</Name><Value>ANY</Value></Property></Properties></Parameter><Parameter><Name>dataToCompare</Name><Comment><![CDATA[ binary data with greater values ]]></Comment><Type>AnyType</Type><BitSize>128</BitSize><Properties><Property><Name>anytypeclass</Name><Value>ANY</Value></Property></Properties></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter><Properties><Property><Name>hasanytype</Name></Property></Properties></Method><Method><Name>isNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if minimal one byte of memory of
``data`` and ``dataToCompare`` is not equal

.. attention:: 
	Binary comparison means it compares values byte by byte, regardless of type information (signs, ``REAL`` etc...)
	and it compares padding bytes, too.

.. attention:: 
	``STRING`` and ``WSTRING`` is null terminated
	that means TwinCAT sets null byte/word at the end of the string and touches nothing else
	For example ``foo :STRING(3) := 'foo';`` looks binary 16#66 16#6F 16#6F 16#00.
	if you set foo to an empty string ``foo := ''`` it looks like 16#00 16#6F 16#6F 16#00.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>data</Name><Comment><![CDATA[ current binary data ]]></Comment><Type>AnyType</Type><BitSize>128</BitSize><Properties><Property><Name>anytypeclass</Name><Value>ANY</Value></Property></Properties></Parameter><Parameter><Name>dataToCompare</Name><Comment><![CDATA[ binary data with the unexpected values ]]></Comment><Type>AnyType</Type><BitSize>128</BitSize><Properties><Property><Name>anytypeclass</Name><Value>ANY</Value></Property></Properties></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter><Properties><Property><Name>hasanytype</Name></Property></Properties></Method></DataType><DataType><Name>USINT (0..31)</Name><BitSize>8</BitSize><BaseType>USINT</BaseType><Properties><Property><Name>LowerBorder</Name><Value>0</Value></Property><Property><Name>UpperBorder</Name><Value>31</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">BitNumberDWord</Name><Comment><![CDATA[

short summary
=================
| BitNumberDWord is an alias of ``USINT(0..31)``.
| This data type exists so that no one can provoke an overflow of the bit numbers.
| It's used as parameter of 
| :ref:`IDwordAssertions.bitXIsEqualTo` 
| :ref:`IDwordAssertions.bitXIsNotEqualTo` 
| :ref:`IDwordAssertions.bitXIsSet` 
| :ref:`IDwordAssertions.bitXIsUnset` 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><BitSize>8</BitSize><BaseType>USINT (0..31)</BaseType></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">IDwordAssertions</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>andMaskIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the result current value bitwise ``AND`` mask is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>mask</Name><Comment><![CDATA[ 2nd operand for bitwise operation ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected result after masking ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>andMaskIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the result current value bitwise ``AND`` mask
is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>mask</Name><Comment><![CDATA[ 2nd operand for bitwise operation ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected result after masking ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>bitXIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the selected bit of current value
is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>number</Name><Comment><![CDATA[ number of bit to check ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">BitNumberDWord</Type><BitSize>8</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected value of bit ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>bitXIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the selected bit of current value
is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>number</Name><Comment><![CDATA[ number of bit to check ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">BitNumberDWord</Type><BitSize>8</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected value of bit ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>bitXIsSet</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the selected bit of current value
is set

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>number</Name><Comment><![CDATA[ number of bit to check ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">BitNumberDWord</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>bitXIsUnset</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the selected bit of current value
is unset

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>number</Name><Comment><![CDATA[ number of bit to check ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">BitNumberDWord</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>lsbIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the least significant bit of current value
is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected value of lsb ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>lsbIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the least significant bit of current value
is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected value of lsb ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>lsbIsSet</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the least significant bit of current value
is set

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>lsbIsUnset</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the least significant bit of current value
is unset

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>msbIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the most significant bit of current value
is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected value of msb ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>msbIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the most significant bit of current value
is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected value of msb ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>msbIsSet</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the most significant bit of current value
is set

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>msbIsUnset</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the most significant bit of current value
is unset

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>orMaskIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the result current value bitwise ``OR`` mask is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>mask</Name><Comment><![CDATA[ 2nd operand for bitwise operation ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected result after masking ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>orMaskIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the result current value bitwise ``OR`` mask 
is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>mask</Name><Comment><![CDATA[ 2nd operand for bitwise operation ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected result after masking ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected value to compare ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsGreaterThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than the less value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>lessValue</Name><Comment><![CDATA[ less than lower limit ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsInRangeOf</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is inside a limit

.. attention:: 
	limits are included: ``valueIsInRangeOf(3, 3, 3)`` is a true assertion

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>lowerLimit</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>upperLimit</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsLessThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than the greater value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>greaterValue</Name><Comment><![CDATA[ greater than upper limit ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMax</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than or equal to the maximum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>maximumValue</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMin</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than or equal to the minimum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>minimumValue</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected value to compare ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>xorMaskIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the result current value bitwise ``XOR`` mask is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>mask</Name><Comment><![CDATA[ 2nd operand for bitwise operation ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected result after masking ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>xorMaskIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the result current value bitwise ``XOR`` mask 
is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>mask</Name><Comment><![CDATA[ 2nd operand for bitwise operation ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected result after masking ]]></Comment><Type>DWORD</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method></DataType><DataType><Name>USINT (0..63)</Name><BitSize>8</BitSize><BaseType>USINT</BaseType><Properties><Property><Name>LowerBorder</Name><Value>0</Value></Property><Property><Name>UpperBorder</Name><Value>63</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">BitNumberLWord</Name><Comment><![CDATA[

short summary
=================
| BitNumberLWord is an alias of ``USINT(0..63)``.
| This data type exists so that no one can provoke an overflow of the bit numbers.
| It's used as parameter of 
| :ref:`ILwordAssertions.bitXIsEqualTo` 
| :ref:`ILwordAssertions.bitXIsNotEqualTo` 
| :ref:`ILwordAssertions.bitXIsSet` 
| :ref:`ILwordAssertions.bitXIsUnset` 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><BitSize>8</BitSize><BaseType>USINT (0..63)</BaseType></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">ILwordAssertions</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>andMaskIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the result current value bitwise ``AND`` mask is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>mask</Name><Comment><![CDATA[ 2nd operand for bitwise operation ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected result after masking ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>andMaskIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the result current value bitwise ``AND`` mask
is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>mask</Name><Comment><![CDATA[ 2nd operand for bitwise operation ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected result after masking ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>bitXIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the selected bit of current value
is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>number</Name><Comment><![CDATA[ number of bit to check ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">BitNumberLWord</Type><BitSize>8</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected value of bit ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>bitXIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the selected bit of current value
is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>number</Name><Comment><![CDATA[ number of bit to check ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">BitNumberLWord</Type><BitSize>8</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected value of bit ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>bitXIsSet</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the selected bit of current value
is set

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>number</Name><Comment><![CDATA[ number of bit to check ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">BitNumberLWord</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>bitXIsUnset</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the selected bit of current value
is unset

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>number</Name><Comment><![CDATA[ number of bit to check ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">BitNumberLWord</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>lsbIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the least significant bit of current value
is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected value of lsb ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>lsbIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the least significant bit of current value
is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected value of lsb ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>lsbIsSet</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the least significant bit of current value
is set

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>lsbIsUnset</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the least significant bit of current value
is unset

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>msbIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the most significant bit of current value
is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected value of msb ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>msbIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the most significant bit of current value
is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected value of msb ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>msbIsSet</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the most significant bit of current value
is set

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>msbIsUnset</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the most significant bit of current value
is unset

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>orMaskIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the result current value bitwise ``OR`` mask is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>mask</Name><Comment><![CDATA[ 2nd operand for bitwise operation ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected result after masking ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>orMaskIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the result current value bitwise ``OR`` mask 
is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>mask</Name><Comment><![CDATA[ 2nd operand for bitwise operation ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected result after masking ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected value to compare ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsGreaterThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than the less value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>lessValue</Name><Comment><![CDATA[ less than lower limit ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsInRangeOf</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is inside a limit

.. attention:: 
	limits are included: ``valueIsInRangeOf(3, 3, 3)`` is a true assertion

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>lowerLimit</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>upperLimit</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsLessThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than the greater value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>greaterValue</Name><Comment><![CDATA[ greater than upper limit ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMax</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than or equal to the maximum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>maximumValue</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMin</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than or equal to the minimum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>minimumValue</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected value to compare ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>xorMaskIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the result current value bitwise ``XOR`` mask is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>mask</Name><Comment><![CDATA[ 2nd operand for bitwise operation ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected result after masking ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>xorMaskIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the result current value bitwise ``XOR`` mask 
is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>mask</Name><Comment><![CDATA[ 2nd operand for bitwise operation ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected result after masking ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method></DataType><DataType><Name>USINT (0..7)</Name><BitSize>8</BitSize><BaseType>USINT</BaseType><Properties><Property><Name>LowerBorder</Name><Value>0</Value></Property><Property><Name>UpperBorder</Name><Value>7</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">BitNumberByte</Name><Comment><![CDATA[

short summary
=================
| BitNumberByte is an alias of ``USINT(0..7)``.
| This data type exists so that no one can provoke an overflow of the bit numbers.
| It's used as parameter at 
| :ref:`IByteAssertions.bitXIsEqualTo` 
| :ref:`IByteAssertions.bitXIsNotEqualTo` 
| :ref:`IByteAssertions.bitXIsSet` 
| :ref:`IByteAssertions.bitXIsUnset` 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><BitSize>8</BitSize><BaseType>USINT (0..7)</BaseType></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">IByteAssertions</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>andMaskIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the result current value bitwise ``AND`` mask is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>mask</Name><Comment><![CDATA[ 2nd operand for bitwise operation ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected result after masking ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>andMaskIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the result current value bitwise ``AND`` mask
is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>mask</Name><Comment><![CDATA[ 2nd operand for bitwise operation ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected result after masking ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>bitXIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the selected bit of current value
is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>number</Name><Comment><![CDATA[ number of bit to check ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">BitNumberByte</Type><BitSize>8</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected value of bit ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>bitXIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the selected bit of current value
is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>number</Name><Comment><![CDATA[ number of bit to check ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">BitNumberByte</Type><BitSize>8</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected value of bit ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>bitXIsSet</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the selected bit of current value
is set

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>number</Name><Comment><![CDATA[ number of bit to check ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">BitNumberByte</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>bitXIsUnset</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the selected bit of current value
is unset

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>number</Name><Comment><![CDATA[ number of bit to check ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">BitNumberByte</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>lsbIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the least significant bit of current value
is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected value of lsb ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>lsbIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the least significant bit of current value
is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected value of lsb ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>lsbIsSet</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the least significant bit of current value
is set

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>lsbIsUnset</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the least significant bit of current value
is unset

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>msbIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the most significant bit of current value
is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected value of msb ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>msbIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the most significant bit of current value
is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected value of msb ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>msbIsSet</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the most significant bit of current value
is set

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>msbIsUnset</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the most significant bit of current value
is unset

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>orMaskIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the result current value bitwise ``OR`` mask is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>mask</Name><Comment><![CDATA[ 2nd operand for bitwise operation ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected result after masking ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>orMaskIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the result current value bitwise ``OR`` mask 
is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>mask</Name><Comment><![CDATA[ 2nd operand for bitwise operation ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected result after masking ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected value to compare ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsGreaterThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than the less value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>lessValue</Name><Comment><![CDATA[ less than lower limit ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsInRangeOf</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is inside a limit

.. attention:: 
	limits are included: ``valueIsInRangeOf(3, 3, 3)`` is a true assertion

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>lowerLimit</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>upperLimit</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsLessThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than the greater value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>greaterValue</Name><Comment><![CDATA[ greater than upper limit ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMax</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than or equal to the maximum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>maximumValue</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMin</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than or equal to the minimum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>minimumValue</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected value to compare ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>xorMaskIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the result current value bitwise ``XOR`` mask is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>mask</Name><Comment><![CDATA[ 2nd operand for bitwise operation ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected result after masking ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>xorMaskIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the result current value bitwise ``XOR`` mask 
is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>mask</Name><Comment><![CDATA[ 2nd operand for bitwise operation ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected result after masking ]]></Comment><Type>BYTE</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method></DataType><DataType><Name>USINT (0..15)</Name><BitSize>8</BitSize><BaseType>USINT</BaseType><Properties><Property><Name>LowerBorder</Name><Value>0</Value></Property><Property><Name>UpperBorder</Name><Value>15</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">BitNumberWord</Name><Comment><![CDATA[

short summary
=================
| BitNumberWord is an alias of ``USINT(0..15)``.
| This data type exists so that no one can provoke an overflow of the bit numbers.
| It's used as parameter of 
| :ref:`IWordAssertions.bitXIsEqualTo` 
| :ref:`IWordAssertions.bitXIsNotEqualTo` 
| :ref:`IWordAssertions.bitXIsSet` 
| :ref:`IWordAssertions.bitXIsUnset` 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><BitSize>8</BitSize><BaseType>USINT (0..15)</BaseType></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">IWordAssertions</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>andMaskIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the result current value bitwise ``AND`` mask is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>mask</Name><Comment><![CDATA[ 2nd operand for bitwise operation ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected result after masking ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>andMaskIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the result current value bitwise ``AND`` mask
is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>mask</Name><Comment><![CDATA[ 2nd operand for bitwise operation ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected result after masking ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>bitXIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the selected bit of current value
is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>number</Name><Comment><![CDATA[ number of bit to check ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">BitNumberWord</Type><BitSize>8</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected value of bit ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>bitXIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the selected bit of current value
is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>number</Name><Comment><![CDATA[ number of bit to check ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">BitNumberWord</Type><BitSize>8</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected value of bit ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>bitXIsSet</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the selected bit of current value
is set

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>number</Name><Comment><![CDATA[ number of bit to check ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">BitNumberWord</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>bitXIsUnset</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the selected bit of current value
is unset

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>number</Name><Comment><![CDATA[ number of bit to check ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">BitNumberWord</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>lsbIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the least significant bit of current value
is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected value of lsb ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>lsbIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the least significant bit of current value
is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected value of lsb ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>lsbIsSet</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the least significant bit of current value
is set

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>lsbIsUnset</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the least significant bit of current value
is unset

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>msbIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the most significant bit of current value
is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected value of msb ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>msbIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the most significant bit of current value
is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected value of msb ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>msbIsSet</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the most significant bit of current value
is set

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>msbIsUnset</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the most significant bit of current value
is unset

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>orMaskIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the result current value bitwise ``OR`` mask is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>mask</Name><Comment><![CDATA[ 2nd operand for bitwise operation ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected result after masking ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>orMaskIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the result current value bitwise ``OR`` mask 
is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>mask</Name><Comment><![CDATA[ 2nd operand for bitwise operation ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected result after masking ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected value to compare ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsGreaterThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than the less value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>lessValue</Name><Comment><![CDATA[ less than lower limit ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsInRangeOf</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is inside a limit

.. attention:: 
	limits are included: ``valueIsInRangeOf(3, 3, 3)`` is a true assertion

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>lowerLimit</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>upperLimit</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsLessThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than the greater value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>greaterValue</Name><Comment><![CDATA[ greater than upper limit ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMax</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than or equal to the maximum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>maximumValue</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMin</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than or equal to the minimum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>minimumValue</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected value to compare ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>xorMaskIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the result current value bitwise ``XOR`` mask is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>mask</Name><Comment><![CDATA[ 2nd operand for bitwise operation ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected result after masking ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>xorMaskIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the result current value bitwise ``XOR`` mask 
is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>mask</Name><Comment><![CDATA[ 2nd operand for bitwise operation ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected result after masking ]]></Comment><Type>WORD</Type><BitSize>16</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method></DataType><DataType><Name>USINT (0..((SIZEOF(LWORD) * 8) - 1))</Name><BitSize>8</BitSize><BaseType>USINT</BaseType><Properties><Property><Name>LowerBorder</Name><Value>0</Value></Property><Property><Name>UpperBorder</Name><Value>63</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">BitNumberXWord</Name><Comment><![CDATA[

short summary
=================
| BitNumberXWord is
| for 32 bit machines an alias of ``USINT(0..31)``
| for 64 bit machines an alias of ``USINT(0..63)``
| This data type exists so that no one can provoke an overflow of the bit numbers.
| It's used as parameter of 
| :ref:`IXWordAssertions.bitXIsEqualTo` 
| :ref:`IXWordAssertions.bitXIsNotEqualTo` 
| :ref:`IXWordAssertions.bitXIsSet` 
| :ref:`IXWordAssertions.bitXIsUnset` 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><BitSize>8</BitSize><BaseType>USINT (0..((SIZEOF(LWORD) * 8) - 1))</BaseType></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">IXWordAssertions</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>andMaskIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the result current value bitwise ``AND`` mask is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>mask</Name><Comment><![CDATA[ 2nd operand for bitwise operation ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected result after masking ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>andMaskIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the result current value bitwise ``AND`` mask
is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>mask</Name><Comment><![CDATA[ 2nd operand for bitwise operation ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected result after masking ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>bitXIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the selected bit of current value
is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>number</Name><Comment><![CDATA[ number of bit to check ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">BitNumberXWord</Type><BitSize>8</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected value of bit ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>bitXIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the selected bit of current value
is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>number</Name><Comment><![CDATA[ number of bit to check ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">BitNumberXWord</Type><BitSize>8</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected value of bit ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>bitXIsSet</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the selected bit of current value
is set

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>number</Name><Comment><![CDATA[ number of bit to check ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">BitNumberXWord</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>bitXIsUnset</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the selected bit of current value
is unset

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>number</Name><Comment><![CDATA[ number of bit to check ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">BitNumberXWord</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>lsbIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the least significant bit of current value
is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected value of lsb ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>lsbIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the least significant bit of current value
is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected value of lsb ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>lsbIsSet</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the least significant bit of current value
is set

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>lsbIsUnset</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the least significant bit of current value
is unset

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>msbIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the most significant bit of current value
is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected value of msb ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>msbIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the most significant bit of current value
is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected value of msb ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>msbIsSet</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the most significant bit of current value
is set

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>msbIsUnset</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the most significant bit of current value
is unset

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>orMaskIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the result current value bitwise ``OR`` mask is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>mask</Name><Comment><![CDATA[ 2nd operand for bitwise operation ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected result after masking ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>orMaskIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the result current value bitwise ``OR`` mask 
is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>mask</Name><Comment><![CDATA[ 2nd operand for bitwise operation ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected result after masking ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected value to compare ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsGreaterThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than the less value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>lessValue</Name><Comment><![CDATA[ less than lower limit ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsInRangeOf</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is inside a limit

.. attention:: 
	limits are included: ``valueIsInRangeOf(3, 3, 3)`` is a true assertion

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>lowerLimit</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>upperLimit</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsLessThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than the greater value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>greaterValue</Name><Comment><![CDATA[ greater than upper limit ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMax</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than or equal to the maximum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>maximumValue</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMin</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than or equal to the minimum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>minimumValue</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected value to compare ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>xorMaskIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the result current value bitwise ``XOR`` mask is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>mask</Name><Comment><![CDATA[ 2nd operand for bitwise operation ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected result after masking ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>xorMaskIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the result current value bitwise ``XOR`` mask 
is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>mask</Name><Comment><![CDATA[ 2nd operand for bitwise operation ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected result after masking ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">IBitNumberAssertions</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>__getdouble</Name><Comment><![CDATA[

short summary
=================
Returns the interface :ref:`IDwordAssertions`
with assert statements for double words ``DWORD`` 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IDwordAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getlong</Name><Comment><![CDATA[

short summary
=================
Returns the interface :ref:`ILwordAssertions`
with assert statements for long words ``LWORD`` 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">ILwordAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getshort</Name><Comment><![CDATA[

short summary
=================
Returns the interface :ref:`IByteAssertions`
with assert statements for bytes

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IByteAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getsimple</Name><Comment><![CDATA[

short summary
=================
Returns the interface :ref:`IWordAssertions`
with assert statements for words 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IWordAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getx</Name><Comment><![CDATA[

short summary
=================
Returns the interface :ref:`IXwordAssertions`
with assert statements for register length words ``__XWORD``

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IXWordAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">IBooleanAssertion</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>valueIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected value to compare ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsFalse</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is ``FALSE``

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected value to compare ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsTrue</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is ``TRUE``

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">I64BitDtAssertions</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>valueIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LDATE_AND_TIME</Type><BitSize>64</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected value to compare ]]></Comment><Type>LDATE_AND_TIME</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsGreaterThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than the less value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LDATE_AND_TIME</Type><BitSize>64</BitSize></Parameter><Parameter><Name>lessValue</Name><Comment><![CDATA[ less than lower limit ]]></Comment><Type>LDATE_AND_TIME</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsInRangeOf</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is inside a limit

.. attention:: 
	limits are included: ``valueIsInRangeOf(ldt#1970-01-01-0:0:0, ldt#1970-01-01-0:0:0, ldt#1970-01-01-0:0:0)``
	is a true assertion

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>lowerLimit</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>LDATE_AND_TIME</Type><BitSize>64</BitSize></Parameter><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LDATE_AND_TIME</Type><BitSize>64</BitSize></Parameter><Parameter><Name>upperLimit</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>LDATE_AND_TIME</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsLessThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than the greater value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LDATE_AND_TIME</Type><BitSize>64</BitSize></Parameter><Parameter><Name>greaterValue</Name><Comment><![CDATA[ greater than upper limit ]]></Comment><Type>LDATE_AND_TIME</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMax</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than or equal to the maximum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LDATE_AND_TIME</Type><BitSize>64</BitSize></Parameter><Parameter><Name>maximumValue</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>LDATE_AND_TIME</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMin</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than or equal to the minimum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LDATE_AND_TIME</Type><BitSize>64</BitSize></Parameter><Parameter><Name>minimumValue</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>LDATE_AND_TIME</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LDATE_AND_TIME</Type><BitSize>64</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected value to compare ]]></Comment><Type>LDATE_AND_TIME</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">I64BitDateAssertions</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>valueIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LDATE</Type><BitSize>64</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected value to compare ]]></Comment><Type>LDATE</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsGreaterThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than the less value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LDATE</Type><BitSize>64</BitSize></Parameter><Parameter><Name>lessValue</Name><Comment><![CDATA[ less than lower limit ]]></Comment><Type>LDATE</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsInRangeOf</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is inside a limit

.. attention:: 
	limits are included: ``valueIsInRangeOf(ldate#1970-01-01, ldate#1970-01-01, ldate#1970-01-01)``
	is a true assertion

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>lowerLimit</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>LDATE</Type><BitSize>64</BitSize></Parameter><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LDATE</Type><BitSize>64</BitSize></Parameter><Parameter><Name>upperLimit</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>LDATE</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsLessThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than the greater value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LDATE</Type><BitSize>64</BitSize></Parameter><Parameter><Name>greaterValue</Name><Comment><![CDATA[ greater than upper limit ]]></Comment><Type>LDATE</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMax</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than or equal to the maximum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LDATE</Type><BitSize>64</BitSize></Parameter><Parameter><Name>maximumValue</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>LDATE</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMin</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than or equal to the minimum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LDATE</Type><BitSize>64</BitSize></Parameter><Parameter><Name>minimumValue</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>LDATE</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LDATE</Type><BitSize>64</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected value to compare ]]></Comment><Type>LDATE</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">I64BitTodAssertions</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>valueIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LTIME_OF_DAY</Type><BitSize>64</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected value to compare ]]></Comment><Type>LTIME_OF_DAY</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsGreaterThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than the less value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LTIME_OF_DAY</Type><BitSize>64</BitSize></Parameter><Parameter><Name>lessValue</Name><Comment><![CDATA[ less than lower limit ]]></Comment><Type>LTIME_OF_DAY</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsInRangeOf</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is inside a limit

.. attention:: 
	limits are included: ``valueIsInRangeOf(ltod#3:0:0, ltod#3:0:0, ltod#3:0:0)`` is a true assertion

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>lowerLimit</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>LTIME_OF_DAY</Type><BitSize>64</BitSize></Parameter><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LTIME_OF_DAY</Type><BitSize>64</BitSize></Parameter><Parameter><Name>upperLimit</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>LTIME_OF_DAY</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsLessThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than the greater value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LTIME_OF_DAY</Type><BitSize>64</BitSize></Parameter><Parameter><Name>greaterValue</Name><Comment><![CDATA[ greater than upper limit ]]></Comment><Type>LTIME_OF_DAY</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMax</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than or equal to the maximum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LTIME_OF_DAY</Type><BitSize>64</BitSize></Parameter><Parameter><Name>maximumValue</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>LTIME_OF_DAY</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMin</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than or equal to the minimum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LTIME_OF_DAY</Type><BitSize>64</BitSize></Parameter><Parameter><Name>minimumValue</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>LTIME_OF_DAY</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LTIME_OF_DAY</Type><BitSize>64</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected value to compare ]]></Comment><Type>LTIME_OF_DAY</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">ILongDateAndTimeAssertions</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>__getdateAndTime</Name><Comment><![CDATA[

short summary
=================
Returns the interface :ref:`I64BitDtAssertions` with assert statements for 64 bit date and time ``LDT``

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">I64BitDtAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getdateOnly</Name><Comment><![CDATA[

short summary
=================
Returns the interface :ref:`I64BitDateAssertions` with assert statements for 64 bit date ``LDATE``

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">I64BitDateAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__gettimeOfDay</Name><Comment><![CDATA[

short summary
=================
Returns the interface :ref:`I64BitTodAssertions` with assert statements for 32 bit time of day ``LTOD``

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">I64BitTodAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">I32BitDtAssertions</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>valueIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DATE_AND_TIME</Type><BitSize>32</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected value to compare ]]></Comment><Type>DATE_AND_TIME</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsGreaterThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than the less value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DATE_AND_TIME</Type><BitSize>32</BitSize></Parameter><Parameter><Name>lessValue</Name><Comment><![CDATA[ less than lower limit ]]></Comment><Type>DATE_AND_TIME</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsInRangeOf</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is inside a limit

.. attention:: 
	limits are included: ``valueIsInRangeOf(dt#1970-01-01-0:0:0, dt#1970-01-01-0:0:0, dt#1970-01-01-0:0:0)``
	is a true assertion

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>lowerLimit</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>DATE_AND_TIME</Type><BitSize>32</BitSize></Parameter><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DATE_AND_TIME</Type><BitSize>32</BitSize></Parameter><Parameter><Name>upperLimit</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>DATE_AND_TIME</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsLessThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than the greater value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DATE_AND_TIME</Type><BitSize>32</BitSize></Parameter><Parameter><Name>greaterValue</Name><Comment><![CDATA[ greater than upper limit ]]></Comment><Type>DATE_AND_TIME</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMax</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than or equal to the maximum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DATE_AND_TIME</Type><BitSize>32</BitSize></Parameter><Parameter><Name>maximumValue</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>DATE_AND_TIME</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMin</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than or equal to the minimum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DATE_AND_TIME</Type><BitSize>32</BitSize></Parameter><Parameter><Name>minimumValue</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>DATE_AND_TIME</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DATE_AND_TIME</Type><BitSize>32</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected value to compare ]]></Comment><Type>DATE_AND_TIME</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">I32BitDateAssertions</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>valueIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DATE</Type><BitSize>32</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected value to compare ]]></Comment><Type>DATE</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsGreaterThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than the less value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DATE</Type><BitSize>32</BitSize></Parameter><Parameter><Name>lessValue</Name><Comment><![CDATA[ less than lower limit ]]></Comment><Type>DATE</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsInRangeOf</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is inside a limit

.. attention:: 
	limits are included: ``valueIsInRangeOf(date#1970-01-01, date#1970-01-01, date#1970-01-01)``
	is a true assertion

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>lowerLimit</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>DATE</Type><BitSize>32</BitSize></Parameter><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DATE</Type><BitSize>32</BitSize></Parameter><Parameter><Name>upperLimit</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>DATE</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsLessThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than the greater value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DATE</Type><BitSize>32</BitSize></Parameter><Parameter><Name>greaterValue</Name><Comment><![CDATA[ greater than upper limit ]]></Comment><Type>DATE</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMax</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than or equal to the maximum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DATE</Type><BitSize>32</BitSize></Parameter><Parameter><Name>maximumValue</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>DATE</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMin</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than or equal to the minimum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DATE</Type><BitSize>32</BitSize></Parameter><Parameter><Name>minimumValue</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>DATE</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DATE</Type><BitSize>32</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected value to compare ]]></Comment><Type>DATE</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">I32BitTodAssertions</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>valueIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>TIME_OF_DAY</Type><BitSize>32</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected value to compare ]]></Comment><Type>TIME_OF_DAY</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsGreaterThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than the less value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>TIME_OF_DAY</Type><BitSize>32</BitSize></Parameter><Parameter><Name>lessValue</Name><Comment><![CDATA[ less than lower limit ]]></Comment><Type>TIME_OF_DAY</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsInRangeOf</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is inside a limit

.. attention:: 
	limits are included: ``valueIsInRangeOf(tod#3:0:0, tod#3:0:0, tod#3:0:0)`` is a true assertion

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>lowerLimit</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>TIME_OF_DAY</Type><BitSize>32</BitSize></Parameter><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>TIME_OF_DAY</Type><BitSize>32</BitSize></Parameter><Parameter><Name>upperLimit</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>TIME_OF_DAY</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsLessThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than the greater value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>TIME_OF_DAY</Type><BitSize>32</BitSize></Parameter><Parameter><Name>greaterValue</Name><Comment><![CDATA[ greater than upper limit ]]></Comment><Type>TIME_OF_DAY</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMax</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than or equal to the maximum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>TIME_OF_DAY</Type><BitSize>32</BitSize></Parameter><Parameter><Name>maximumValue</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>TIME_OF_DAY</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMin</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than or equal to the minimum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>TIME_OF_DAY</Type><BitSize>32</BitSize></Parameter><Parameter><Name>minimumValue</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>TIME_OF_DAY</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>TIME_OF_DAY</Type><BitSize>32</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected value to compare ]]></Comment><Type>TIME_OF_DAY</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">ISimpleDateAndTimeAssertions</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>__getdateAndTime</Name><Comment><![CDATA[

short summary
=================
Returns the interface :ref:`I32BitDtAssertions` with assert statements for 32 bit date and time ``DT``

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">I32BitDtAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getdateOnly</Name><Comment><![CDATA[

short summary
=================
Returns the interface :ref:`I32BitDateAssertions` with assert statements for 32 bit date ``DATE``

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">I32BitDateAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__gettimeOfDay</Name><Comment><![CDATA[

short summary
=================
Returns the interface :ref:`I32BitTodAssertions` with assert statements for 32 bit time of day ``TOD``

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">I32BitTodAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">IDateAndTimeAssertions</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>__getlong</Name><Comment><![CDATA[

short summary
=================
Returns an interface with assert statements for 64 bit times 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">ILongDateAndTimeAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getsimple</Name><Comment><![CDATA[

short summary
=================
Returns the interface :ref:`ISimpleDateAndTimeAssertions` with assert statements for date and time types with 32 bit length

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

methods
==================

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">ISimpleDateAndTimeAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">ILrealAssertions</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>valueIsANumber</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is a number (NOT NaN)
for details check `IEEE 754`_

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LREAL</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is equal to the expected value

.. attention:: 
	Nothing is equal to NaN, that means if ``currentValue`` OR ``expectedValue`` OR ``tolerance``
	is NaN then is the assertion false. For details check `IEEE 754`_

.. attention:: 
	infinity is equal to infinity and -infinity is equal to -infinity, that means if
	``currentValue`` AND ``expectedValue`` have the value infinity 
	OR ``currentValue`` AND ``expectedValue`` have the value -infinity
	the assertion is TRUE. For details check `IEEE 754`_

.. attention:: 
	If ``tolerance`` has the value infinity or -infinity and 
	``currentValue`` is not NaN and ``expectedValue`` is not NaN
	then is the assertion true. For details check `IEEE 754`_

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LREAL</Type><BitSize>64</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected value to compare ]]></Comment><Type>LREAL</Type><BitSize>64</BitSize></Parameter><Parameter><Name>tolerance</Name><Comment><![CDATA[ tolerance to compensate twiddling floats, it has no sign ]]></Comment><Type>LREAL</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsFinite</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is finite
(NOT (infinty OR -inifinity)), for details check `IEEE 754`_

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LREAL</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsGreaterThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than the less value

.. attention:: 
	Any comparsion to NaN is ``FALSE`` that means if ``currentValue`` OR ``lessValue``
	is NaN then is the assertion false.
	For details check `IEEE 754`_ and the truth table below.

.. attention:: 
	Every number is smaller than infinity except -infinity, it's equal.
	Every number is greater than -infinity except -infinity, it's equal.
	For details check `IEEE 754`_ and the truth table below.

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

truth table for special values
===============================
+----------------------+-------------------+---------------+
| **``currentValue``** | **``lessValue``** | **assertion** |
+======================+===================+===============+
| NaN                  | Any value         | FASLE         |
+----------------------+-------------------+---------------+
| Any value            | NaN               | FALSE         |
+----------------------+-------------------+---------------+
| infinity             | NOT NaN           | TRUE          |
|                      | NOT infinity      |               |
+----------------------+-------------------+---------------+
| -infinty             | Any value         | FALSE         |
+----------------------+-------------------+---------------+
| Any value            | infinity          | FALSE         |
+----------------------+-------------------+---------------+
| NOT NaN              | -inifinity        | TRUE          |
| NOT -infinity        |                   |               |
+----------------------+-------------------+---------------+

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LREAL</Type><BitSize>64</BitSize></Parameter><Parameter><Name>lessValue</Name><Comment><![CDATA[ less than lower limit ]]></Comment><Type>LREAL</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsInfinite</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is infinite
(infinty OR -inifinity), for details check `IEEE 754`_

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LREAL</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsInRangeOf</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is inside a limit

.. attention:: 
	limits are included: ``valueIsInRangeOf(3.0, 3.0, 3.0)`` is a true assertion

.. attention:: 
	Any comparsion to NaN is ``FALSE`` that means 
	if ``lowerLimit`` OR ``currentValue`` OR ``upperLimit``
	is NaN then is the assertion false.
	For details check `IEEE 754`_ and the truth table below.

.. attention:: 
	Every number is smaller than infinity except -infinity, it's equal.
	Every number is greater than -infinity except -infinity, it's equal.
	For details check `IEEE 754`_ and the truth table below.

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

truth table for special values
===============================
+--------------------+----------------------+--------------------+---------------+
| **``lowerLimit``** | **``currentValue``** | **``upperLimit``** | **assertion** |
+====================+======================+====================+===============+
| NaN                | Any value            | Any value          | FASLE         |
+--------------------+----------------------+--------------------+---------------+
| Any value          | NaN                  | Any value          | FALSE         |
+--------------------+----------------------+--------------------+---------------+
| Any value          | Any value            | NaN                | FALSE         |
+--------------------+----------------------+--------------------+---------------+
| -infinity          | NOT NaN              | infinity           | TRUE          |
+--------------------+----------------------+--------------------+---------------+
| infinity           | Any value            | -infinity          | FALSE         |
+--------------------+----------------------+--------------------+---------------+
| NOT -infinity      | -infinity            | Any value          | FALSE         |
+--------------------+----------------------+--------------------+---------------+
| Any value          | infinity             | NOT infinity       | FALSE         |
+--------------------+----------------------+--------------------+---------------+
| -infinity          | -infinity            | -infinity          | TRUE          |
+--------------------+----------------------+--------------------+---------------+
| infinity           | infinity             | infinity           | TRUE          |
+--------------------+----------------------+--------------------+---------------+
| -infinity          | NOT -infinity        | -infinity          | FALSE         |
+--------------------+----------------------+--------------------+---------------+
| infinity           | NOT infinity         | infinity           | FALSE         |
+--------------------+----------------------+--------------------+---------------+

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>lowerLimit</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>LREAL</Type><BitSize>64</BitSize></Parameter><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LREAL</Type><BitSize>64</BitSize></Parameter><Parameter><Name>upperLimit</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>LREAL</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsLessThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than the less value

.. attention::
	Any comparsion to NaN is ``FALSE`` that means if ``currentValue`` OR ``greaterValue``
	is NaN then is the assertion false.
	For details check `IEEE 754`_ and the truth table below.

.. attention::
	Every number is smaller than infinity except -infinity, it's equal.
	Every number is greater than -infinity except -infinity, it's equal.
	For details check `IEEE 754`_ and the truth table below.

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

truth table for special values
===============================
+----------------------+----------------------+---------------+
| **``currentValue``** | **``greaterValue``** | **assertion** |
+======================+======================+===============+
| NaN                  | Any value            | FASLE         |
+----------------------+----------------------+---------------+
| Any value            | NaN                  | FALSE         |
+----------------------+----------------------+---------------+
| infinity             | Any value            | FALSE         |
+----------------------+----------------------+---------------+
| -infinty             | NOT NaN              | TRUE          |
|                      | NOT -infinity        |               |
+----------------------+----------------------+---------------+
| NOT NaN              | infinity             | TRUE          |
| NOT infinity         |                      |               |
+----------------------+----------------------+---------------+

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LREAL</Type><BitSize>64</BitSize></Parameter><Parameter><Name>greaterValue</Name><Comment><![CDATA[ greater than upper limit ]]></Comment><Type>LREAL</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMax</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than or equal to the maximum value

.. attention::
	Any comparsion to NaN is ``FALSE`` that means if ``currentValue`` OR ``maximumValue``
	is NaN then is the assertion false.
	For details check `IEEE 754`_ and the truth table below.

.. attention::
	Every number is smaller than infinity except -infinity, it's equal.
	Every number is greater than -infinity except -infinity, it's equal.
	For details check `IEEE 754`_ and the truth table below.

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

truth table for special values
===============================
+----------------------+----------------------+---------------+
| **``currentValue``** | **``maximumValue``** | **assertion** |
+======================+======================+===============+
| NaN                  | Any value            | FASLE         |
+----------------------+----------------------+---------------+
| Any value            | NaN                  | FALSE         |
+----------------------+----------------------+---------------+
| NOT NaN              | infinity             | TRUE          |
+----------------------+----------------------+---------------+
| -infinity            | NOT NaN              | TRUE          |
+----------------------+----------------------+---------------+
| infinity             | NOT infinity         | FALSE         |
+----------------------+----------------------+---------------+
| NOT -infinity        | -infinity            | FALSE         |
+----------------------+----------------------+---------------+

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LREAL</Type><BitSize>64</BitSize></Parameter><Parameter><Name>maximumValue</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>LREAL</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMin</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than or equal to the minimum value

.. attention::
	Any comparsion to NaN is ``FALSE`` that means if ``currentValue`` OR ``minimumValue``
	is NaN then is the assertion false.
	For details check `IEEE 754`_ and the truth table below.

.. attention::
	Every number is smaller than infinity except -infinity, it's equal.
	Every number is greater than -infinity except -infinity, it's equal.
	For details check `IEEE 754`_ and the truth table below.

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

truth table for special values
===============================
+----------------------+----------------------+---------------+
| **``currentValue``** | **``minimumValue``** | **assertion** |
+======================+======================+===============+
| NaN                  | Any value            | FASLE         |
+----------------------+----------------------+---------------+
| Any value            | NaN                  | FALSE         |
+----------------------+----------------------+---------------+
| infinity             | NOT NaN              | TRUE          |
+----------------------+----------------------+---------------+
| NOT NaN              | -infinity            | TRUE          |
+----------------------+----------------------+---------------+
| -infinity            | NOT -infinity        | FALSE         |
+----------------------+----------------------+---------------+
| NOT infinity         | infinity             | FALSE         |
+----------------------+----------------------+---------------+

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LREAL</Type><BitSize>64</BitSize></Parameter><Parameter><Name>minimumValue</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>LREAL</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNaN</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is a not a number (NaN)
for details check `IEEE 754`_

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LREAL</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNegative</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is negative

.. attention::
	Any comparsion to NaN is ``FALSE`` that means if ``currentValue``
	is NaN then is the assertion false.
	For details check `IEEE 754`_.

.. attention::
	``currentValue`` has the value infinity means the assertion is false.
	``currentValue`` has the value -infinity means the assertion is true.
	``currentValue`` has the +0.0 means the assertion is false.
	``currentValue`` has the value -0.0 means the assertion is true.	
	For details check `IEEE 754`_.

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LREAL</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNegativeInfinite</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is negative infinite
(-infinty), for details check `IEEE 754`_

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LREAL</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNegativeZero</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is +0.0
for details check `IEEE 754`_

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LREAL</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNormal</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is a normal number (not subnormal)
for details check `IEEE 754`_

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LREAL</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is not equal to the unexpected value

.. attention:: 
	Nothing is equal to NaN, that means if ``currentValue`` OR ``unexpectedValue`` OR ``tolerance``
	is NaN then is the assertion true. For details check `IEEE 754`_

.. attention:: 
	infinity is equal to infinity and -infinity is equal to -infinity, that means if
	``currentValue`` AND ``unexpectedValue`` have the value infinity 
	OR ``currentValue`` AND ``unexpectedValue`` have the value -infinity
	the assertion is false. For details check `IEEE 754`_

.. attention:: 
	If ``tolerance`` has the value infinity or -infinity and 
	``currentValue`` is not NaN and ``unexpectedValue`` is not NaN
	then is the assertion false. For details check `IEEE 754`_

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LREAL</Type><BitSize>64</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected value to compare ]]></Comment><Type>LREAL</Type><BitSize>64</BitSize></Parameter><Parameter><Name>tolerance</Name><Comment><![CDATA[ tolerance to compensate twiddling floats, it has no sign ]]></Comment><Type>LREAL</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNotNegativeInfinite</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is not negative infinite
NOT (-infinty), for details check `IEEE 754`_

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LREAL</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNotPositiveInfinite</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is not positive infinite
NOT (infinty), for details check `IEEE 754`_

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LREAL</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNotSpecial</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is a non special number
(NOT (NaN OR infinty OR -inifinity)), for details check `IEEE 754`_

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LREAL</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsPositive</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is positve

.. attention::
	Any comparsion to NaN is ``FALSE`` that means if ``currentValue``
	is NaN then is the assertion false.
	For details check `IEEE 754`_.

.. attention::
	``currentValue`` has the value infinity means the assertion is true.
	``currentValue`` has the value -infinity means the assertion is false.
	``currentValue`` has the +0.0 means the assertion is true.
	``currentValue`` has the value -0.0 means the assertion is false.	
	For details check `IEEE 754`_.

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LREAL</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsPositiveInfinite</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is positive infinite
(infinty), for details check `IEEE 754`_

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LREAL</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsPositiveZero</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is -0.0
for details check `IEEE 754`_

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LREAL</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsSpecial</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is a special
(NaN OR infinty OR -inifinity), for details check `IEEE 754`_

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LREAL</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsSubnormal</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is a subnormal number
for details check `IEEE 754`_

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LREAL</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">IRealAssertions</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>valueIsANumber</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is a number (NOT NaN)
for details check `IEEE 754`_

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>REAL</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is equal to the expected value

.. attention:: 
	Nothing is equal to NaN, that means if ``currentValue`` OR ``expectedValue`` OR ``tolerance``
	is NaN then is the assertion false. For details check `IEEE 754`_

.. attention:: 
	infinity is equal to infinity and -infinity is equal to -infinity, that means if
	``currentValue`` AND ``expectedValue`` have the value infinity 
	OR ``currentValue`` AND ``expectedValue`` have the value -infinity
	the assertion is TRUE. For details check `IEEE 754`_

.. attention:: 
	If ``tolerance`` has the value infinity or -infinity and 
	``currentValue`` is not NaN and ``expectedValue`` is not NaN
	then is the assertion true. For details check `IEEE 754`_

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>REAL</Type><BitSize>32</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected value to compare ]]></Comment><Type>REAL</Type><BitSize>32</BitSize></Parameter><Parameter><Name>tolerance</Name><Comment><![CDATA[ tolerance to compensate twiddling floats ]]></Comment><Type>REAL</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsFinite</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is finite
(NOT (infinty OR -inifinity)), for details check `IEEE 754`_

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>REAL</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsGreaterThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than the less value

.. attention:: 
	Any comparsion to NaN is ``FALSE`` that means if ``currentValue`` OR ``lessValue``
	is NaN then is the assertion false.
	For details check `IEEE 754`_ and the truth table below.

.. attention:: 
	Every number is smaller than infinity except -infinity, it's equal.
	Every number is greater than -infinity except -infinity, it's equal.
	For details check `IEEE 754`_ and the truth table below.

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

truth table for special values
===============================
+----------------------+-------------------+---------------+
| **``currentValue``** | **``lessValue``** | **assertion** |
+======================+===================+===============+
| NaN                  | Any value         | FASLE         |
+----------------------+-------------------+---------------+
| Any value            | NaN               | FALSE         |
+----------------------+-------------------+---------------+
| infinity             | NOT NaN           | TRUE          |
|                      | NOT infinity      |               |
+----------------------+-------------------+---------------+
| -infinty             | Any value         | FALSE         |
+----------------------+-------------------+---------------+
| Any value            | infinity          | FALSE         |
+----------------------+-------------------+---------------+
| NOT NaN              | -inifinity        | TRUE          |
| NOT -infinity        |                   |               |
+----------------------+-------------------+---------------+

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>REAL</Type><BitSize>32</BitSize></Parameter><Parameter><Name>lessValue</Name><Comment><![CDATA[ less than lower limit ]]></Comment><Type>REAL</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsInfinite</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is infinite
(infinty OR -inifinity), for details check `IEEE 754`_

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>REAL</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsInRangeOf</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is inside a limit

.. attention:: 
	limits are included: ``valueIsInRangeOf(3.0, 3.0, 3.0)`` is a true assertion

.. attention:: 
	Any comparsion to NaN is ``FALSE`` that means 
	if ``lowerLimit`` OR ``currentValue`` OR ``upperLimit``
	is NaN then is the assertion false.
	For details check `IEEE 754`_ and the truth table below.

.. attention:: 
	Every number is smaller than infinity except -infinity, it's equal.
	Every number is greater than -infinity except -infinity, it's equal.
	For details check `IEEE 754`_ and the truth table below.

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

truth table for special values
===============================
+--------------------+----------------------+--------------------+---------------+
| **``lowerLimit``** | **``currentValue``** | **``upperLimit``** | **assertion** |
+====================+======================+====================+===============+
| NaN                | Any value            | Any value          | FASLE         |
+--------------------+----------------------+--------------------+---------------+
| Any value          | NaN                  | Any value          | FALSE         |
+--------------------+----------------------+--------------------+---------------+
| Any value          | Any value            | NaN                | FALSE         |
+--------------------+----------------------+--------------------+---------------+
| -infinity          | NOT NaN              | infinity           | TRUE          |
+--------------------+----------------------+--------------------+---------------+
| infinity           | Any value            | -infinity          | FALSE         |
+--------------------+----------------------+--------------------+---------------+
| NOT -infinity      | -infinity            | Any value          | FALSE         |
+--------------------+----------------------+--------------------+---------------+
| Any value          | infinity             | NOT infinity       | FALSE         |
+--------------------+----------------------+--------------------+---------------+
| -infinity          | -infinity            | -infinity          | TRUE          |
+--------------------+----------------------+--------------------+---------------+
| infinity           | infinity             | infinity           | TRUE          |
+--------------------+----------------------+--------------------+---------------+
| -infinity          | NOT -infinity        | -infinity          | FALSE         |
+--------------------+----------------------+--------------------+---------------+
| infinity           | NOT infinity         | infinity           | FALSE         |
+--------------------+----------------------+--------------------+---------------+

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>lowerLimit</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>REAL</Type><BitSize>32</BitSize></Parameter><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>REAL</Type><BitSize>32</BitSize></Parameter><Parameter><Name>upperLimit</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>REAL</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsLessThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than the less value

.. attention::
	Any comparsion to NaN is ``FALSE`` that means if ``currentValue`` OR ``greaterValue``
	is NaN then is the assertion false.
	For details check `IEEE 754`_ and the truth table below.

.. attention::
	Every number is smaller than infinity except -infinity, it's equal.
	Every number is greater than -infinity except -infinity, it's equal.
	For details check `IEEE 754`_ and the truth table below.

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

truth table for special values
===============================
+----------------------+----------------------+---------------+
| **``currentValue``** | **``greaterValue``** | **assertion** |
+======================+======================+===============+
| NaN                  | Any value            | FASLE         |
+----------------------+----------------------+---------------+
| Any value            | NaN                  | FALSE         |
+----------------------+----------------------+---------------+
| infinity             | Any value            | FALSE         |
+----------------------+----------------------+---------------+
| -infinty             | NOT NaN              | TRUE          |
|                      | NOT -infinity        |               |
+----------------------+----------------------+---------------+
| NOT NaN              | infinity             | TRUE          |
| NOT infinity         |                      |               |
+----------------------+----------------------+---------------+

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>REAL</Type><BitSize>32</BitSize></Parameter><Parameter><Name>greaterValue</Name><Comment><![CDATA[ greater than upper limit ]]></Comment><Type>REAL</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMax</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than or equal to the maximum value

.. attention::
	Any comparsion to NaN is ``FALSE`` that means if ``currentValue`` OR ``maximumValue``
	is NaN then is the assertion false.
	For details check `IEEE 754`_ and the truth table below.

.. attention::
	Every number is smaller than infinity except -infinity, it's equal.
	Every number is greater than -infinity except -infinity, it's equal.
	For details check `IEEE 754`_ and the truth table below.

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

truth table for special values
===============================
+----------------------+----------------------+---------------+
| **``currentValue``** | **``maximumValue``** | **assertion** |
+======================+======================+===============+
| NaN                  | Any value            | FASLE         |
+----------------------+----------------------+---------------+
| Any value            | NaN                  | FALSE         |
+----------------------+----------------------+---------------+
| NOT NaN              | infinity             | TRUE          |
+----------------------+----------------------+---------------+
| -infinity            | NOT NaN              | TRUE          |
+----------------------+----------------------+---------------+
| infinity             | NOT infinity         | FALSE         |
+----------------------+----------------------+---------------+
| NOT -infinity        | -infinity            | FALSE         |
+----------------------+----------------------+---------------+

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>REAL</Type><BitSize>32</BitSize></Parameter><Parameter><Name>maximumValue</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>REAL</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMin</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than or equal to the minimum value

.. attention::
	Any comparsion to NaN is ``FALSE`` that means if ``currentValue`` OR ``minimumValue``
	is NaN then is the assertion false.
	For details check `IEEE 754`_ and the truth table below.

.. attention::
	Every number is smaller than infinity except -infinity, it's equal.
	Every number is greater than -infinity except -infinity, it's equal.
	For details check `IEEE 754`_ and the truth table below.

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

truth table for special values
===============================
+----------------------+----------------------+---------------+
| **``currentValue``** | **``minimumValue``** | **assertion** |
+======================+======================+===============+
| NaN                  | Any value            | FASLE         |
+----------------------+----------------------+---------------+
| Any value            | NaN                  | FALSE         |
+----------------------+----------------------+---------------+
| infinity             | NOT NaN              | TRUE          |
+----------------------+----------------------+---------------+
| NOT NaN              | -infinity            | TRUE          |
+----------------------+----------------------+---------------+
| -infinity            | NOT -infinity        | FALSE         |
+----------------------+----------------------+---------------+
| NOT infinity         | infinity             | FALSE         |
+----------------------+----------------------+---------------+

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>REAL</Type><BitSize>32</BitSize></Parameter><Parameter><Name>minimumValue</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>REAL</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNaN</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is a not a number (NaN)
for details check `IEEE 754`_

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>REAL</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNegative</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is negative

.. attention::
	Any comparsion to NaN is ``FALSE`` that means if ``currentValue``
	is NaN then is the assertion false.
	For details check `IEEE 754`_.

.. attention::
	``currentValue`` has the value infinity means the assertion is false.
	``currentValue`` has the value -infinity means the assertion is true.
	``currentValue`` has the +0.0 means the assertion is false.
	``currentValue`` has the value -0.0 means the assertion is true.	
	For details check `IEEE 754`_.

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>REAL</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNegativeInfinite</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is negative infinite
(-infinty), for details check `IEEE 754`_

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>REAL</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNegativeZero</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is +0.0
for details check `IEEE 754`_

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>REAL</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNormal</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is a normal number (not subnormal)
for details check `IEEE 754`_

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>REAL</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is not equal to the unexpected value

.. attention:: 
	Nothing is equal to NaN, that means if ``currentValue`` OR ``unexpectedValue`` OR ``tolerance``
	is NaN then is the assertion true. For details check `IEEE 754`_

.. attention:: 
	infinity is equal to infinity and -infinity is equal to -infinity, that means if
	``currentValue`` AND ``unexpectedValue`` have the value infinity 
	OR ``currentValue`` AND ``unexpectedValue`` have the value -infinity
	the assertion is false. For details check `IEEE 754`_

.. attention:: 
	If ``tolerance`` has the value infinity or -infinity and 
	``currentValue`` is not NaN and ``unexpectedValue`` is not NaN
	then is the assertion false. For details check `IEEE 754`_

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>REAL</Type><BitSize>32</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected value to compare ]]></Comment><Type>REAL</Type><BitSize>32</BitSize></Parameter><Parameter><Name>tolerance</Name><Comment><![CDATA[ tolerance to compensate twiddling floats ]]></Comment><Type>REAL</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNotNegativeInfinite</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is not negative infinite
NOT (-infinty), for details check `IEEE 754`_

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>REAL</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNotPositiveInfinite</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is not positive infinite
NOT (infinty), for details check `IEEE 754`_

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>REAL</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNotSpecial</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is a non special number
(NOT (NaN OR infinty OR -inifinity)), for details check `IEEE 754`_

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>REAL</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsPositive</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is positve

.. attention::
	Any comparsion to NaN is ``FALSE`` that means if ``currentValue``
	is NaN then is the assertion false.
	For details check `IEEE 754`_.

.. attention::
	``currentValue`` has the value infinity means the assertion is true.
	``currentValue`` has the value -infinity means the assertion is false.
	``currentValue`` has the +0.0 means the assertion is true.
	``currentValue`` has the value -0.0 means the assertion is false.	
	For details check `IEEE 754`_.

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>REAL</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsPositiveInfinite</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is positive infinite
(infinty), for details check `IEEE 754`_

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>REAL</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsPositiveZero</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is -0.0
for details check `IEEE 754`_

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>REAL</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsSpecial</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is a special
(NaN OR infinty OR -inifinity), for details check `IEEE 754`_

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>REAL</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsSubnormal</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is a subnormal number
for details check `IEEE 754`_

.. _IEEE 754: https://en.wikipedia.org/wiki/IEEE_754

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2023 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>REAL</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">IFloatAssertions</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>__getdouble</Name><Comment><![CDATA[

short summary
=================
Returns the interface :ref:`ILrealAssertions` with assert statements for 64 bit floatings (``LREAL``)

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">ILrealAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getsingle</Name><Comment><![CDATA[

short summary
=================
Returns the interface :ref:`IRealAssertions` with assert statements for 32 bit floatings (``REAL``)

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IRealAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">IDintAssertions</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>valueIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected value to compare ]]></Comment><Type>DINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsEven</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is even

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsGreaterThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than the less value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>lessValue</Name><Comment><![CDATA[ less than lower limit ]]></Comment><Type>DINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsInRangeOf</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is inside a limit

.. attention:: 
	limits are included: ``valueIsInRangeOf(3, 3, 3)`` is a true assertion

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>lowerLimit</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>DINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>upperLimit</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>DINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsLessThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than the greater value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>greaterValue</Name><Comment><![CDATA[ greater than upper limit ]]></Comment><Type>DINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMax</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than or equal to the maximum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>maximumValue</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>DINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMin</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than or equal to the minimum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>minimumValue</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>DINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNegative</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is negative

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected value to compare ]]></Comment><Type>DINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsOdd</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is odd

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsPositive</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is positve

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>DINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">ILintAssertions</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>valueIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected value to compare ]]></Comment><Type>LINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsEven</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is even

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsGreaterThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than the less value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>lessValue</Name><Comment><![CDATA[ less than lower limit ]]></Comment><Type>LINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsInRangeOf</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is inside a limit

.. attention:: 
	limits are included: ``valueIsInRangeOf(3, 3, 3)`` is a true assertion

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>lowerLimit</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>LINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>upperLimit</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>LINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsLessThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than the greater value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>greaterValue</Name><Comment><![CDATA[ greater than upper limit ]]></Comment><Type>LINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMax</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than or equal to the maximum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>maximumValue</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>LINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMin</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than or equal to the minimum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>minimumValue</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>LINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNegative</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is negative

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected value to compare ]]></Comment><Type>LINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsOdd</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is odd

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsPositive</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is positve

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">ISintAssertions</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>valueIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>SINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected value to compare ]]></Comment><Type>SINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsEven</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is even

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>SINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsGreaterThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than the less value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>SINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>lessValue</Name><Comment><![CDATA[ less than lower limit ]]></Comment><Type>SINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsInRangeOf</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is inside a limit

.. attention:: 
	limits are included: ``valueIsInRangeOf(3, 3, 3)`` is a true assertion

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>lowerLimit</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>SINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>SINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>upperLimit</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>SINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsLessThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than the greater value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>SINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>greaterValue</Name><Comment><![CDATA[ greater than upper limit ]]></Comment><Type>SINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMax</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than or equal to the maximum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>SINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>maximumValue</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>SINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMin</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than or equal to the minimum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>SINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>minimumValue</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>SINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNegative</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is negative

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>SINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>SINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected value to compare ]]></Comment><Type>SINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsOdd</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is odd

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>SINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsPositive</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is positve

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>SINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">IIntAssertions</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>valueIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>INT</Type><BitSize>16</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected value to compare ]]></Comment><Type>INT</Type><BitSize>16</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsEven</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is even

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>INT</Type><BitSize>16</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsGreaterThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than the less value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>INT</Type><BitSize>16</BitSize></Parameter><Parameter><Name>lessValue</Name><Comment><![CDATA[ less than lower limit ]]></Comment><Type>INT</Type><BitSize>16</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsInRangeOf</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is inside a limit

.. attention:: 
	limits are included: ``valueIsInRangeOf(3, 3, 3)`` is a true assertion

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>lowerLimit</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>INT</Type><BitSize>16</BitSize></Parameter><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>INT</Type><BitSize>16</BitSize></Parameter><Parameter><Name>upperLimit</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>INT</Type><BitSize>16</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsLessThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than the greater value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>INT</Type><BitSize>16</BitSize></Parameter><Parameter><Name>greaterValue</Name><Comment><![CDATA[ greater than upper limit ]]></Comment><Type>INT</Type><BitSize>16</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMax</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than or equal to the maximum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>INT</Type><BitSize>16</BitSize></Parameter><Parameter><Name>maximumValue</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>INT</Type><BitSize>16</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMin</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than or equal to the minimum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>INT</Type><BitSize>16</BitSize></Parameter><Parameter><Name>minimumValue</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>INT</Type><BitSize>16</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNegative</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is negative

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>INT</Type><BitSize>16</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>INT</Type><BitSize>16</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected value to compare ]]></Comment><Type>INT</Type><BitSize>16</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsOdd</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is odd

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>INT</Type><BitSize>16</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsPositive</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is positve

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>INT</Type><BitSize>16</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">IXintAssertions</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>valueIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected value to compare ]]></Comment><Type>LINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsEven</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is even

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsGreaterThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than the less value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>lessValue</Name><Comment><![CDATA[ less than lower limit ]]></Comment><Type>LINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsInRangeOf</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is inside a limit

.. attention:: 
	limits are included: ``valueIsInRangeOf(3, 3, 3)`` is a true assertion

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>lowerLimit</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>LINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>upperLimit</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>LINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsLessThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than the greater value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>greaterValue</Name><Comment><![CDATA[ greater than upper limit ]]></Comment><Type>LINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMax</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than or equal to the maximum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>maximumValue</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>LINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMin</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than or equal to the minimum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>minimumValue</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>LINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNegative</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is negative

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected value to compare ]]></Comment><Type>LINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsOdd</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is odd

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsPositive</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is positve

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">ISignedIntegerAssertions</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>__getdouble</Name><Comment><![CDATA[

short summary
=================
Returns the interface :ref:`IDintAssertions` with assert statements for signed 32 bit integers 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IDintAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getlong</Name><Comment><![CDATA[

short summary
=================
Returns the interface :ref:`ILintAssertions` with assert statements for signed 64 bit integers 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">ILintAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getshort</Name><Comment><![CDATA[

short summary
=================
Returns the interface :ref:`ISintAssertions` with assert statements for signed 8 bit integers 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">ISintAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getsimple</Name><Comment><![CDATA[

short summary
=================
Returns the interface :ref:`IIntAssertions` with assert statements for signed 16 bit integers 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IIntAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getx</Name><Comment><![CDATA[

short summary
=================
Returns the interface :ref:`IXintAssertions` with assert statements for signed integers register length 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IXintAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">IUdintAssertions</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>valueIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected value to compare ]]></Comment><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsEven</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is even

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsGreaterThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than the less value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>lessValue</Name><Comment><![CDATA[ less than lower limit ]]></Comment><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsInRangeOf</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is inside a limit

.. attention:: 
	limits are included: ``valueIsInRangeOf(3, 3, 3)`` is a true assertion

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>lowerLimit</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>upperLimit</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsLessThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than the greater value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>greaterValue</Name><Comment><![CDATA[ greater than upper limit ]]></Comment><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMax</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than or equal to the maximum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>maximumValue</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMin</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than or equal to the minimum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>minimumValue</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected value to compare ]]></Comment><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsOdd</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is odd

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">IUlintAssertions</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>valueIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>ULINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected value to compare ]]></Comment><Type>ULINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsEven</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is even

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>ULINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsGreaterThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than the less value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>ULINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>lessValue</Name><Comment><![CDATA[ less than lower limit ]]></Comment><Type>ULINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsInRangeOf</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is inside a limit

.. attention:: 
	limits are included: ``valueIsInRangeOf(3, 3, 3)`` is a true assertion

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>lowerLimit</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>ULINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>ULINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>upperLimit</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>ULINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsLessThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than the greater value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>ULINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>greaterValue</Name><Comment><![CDATA[ greater than upper limit ]]></Comment><Type>ULINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMax</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than or equal to the maximum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>ULINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>maximumValue</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>ULINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMin</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than or equal to the minimum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>ULINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>minimumValue</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>ULINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>ULINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected value to compare ]]></Comment><Type>ULINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsOdd</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is odd

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>ULINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">IUsintAssertions</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>valueIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>USINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected value to compare ]]></Comment><Type>USINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsEven</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is even

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>USINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsGreaterThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than the less value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>USINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>lessValue</Name><Comment><![CDATA[ less than lower limit ]]></Comment><Type>USINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsInRangeOf</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is inside a limit

.. attention:: 
	limits are included: ``valueIsInRangeOf(3, 3, 3)`` is a true assertion

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>lowerLimit</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>USINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>USINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>upperLimit</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>USINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsLessThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than the greater value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>USINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>greaterValue</Name><Comment><![CDATA[ greater than upper limit ]]></Comment><Type>USINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMax</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than or equal to the maximum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>USINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>maximumValue</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>USINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMin</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than or equal to the minimum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>USINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>minimumValue</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>USINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>USINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected value to compare ]]></Comment><Type>USINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsOdd</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is odd

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>USINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">IUintAssertions</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>valueIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>UINT</Type><BitSize>16</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected value to compare ]]></Comment><Type>UINT</Type><BitSize>16</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsEven</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is even

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>UINT</Type><BitSize>16</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsGreaterThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than the less value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>UINT</Type><BitSize>16</BitSize></Parameter><Parameter><Name>lessValue</Name><Comment><![CDATA[ less than lower limit ]]></Comment><Type>UINT</Type><BitSize>16</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsInRangeOf</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is inside a limit

.. attention:: 
	limits are included: ``valueIsInRangeOf(3, 3, 3)`` is a true assertion

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>lowerLimit</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>UINT</Type><BitSize>16</BitSize></Parameter><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>UINT</Type><BitSize>16</BitSize></Parameter><Parameter><Name>upperLimit</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>UINT</Type><BitSize>16</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsLessThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than the greater value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>UINT</Type><BitSize>16</BitSize></Parameter><Parameter><Name>greaterValue</Name><Comment><![CDATA[ greater than upper limit ]]></Comment><Type>UINT</Type><BitSize>16</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMax</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than or equal to the maximum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>UINT</Type><BitSize>16</BitSize></Parameter><Parameter><Name>maximumValue</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>UINT</Type><BitSize>16</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMin</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than or equal to the minimum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>UINT</Type><BitSize>16</BitSize></Parameter><Parameter><Name>minimumValue</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>UINT</Type><BitSize>16</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>UINT</Type><BitSize>16</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected value to compare ]]></Comment><Type>UINT</Type><BitSize>16</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsOdd</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is odd

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>UINT</Type><BitSize>16</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">IUxintAssertions</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>valueIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>ULINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected value to compare ]]></Comment><Type>ULINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsEven</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is even

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>ULINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsGreaterThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than the less value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>ULINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>lessValue</Name><Comment><![CDATA[ less than lower limit ]]></Comment><Type>ULINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsInRangeOf</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is inside a limit

.. attention:: 
	limits are included: ``valueIsInRangeOf(3, 3, 3)`` is a true assertion

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>lowerLimit</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>ULINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>ULINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>upperLimit</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>ULINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsLessThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than the greater value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>ULINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>greaterValue</Name><Comment><![CDATA[ greater than upper limit ]]></Comment><Type>ULINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMax</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than or equal to the maximum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>ULINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>maximumValue</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>ULINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMin</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than or equal to the minimum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>ULINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>minimumValue</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>ULINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>ULINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected value to compare ]]></Comment><Type>ULINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsOdd</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is odd

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>ULINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">IUnsignedIntegerAssertions</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>__getdouble</Name><Comment><![CDATA[

short summary
=================
Returns the interface :ref:`IUdintAssertions` with assert statements for unsigned 32 bit integers 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IUdintAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getlong</Name><Comment><![CDATA[

short summary
=================
Returns the interface :ref:`IUlintAssertions` with assert statements for unsigned 64 bit integers 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IUlintAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getshort</Name><Comment><![CDATA[

short summary
=================
Returns the interface :ref:`IUsintAssertions` with assert statements for unsigned 8 bit integers 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IUsintAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getsimple</Name><Comment><![CDATA[

short summary
=================
Returns the interface :ref:`IUintAssertions` with assert statements for unsigned 16 bit integers 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IUintAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getx</Name><Comment><![CDATA[

short summary
=================
Returns the interface :ref:`IUxintAssertions` with assert statements for unsigned integers register length 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IUxintAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">IIntergerAssertions</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>__getsigned</Name><Comment><![CDATA[

short summary
=================
Returns the interface :ref:`ISignedIntegerAssertions` with assert statements for signed integers from 8~64 bit length 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">ISignedIntegerAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getunsigned</Name><Comment><![CDATA[

short summary
=================
Returns the interface :ref:`IUnsignedIntegerAssertions` with assert statements for unsigned integers from 8~64 bit length 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IUnsignedIntegerAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">IObjectAssertions</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>isAfterInOrderTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if ``object`` is after in order to ``objectToCompare``

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>object</Name><Comment><![CDATA[ object which should be tested ]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Parameter><Name>objectToCompare</Name><Comment><![CDATA[ comparative object ]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>isEqualInOrderTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if ``object``
is at the same position in the sequence as ``objectToCompare``

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>object</Name><Comment><![CDATA[ object which should be tested ]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Parameter><Name>objectToCompare</Name><Comment><![CDATA[ comparative object ]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>isEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if ``object`` is ``objectToCompare``

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>object</Name><Comment><![CDATA[ object which should be tested ]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Parameter><Name>objectToCompare</Name><Comment><![CDATA[ comparative object ]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>isNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if ``object`` is not ``objectToCompare``

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>object</Name><Comment><![CDATA[ object which should be tested ]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Parameter><Name>objectToCompare</Name><Comment><![CDATA[ comparative object ]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>objectIsNull</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if ``object`` is NULL

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>object</Name><Comment><![CDATA[ object which should be tested ]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>objectIsValid</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if ``object`` is not NULL

.. attention:: 
	Validity of the pointer will be proofed for 32 bit systems only.
	For other systems it's an optimistic estimate.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>object</Name><Comment><![CDATA[ object which should be tested ]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>precedesInOrderTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if ``object``
precedes in sequence to ``objectToCompare``

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>object</Name><Comment><![CDATA[ object which should be tested ]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Parameter><Name>objectToCompare</Name><Comment><![CDATA[ comparative object ]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>setComperator</Name><Comment><![CDATA[

short summary
=================
This allows you to set your own comperator for the methods
:ref:`IObjectAssertions.precedesInOrderTo`  
:ref:`IObjectAssertions.isEqualInOrderTo`  
:ref:`IObjectAssertions.isAfterInOrderTo`
to clear the comperator again, just call it with 0: ``foo.setComperator(comperator := 0);``

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>comperator</Name><Comment><![CDATA[ comperator to inject ]]></Comment><Type Namespace="CNM_AbstractObject">IComparator</Type><BitSize>64</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">IPointerAssertions</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>isEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if ``address1`` and ``address2`` refer to the same object

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>address1</Name><Comment><![CDATA[ memory address ]]></Comment><Type GUID="{18071995-0000-0000-0000-000000000018}">PVOID</Type><BitSize>64</BitSize></Parameter><Parameter><Name>address2</Name><Comment><![CDATA[ memory address ]]></Comment><Type GUID="{18071995-0000-0000-0000-000000000018}">PVOID</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>isNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if ``address1`` and ``address2`` refer not to the same object

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>address1</Name><Comment><![CDATA[ memory address ]]></Comment><Type GUID="{18071995-0000-0000-0000-000000000018}">PVOID</Type><BitSize>64</BitSize></Parameter><Parameter><Name>address2</Name><Comment><![CDATA[ memory address ]]></Comment><Type GUID="{18071995-0000-0000-0000-000000000018}">PVOID</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>isNotNull</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if pointer is not null

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>address</Name><Comment><![CDATA[ memory address ]]></Comment><Type GUID="{18071995-0000-0000-0000-000000000018}">PVOID</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>isNull</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if pointer is null

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>address</Name><Comment><![CDATA[ memory address ]]></Comment><Type GUID="{18071995-0000-0000-0000-000000000018}">PVOID</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>isValid</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if pointer is valid.
That means the pointer is not zero,
the pointer is not in the memory area unknown.

.. attention:: 
	A pointer to a variable on the stack is also in an unknown area of memory, but it is a valid pointer.
	That means the method does not work for pointers to stack variables

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>address</Name><Comment><![CDATA[ memory address ]]></Comment><Type GUID="{18071995-0000-0000-0000-000000000018}">PVOID</Type><BitSize>64</BitSize></Parameter><Parameter><Name>sizeInBytes</Name><Comment><![CDATA[ number of bytes ]]></Comment><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>memoryAreaIsCnc</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if pointer refers to cnc area

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>address</Name><Comment><![CDATA[ memory address ]]></Comment><Type GUID="{18071995-0000-0000-0000-000000000018}">PVOID</Type><BitSize>64</BitSize></Parameter><Parameter><Name>sizeInBytes</Name><Comment><![CDATA[ number of bytes ]]></Comment><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>memoryAreaIsDynamic</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if pointer refers to dynamic area

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>address</Name><Comment><![CDATA[ memory address ]]></Comment><Type GUID="{18071995-0000-0000-0000-000000000018}">PVOID</Type><BitSize>64</BitSize></Parameter><Parameter><Name>sizeInBytes</Name><Comment><![CDATA[ number of bytes ]]></Comment><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>memoryAreaIsNotCnc</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if pointer refers not to cnc area

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>address</Name><Comment><![CDATA[ memory address ]]></Comment><Type GUID="{18071995-0000-0000-0000-000000000018}">PVOID</Type><BitSize>64</BitSize></Parameter><Parameter><Name>sizeInBytes</Name><Comment><![CDATA[ number of bytes ]]></Comment><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>memoryAreaIsNotDynamic</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if pointer refers not to dynamic area

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>address</Name><Comment><![CDATA[ memory address ]]></Comment><Type GUID="{18071995-0000-0000-0000-000000000018}">PVOID</Type><BitSize>64</BitSize></Parameter><Parameter><Name>sizeInBytes</Name><Comment><![CDATA[ number of bytes ]]></Comment><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>memoryAreaIsNotStatic</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if pointer refers not to static area

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>address</Name><Comment><![CDATA[ memory address ]]></Comment><Type GUID="{18071995-0000-0000-0000-000000000018}">PVOID</Type><BitSize>64</BitSize></Parameter><Parameter><Name>sizeInBytes</Name><Comment><![CDATA[ number of bytes ]]></Comment><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>memoryAreaIsNotUnkown</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if pointer is not at memory area unknown

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>address</Name><Comment><![CDATA[ memory address ]]></Comment><Type GUID="{18071995-0000-0000-0000-000000000018}">PVOID</Type><BitSize>64</BitSize></Parameter><Parameter><Name>sizeInBytes</Name><Comment><![CDATA[ number of bytes ]]></Comment><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>memoryAreaIsStatic</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if pointer refers to static area

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>address</Name><Comment><![CDATA[ memory address ]]></Comment><Type GUID="{18071995-0000-0000-0000-000000000018}">PVOID</Type><BitSize>64</BitSize></Parameter><Parameter><Name>sizeInBytes</Name><Comment><![CDATA[ number of bytes ]]></Comment><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>memoryAreaIsUnkown</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if pointer refers not to an unknown area

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>address</Name><Comment><![CDATA[ memory address ]]></Comment><Type GUID="{18071995-0000-0000-0000-000000000018}">PVOID</Type><BitSize>64</BitSize></Parameter><Parameter><Name>sizeInBytes</Name><Comment><![CDATA[ number of bytes ]]></Comment><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">UnicodeStringLengthUnit</Name><Comment><![CDATA[

short summary
=================
This list is intended to define the string length units of measurement

Type of the enumartion is ``BYTE``

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

enumeration values
======================

]]></Comment><BitSize>32</BitSize><BaseType>DINT</BaseType><EnumInfo><Text>BYTES</Text><Enum>0</Enum><Comment><![CDATA[ Just the number of bytes without the termination character U+0000 ]]></Comment></EnumInfo><EnumInfo><Text>CHARACTERS</Text><Enum>1</Enum><Comment><![CDATA[ 
	Character count of a string. For example Ä
	can be represented just one character U+00C4 (Ä) 
	or it can be represented by two characters U+0041 U+00308 (A◌̈)
	]]></Comment></EnumInfo><EnumInfo><Text>CHARACTERS_NFD</Text><Enum>2</Enum><Comment><![CDATA[
	Character count of a string normalized with form D.
	Form D is a canonial decomposition. 
	For example Ä (U+00C4) will transformed to A◌̈ (U+0041 U+00308)
	it counts always two.
	]]></Comment></EnumInfo><EnumInfo><Text>CHARACTERS_NFC</Text><Enum>3</Enum><Comment><![CDATA[
	Character count of a string normalized with form C.
	Form C is a canonial composition. 
	For example A◌̈ (U+0041 U+00308) will transformed to Ä (U+00C4)
	it counts always one.
	]]></Comment></EnumInfo><EnumInfo><Text>VISIBLE_CHARACTERS</Text><Enum>4</Enum><Comment><![CDATA[
	Character count of a string but the visible only.
	For example the developer emoji 👨‍💻 is made from three characters:
	man👨 (U+1F468),zero width joiner (U+200D) and the Personal Computer 💻 (U+1F4BB)
	but it counts just one for it.
	]]></Comment></EnumInfo><EnumInfo><Text>WIDTH</Text><Enum>5</Enum><Comment><![CDATA[
	String width (rendering width according to the number of spaces (U+0020)).
 	If strings should be in horizontal aligned, then it's required to check the width.
	For example woman 👩 (U+1F469) has a width of two spaces, 
	developer 👨‍💻 (U+1F468 U+200D U+1F4BB) has a width of five spaces
	and Ä has a width of one space
	]]></Comment></EnumInfo><Properties><Property><Name>qualified_only</Name></Property><Property><Name>strict</Name></Property><Property><Name>to_string</Name></Property><Property><Name>to_string_function</Name><Value>__TO_STRING__2218</Value></Property><Property><Name>to_wstring_function</Name><Value>__TO_WSTRING__2218</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">IUnicodeStringAssertions</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>contains</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` contains the search string

.. attention:: 
	All strings are handled as null terminated byte/word streams.
	For windows-1252 is end of the string 16#00
	For UTF-16 is end of the string 16#00_00

.. attention:: 
	Method uses ``ANY_STRING`` and for this it's not possible
	to use literals/constants, because for ``ANY`` types the
	compiler generates``__SYSTEM.AnyType`` and 
	``__SYSTEM.AnyType`` contains a pointer  

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type>AnyType</Type><BitSize>128</BitSize><Properties><Property><Name>anytypeclass</Name><Value>ANY_STRING</Value></Property></Properties></Parameter><Parameter><Name>searchString</Name><Comment><![CDATA[ string must be found in ``stringToCheck`` ]]></Comment><Type>AnyType</Type><BitSize>128</BitSize><Properties><Property><Name>anytypeclass</Name><Value>ANY_STRING</Value></Property></Properties></Parameter><Parameter><Name>ignoreCases</Name><Comment><![CDATA[ ``TRUE`` means ignore cases; ``FALSE`` means cases must be equal too ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>normalizeStrings</Name><Comment><![CDATA[normalize both strings for check]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Properties><Property><Name>hasanytype</Name></Property></Properties></Method><Method><Name>containsNo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` not contains the search string

.. attention:: 
	All strings are handled as null terminated byte/word streams.
	For windows-1252 is end of the string 16#00
	For UTF-16 is end of the string 16#00_00

.. attention:: 
	Method uses ``ANY_STRING`` and for this it's not possible
	to use literals/constants, because for ``ANY`` types the
	compiler generates``__SYSTEM.AnyType`` and 
	``__SYSTEM.AnyType`` contains a pointer  

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type>AnyType</Type><BitSize>128</BitSize><Properties><Property><Name>anytypeclass</Name><Value>ANY_STRING</Value></Property></Properties></Parameter><Parameter><Name>searchString</Name><Comment><![CDATA[ string that must not be found in ``stringToCheck`` ]]></Comment><Type>AnyType</Type><BitSize>128</BitSize><Properties><Property><Name>anytypeclass</Name><Value>ANY_STRING</Value></Property></Properties></Parameter><Parameter><Name>ignoreCases</Name><Comment><![CDATA[ ``TRUE`` means ignore cases; ``FALSE`` means cases must be equal too ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>normalizeStrings</Name><Comment><![CDATA[normalize both strings for check]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Properties><Property><Name>hasanytype</Name></Property></Properties></Method><Method><Name>endsWith</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` ends with ``end``

.. attention:: 
	All strings are handled as null terminated byte/word streams.
	For windows-1252 is end of the string 16#00
	For UTF-16 is end of the string 16#00_00

.. attention:: 
	Method uses ``ANY_STRING`` and for this it's not possible
	to use literals/constants, because for ``ANY`` types the
	compiler generates``__SYSTEM.AnyType`` and 
	``__SYSTEM.AnyType`` contains a pointer  

.. attention:: 
	end of the string is **ALWAYS** the right side of the string 
	even for writings which written from right to left like Hebrew or Arabic

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type>AnyType</Type><BitSize>128</BitSize><Properties><Property><Name>anytypeclass</Name><Value>ANY_STRING</Value></Property></Properties></Parameter><Parameter><Name>end</Name><Comment><![CDATA[ expected end of ``stringToCheck`` ]]></Comment><Type>AnyType</Type><BitSize>128</BitSize><Properties><Property><Name>anytypeclass</Name><Value>ANY_STRING</Value></Property></Properties></Parameter><Parameter><Name>ignoreCases</Name><Comment><![CDATA[ ``TRUE`` means ignore cases; ``FALSE`` means cases must be equal too ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>trim</Name><Comment><![CDATA[ ``TRUE`` means truncation of spaces on the right side of ``stringToCheck``]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>normalizeStrings</Name><Comment><![CDATA[normalize both strings for check]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Properties><Property><Name>hasanytype</Name></Property></Properties></Method><Method><Name>isEmpty</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` is empty

.. attention:: 
	All strings are handled as null terminated byte/word streams.
	For windows-1252 is end of the string 16#00
	For UTF-16 is end of the string 16#00_00

.. attention:: 
	Method uses ``ANY_STRING`` and for this it's not possible
	to use literals/constants, because for ``ANY`` types the
	compiler generates``__SYSTEM.AnyType`` and 
	``__SYSTEM.AnyType`` contains a pointer  

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type>AnyType</Type><BitSize>128</BitSize><Properties><Property><Name>anytypeclass</Name><Value>ANY_STRING</Value></Property></Properties></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter><Properties><Property><Name>hasanytype</Name></Property></Properties></Method><Method><Name>isEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` is equal to ``expected``

.. attention:: 
	All strings are handled as null terminated byte/word streams.
	For windows-1252 is end of the string 16#00
	For UTF-16 is end of the string 16#00_00

.. attention:: 
	Method uses ``ANY_STRING`` and for this it's not possible
	to use literals/constants, because for ``ANY`` types the
	compiler generates``__SYSTEM.AnyType`` and 
	``__SYSTEM.AnyType`` contains a pointer  

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type>AnyType</Type><BitSize>128</BitSize><Properties><Property><Name>anytypeclass</Name><Value>ANY_STRING</Value></Property></Properties></Parameter><Parameter><Name>expected</Name><Comment><![CDATA[ ``stringToCheck`` must be equal to expected ]]></Comment><Type>AnyType</Type><BitSize>128</BitSize><Properties><Property><Name>anytypeclass</Name><Value>ANY_STRING</Value></Property></Properties></Parameter><Parameter><Name>ignoreCases</Name><Comment><![CDATA[ ``TRUE`` means ignore cases; ``FALSE`` means cases must be equal too ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>normalizeStrings</Name><Comment><![CDATA[normalize both strings for check]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Properties><Property><Name>hasanytype</Name></Property></Properties></Method><Method><Name>isNotEmpty</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` is not empty

.. attention:: 
	All strings are handled as null terminated byte/word streams.
	For windows-1252 is end of the string 16#00
	For UTF-16 is end of the string 16#00_00

.. attention:: 
	Method uses ``ANY_STRING`` and for this it's not possible
	to use literals/constants, because for ``ANY`` types the
	compiler generates``__SYSTEM.AnyType`` and 
	``__SYSTEM.AnyType`` contains a pointer  

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type>AnyType</Type><BitSize>128</BitSize><Properties><Property><Name>anytypeclass</Name><Value>ANY_STRING</Value></Property></Properties></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter><Properties><Property><Name>hasanytype</Name></Property></Properties></Method><Method><Name>isNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` is not equal to ``unexpected``

.. attention:: 
	All strings are handled as null terminated byte/word streams.
	For windows-1252 is end of the string 16#00
	For UTF-16 is end of the string 16#00_00

.. attention:: 
	Method uses ``ANY_STRING`` and for this it's not possible
	to use literals/constants, because for ``ANY`` types the
	compiler generates``__SYSTEM.AnyType`` and 
	``__SYSTEM.AnyType`` contains a pointer  

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type>AnyType</Type><BitSize>128</BitSize><Properties><Property><Name>anytypeclass</Name><Value>ANY_STRING</Value></Property></Properties></Parameter><Parameter><Name>unexpected</Name><Comment><![CDATA[ ``stringToCheck`` must be not equal to expected ]]></Comment><Type>AnyType</Type><BitSize>128</BitSize><Properties><Property><Name>anytypeclass</Name><Value>ANY_STRING</Value></Property></Properties></Parameter><Parameter><Name>ignoreCases</Name><Comment><![CDATA[ ``TRUE`` means ignore cases; ``FALSE`` means cases must be equal too ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>normalizeStrings</Name><Comment><![CDATA[normalize both strings for check]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Properties><Property><Name>hasanytype</Name></Property></Properties></Method><Method><Name>lengthIsBetween</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` is length
is between ``minLength`` and ``maxLength``

.. attention:: 
	All strings are handled as null terminated byte/word streams.
	For windows-1252 is end of the string 16#00
	For UTF-16 is end of the string 16#00_00

.. attention:: 
	Method uses ``ANY_STRING`` and for this it's not possible
	to use literals/constants, because for ``ANY`` types the
	compiler generates``__SYSTEM.AnyType`` and 
	``__SYSTEM.AnyType`` contains a pointer  

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type>AnyType</Type><BitSize>128</BitSize><Properties><Property><Name>anytypeclass</Name><Value>ANY_STRING</Value></Property></Properties></Parameter><Parameter><Name>minLength</Name><Comment><![CDATA[ lower limit of the string length ]]></Comment><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>maxLength</Name><Comment><![CDATA[ upper limit of the string length ]]></Comment><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>stringLengthUnit</Name><Comment><![CDATA[ string length units of measurement ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">UnicodeStringLengthUnit</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter><Properties><Property><Name>hasanytype</Name></Property></Properties></Method><Method><Name>lengthIsExact</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` is length
is equal to ``expectedLength``

.. attention:: 
	All strings are handled as null terminated byte/word streams.
	For windows-1252 is end of the string 16#00
	For UTF-16 is end of the string 16#00_00

.. attention:: 
	Method uses ``ANY_STRING`` and for this it's not possible
	to use literals/constants, because for ``ANY`` types the
	compiler generates``__SYSTEM.AnyType`` and 
	``__SYSTEM.AnyType`` contains a pointer  

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type>AnyType</Type><BitSize>128</BitSize><Properties><Property><Name>anytypeclass</Name><Value>ANY_STRING</Value></Property></Properties></Parameter><Parameter><Name>expectedLength</Name><Comment><![CDATA[ expected length of ``stringToCheck`` ]]></Comment><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>stringLengthUnit</Name><Comment><![CDATA[ string length units of measurement ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">UnicodeStringLengthUnit</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter><Properties><Property><Name>hasanytype</Name></Property></Properties></Method><Method><Name>lengthIsMax</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` is length
is equal or less than to ``maxLength``

.. attention:: 
	All strings are handled as null terminated byte/word streams.
	For windows-1252 is end of the string 16#00
	For UTF-16 is end of the string 16#00_00

.. attention:: 
	Method uses ``ANY_STRING`` and for this it's not possible
	to use literals/constants, because for ``ANY`` types the
	compiler generates``__SYSTEM.AnyType`` and 
	``__SYSTEM.AnyType`` contains a pointer  

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type>AnyType</Type><BitSize>128</BitSize><Properties><Property><Name>anytypeclass</Name><Value>ANY_STRING</Value></Property></Properties></Parameter><Parameter><Name>maxLength</Name><Comment><![CDATA[ upper limit of the length of ``stringToCheck`` ]]></Comment><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>stringLengthUnit</Name><Comment><![CDATA[ string length units of measurement ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">UnicodeStringLengthUnit</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter><Properties><Property><Name>hasanytype</Name></Property></Properties></Method><Method><Name>lengthIsMin</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` is length
is equal or grater than to ``minLength``

.. attention:: 
	All strings are handled as null terminated byte/word streams.
	For windows-1252 is end of the string 16#00
	For UTF-16 is end of the string 16#00_00

.. attention:: 
	Method uses ``ANY_STRING`` and for this it's not possible
	to use literals/constants, because for ``ANY`` types the
	compiler generates``__SYSTEM.AnyType`` and 
	``__SYSTEM.AnyType`` contains a pointer  

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type>AnyType</Type><BitSize>128</BitSize><Properties><Property><Name>anytypeclass</Name><Value>ANY_STRING</Value></Property></Properties></Parameter><Parameter><Name>minLength</Name><Comment><![CDATA[ lower limit of the length of ``stringToCheck`` ]]></Comment><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>stringLengthUnit</Name><Comment><![CDATA[ string length units of measurement ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">UnicodeStringLengthUnit</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter><Properties><Property><Name>hasanytype</Name></Property></Properties></Method><Method><Name>startsWith</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` starts with ``start``

.. attention:: 
	All strings are handled as null terminated byte/word streams.
	For windows-1252 is end of the string 16#00
	For UTF-16 is end of the string 16#00_00

.. attention:: 
	Method uses ``ANY_STRING`` and for this it's not possible
	to use literals/constants, because for ``ANY`` types the
	compiler generates``__SYSTEM.AnyType`` and 
	``__SYSTEM.AnyType`` contains a pointer  

.. attention:: 
	start of the string is **ALWAYS** the left side of the string 
	even for writings which written from right to left like Hebrew or Arabic

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type>AnyType</Type><BitSize>128</BitSize><Properties><Property><Name>anytypeclass</Name><Value>ANY_STRING</Value></Property></Properties></Parameter><Parameter><Name>start</Name><Comment><![CDATA[ expected start of ``stringToCheck`` ]]></Comment><Type>AnyType</Type><BitSize>128</BitSize><Properties><Property><Name>anytypeclass</Name><Value>ANY_STRING</Value></Property></Properties></Parameter><Parameter><Name>ignoreCases</Name><Comment><![CDATA[ ``TRUE`` means ignore cases; ``FALSE`` means cases must be equal too ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>trim</Name><Comment><![CDATA[ ``TRUE`` means truncation of spaces on the left side of ``stringToCheck``]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>normalizeStrings</Name><Comment><![CDATA[normalize both strings for check]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Properties><Property><Name>hasanytype</Name></Property></Properties></Method></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">IUtf16StringAssertions</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>contains</Name><Comment><![CDATA[

short summary
=================
This assertion method for UTF-16 strings checks if the current string ``stringToCheck`` contains the search string ``searchString``

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type>WSTRING(255)</Type><BitSize>4096</BitSize></Parameter><Parameter><Name>searchString</Name><Comment><![CDATA[ string must be found in ``stringToCheck`` ]]></Comment><Type>WSTRING(255)</Type><BitSize>4096</BitSize></Parameter><Parameter><Name>ignoreCases</Name><Comment><![CDATA[ ``TRUE`` means ignore cases; ``FALSE`` means cases must be equal too ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>normalizeStrings</Name><Comment><![CDATA[normalize both strings for check]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter></Method><Method><Name>containsNo</Name><Comment><![CDATA[

short summary
=================
This assertion method for UTF-16 strings checks if the current string ``stringToCheck`` contains not the search string ``searchString``

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type>WSTRING(255)</Type><BitSize>4096</BitSize></Parameter><Parameter><Name>searchString</Name><Comment><![CDATA[ string that must not be found in ``stringToCheck`` ]]></Comment><Type>WSTRING(255)</Type><BitSize>4096</BitSize></Parameter><Parameter><Name>ignoreCases</Name><Comment><![CDATA[ ``TRUE`` means ignore cases; ``FALSE`` means cases must be equal too ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>normalizeStrings</Name><Comment><![CDATA[normalize both strings for check]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter></Method><Method><Name>endsWith</Name><Comment><![CDATA[

short summary
=================
This assertion method for UTF-16 strings checks if the current string ``stringToCheck`` ends with the string ``end``

.. attention:: 
	end of the string is **ALWAYS** the right side of the string 
	even for writings which written from right to left like Hebrew or Arabic

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type>WSTRING(255)</Type><BitSize>4096</BitSize></Parameter><Parameter><Name>end</Name><Comment><![CDATA[ expected end of ``stringToCheck`` ]]></Comment><Type>WSTRING(255)</Type><BitSize>4096</BitSize></Parameter><Parameter><Name>ignoreCases</Name><Comment><![CDATA[ ``TRUE`` means ignore cases; ``FALSE`` means cases must be equal too ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>trim</Name><Comment><![CDATA[ ``TRUE`` means truncation of spaces on the right side of ``stringToCheck``]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>normalizeStrings</Name><Comment><![CDATA[normalize both strings for check]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter></Method><Method><Name>isEmpty</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` is empty

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type>WSTRING(255)</Type><BitSize>4096</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>isEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` is equal to ``expected``

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type>WSTRING(255)</Type><BitSize>4096</BitSize></Parameter><Parameter><Name>expected</Name><Comment><![CDATA[ ``stringToCheck`` must be equal to expected ]]></Comment><Type>WSTRING(255)</Type><BitSize>4096</BitSize></Parameter><Parameter><Name>ignoreCases</Name><Comment><![CDATA[ ``TRUE`` means ignore cases; ``FALSE`` means cases must be equal too ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>normalizeStrings</Name><Comment><![CDATA[normalize both strings for check]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter></Method><Method><Name>isNotEmpty</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` is not empty

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type>WSTRING(255)</Type><BitSize>4096</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>isNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` is not equal to ``unexpected``

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type>WSTRING(255)</Type><BitSize>4096</BitSize></Parameter><Parameter><Name>unexpected</Name><Comment><![CDATA[ ``stringToCheck`` must be not equal to expected ]]></Comment><Type>WSTRING(255)</Type><BitSize>4096</BitSize></Parameter><Parameter><Name>ignoreCases</Name><Comment><![CDATA[ ``TRUE`` means ignore cases; ``FALSE`` means cases must be equal too ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>normalizeStrings</Name><Comment><![CDATA[normalize both strings for check]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter></Method><Method><Name>lengthIsBetween</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` length
is between ``minLength`` and ``maxLength``

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type>WSTRING(255)</Type><BitSize>4096</BitSize></Parameter><Parameter><Name>minLength</Name><Comment><![CDATA[ lower limit of the string length ]]></Comment><Type>USINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>maxLength</Name><Comment><![CDATA[ upper limit of the string length ]]></Comment><Type>USINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>stringLengthUnit</Name><Comment><![CDATA[ string length units of measurement ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">UnicodeStringLengthUnit</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>lengthIsExact</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` length
is equal to ``expectedLength``

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type>WSTRING(255)</Type><BitSize>4096</BitSize></Parameter><Parameter><Name>expectedLength</Name><Comment><![CDATA[ expected length of ``stringToCheck`` ]]></Comment><Type>USINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>stringLengthUnit</Name><Comment><![CDATA[ string length units of measurement ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">UnicodeStringLengthUnit</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>lengthIsMax</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` length
is equal or less than to ``maxLength``

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type>WSTRING(255)</Type><BitSize>4096</BitSize></Parameter><Parameter><Name>maxLength</Name><Comment><![CDATA[ upper limit of the length of ``stringToCheck`` ]]></Comment><Type>USINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>stringLengthUnit</Name><Comment><![CDATA[ string length units of measurement ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">UnicodeStringLengthUnit</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>lengthIsMin</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` length
is equal or grater than to ``minLength``

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type>WSTRING(255)</Type><BitSize>4096</BitSize></Parameter><Parameter><Name>minLength</Name><Comment><![CDATA[ lower limit of the length of ``stringToCheck`` ]]></Comment><Type>USINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>stringLengthUnit</Name><Comment><![CDATA[ string length units of measurement ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">UnicodeStringLengthUnit</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>startsWith</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` starts with ``start``

.. attention:: 
	start of the string is **ALWAYS** the left side of the string 
	even for writings which written from right to left like Hebrew or Arabic

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type>WSTRING(255)</Type><BitSize>4096</BitSize></Parameter><Parameter><Name>start</Name><Comment><![CDATA[ expected start of ``stringToCheck`` ]]></Comment><Type>WSTRING(255)</Type><BitSize>4096</BitSize></Parameter><Parameter><Name>ignoreCases</Name><Comment><![CDATA[ ``TRUE`` means ignore cases; ``FALSE`` means cases must be equal too ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>trim</Name><Comment><![CDATA[ ``TRUE`` means truncation of spaces on the left side of ``stringToCheck``]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>normalizeStrings</Name><Comment><![CDATA[normalize both strings for check]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">IUtf8StringAssertions</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>contains</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the string ``stringToCheck`` contains the search string ``searchString``.
Processed strings must be in UTF-8 encoding

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IUtf8StringAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize><Properties><Property><Name>TcEncoding</Name><Value>UTF-8</Value></Property></Properties></Parameter><Parameter><Name>searchString</Name><Comment><![CDATA[ string must be found in ``stringToCheck`` ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize><Properties><Property><Name>TcEncoding</Name><Value>UTF-8</Value></Property></Properties></Parameter><Parameter><Name>ignoreCases</Name><Comment><![CDATA[ ``TRUE`` means ignore cases; ``FALSE`` means that cases must be equal too ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>normalizeStrings</Name><Comment><![CDATA[normalize both strings for check]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter></Method><Method><Name>containsNo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` doesn't contain the search string ``searchString``.
Processed strings must be in UTF-8 encoding

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IUtf8StringAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize><Properties><Property><Name>TcEncoding</Name><Value>UTF-8</Value></Property></Properties></Parameter><Parameter><Name>searchString</Name><Comment><![CDATA[ string that must not be found in ``stringToCheck`` ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize><Properties><Property><Name>TcEncoding</Name><Value>UTF-8</Value></Property></Properties></Parameter><Parameter><Name>ignoreCases</Name><Comment><![CDATA[ ``TRUE`` means ignore cases; ``FALSE`` means that cases must be equal too ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>normalizeStrings</Name><Comment><![CDATA[normalize both strings for check]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter></Method><Method><Name>endsWith</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` ends with the string ``end``.
Processed strings must be in UTF-8 encoding

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IUtf8StringAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize><Properties><Property><Name>TcEncoding</Name><Value>UTF-8</Value></Property></Properties></Parameter><Parameter><Name>end</Name><Comment><![CDATA[ expected end of ``stringToCheck`` ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize><Properties><Property><Name>TcEncoding</Name><Value>UTF-8</Value></Property></Properties></Parameter><Parameter><Name>ignoreCases</Name><Comment><![CDATA[ ``TRUE`` means ignore cases; ``FALSE`` means that cases must be equal too ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>trimRight</Name><Comment><![CDATA[ ``TRUE`` means truncation of spaces on the right side of ``stringToCheck``]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>normalizeStrings</Name><Comment><![CDATA[normalize both strings for check]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter></Method><Method><Name>isEmpty</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` is empty.
Processed strings must be in UTF-8 encoding

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IUtf8StringAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize><Properties><Property><Name>TcEncoding</Name><Value>UTF-8</Value></Property></Properties></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>isEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` is equal to ``expected``.
Processed strings must be in UTF-8 encoding

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IUtf8StringAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize><Properties><Property><Name>TcEncoding</Name><Value>UTF-8</Value></Property></Properties></Parameter><Parameter><Name>expected</Name><Comment><![CDATA[ ``stringToCheck`` must be equal to expected ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize><Properties><Property><Name>TcEncoding</Name><Value>UTF-8</Value></Property></Properties></Parameter><Parameter><Name>ignoreCases</Name><Comment><![CDATA[ ``TRUE`` means ignore cases; ``FALSE`` means that cases must be equal too ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>normalizeStrings</Name><Comment><![CDATA[normalize both strings for check]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter></Method><Method><Name>isNotEmpty</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` is not empty.
Processed strings must be in UTF-8 encoding

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IUtf8StringAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize><Properties><Property><Name>TcEncoding</Name><Value>UTF-8</Value></Property></Properties></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>isNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` is not equal to ``unexpected``.
Processed strings must be in UTF-8 encoding

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IUtf8StringAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize><Properties><Property><Name>TcEncoding</Name><Value>UTF-8</Value></Property></Properties></Parameter><Parameter><Name>unexpected</Name><Comment><![CDATA[ ``stringToCheck`` must be not equal to expected ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize><Properties><Property><Name>TcEncoding</Name><Value>UTF-8</Value></Property></Properties></Parameter><Parameter><Name>ignoreCases</Name><Comment><![CDATA[ ``TRUE`` means ignore cases; ``FALSE`` means that cases must be equal too ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>normalizeStrings</Name><Comment><![CDATA[normalize both strings for check]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter></Method><Method><Name>lengthIsBetween</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` length is between ``minLength`` and ``maxLength``.
Processed strings must be in UTF-8 encoding

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IUtf8StringAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize><Properties><Property><Name>TcEncoding</Name><Value>UTF-8</Value></Property></Properties></Parameter><Parameter><Name>minLength</Name><Comment><![CDATA[ lower limit of the string length ]]></Comment><Type>USINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>maxLength</Name><Comment><![CDATA[ upper limit of the string length ]]></Comment><Type>USINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>stringLengthUnit</Name><Comment><![CDATA[ string length units of measurement ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">UnicodeStringLengthUnit</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>lengthIsExact</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` length is equal to ``expectedLength``.
Processed strings must be in UTF-8 encoding

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IUtf8StringAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize><Properties><Property><Name>TcEncoding</Name><Value>UTF-8</Value></Property></Properties></Parameter><Parameter><Name>expectedLength</Name><Comment><![CDATA[ expected length of ``stringToCheck`` ]]></Comment><Type>USINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>stringLengthUnit</Name><Comment><![CDATA[ string length units of measurement ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">UnicodeStringLengthUnit</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>lengthIsMax</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` length is equal or less than to ``maxLength``.
Processed strings must be in UTF-8 encoding

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IUtf8StringAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize><Properties><Property><Name>TcEncoding</Name><Value>UTF-8</Value></Property></Properties></Parameter><Parameter><Name>maxLength</Name><Comment><![CDATA[ upper limit of the length of ``stringToCheck`` ]]></Comment><Type>USINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>stringLengthUnit</Name><Comment><![CDATA[ string length units of measurement ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">UnicodeStringLengthUnit</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>lengthIsMin</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` length is equal or grater than to ``minLength``.
Processed strings must be in UTF-8 encoding

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IUtf8StringAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize><Properties><Property><Name>TcEncoding</Name><Value>UTF-8</Value></Property></Properties></Parameter><Parameter><Name>minLength</Name><Comment><![CDATA[ lower limit of the length of ``stringToCheck`` ]]></Comment><Type>USINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>stringLengthUnit</Name><Comment><![CDATA[ string length units of measurement ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">UnicodeStringLengthUnit</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>startsWith</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` starts with string ``start``.
Processed strings must be in UTF-8 encoding

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IUtf8StringAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize><Properties><Property><Name>TcEncoding</Name><Value>UTF-8</Value></Property></Properties></Parameter><Parameter><Name>start</Name><Comment><![CDATA[ expected start of ``stringToCheck`` ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize><Properties><Property><Name>TcEncoding</Name><Value>UTF-8</Value></Property></Properties></Parameter><Parameter><Name>ignoreCases</Name><Comment><![CDATA[ ``TRUE`` means ignore cases; ``FALSE`` means that cases must be equal too ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>trimLeft</Name><Comment><![CDATA[ ``TRUE`` means truncation of spaces on the left side of ``stringToCheck``]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>normalizeStrings</Name><Comment><![CDATA[normalize both strings for check]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_AoC.Tc2_Utilities">E_SBCSType</Name><Comment><![CDATA[ Windows SBCS (Single Byte Character Set) Code Pages ]]></Comment><BitSize>16</BitSize><BaseType>INT</BaseType><EnumInfo><Text>eSBCS_WesternEuropean</Text><Enum>1</Enum><Comment><![CDATA[ Windows 1252 (default) ]]></Comment></EnumInfo><EnumInfo><Text>eSBCS_CentralEuropean</Text><Enum>2</Enum><Comment><![CDATA[ Windows 1251 ]]></Comment></EnumInfo></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">IWindows125xStringAssertions</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>contains</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` contains the search string.
Processed strings must be in Windows-1252 or Windows-1251 encoding

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IWindows125xStringAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>searchString</Name><Comment><![CDATA[ string must be found in ``stringToCheck`` ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>ignoreCases</Name><Comment><![CDATA[ ``TRUE`` means ignore cases; ``FALSE`` means that cases must be equal too ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>sbcsType</Name><Comment><![CDATA[ used Single Byte Character Set (SBCS), is set in Tc2_Utilities.GLOBAL_SBCS_TABLE ]]></Comment><Type Namespace="CNM_AoC.Tc2_Utilities">E_SBCSType</Type><BitSize>16</BitSize></Parameter></Method><Method><Name>containsNo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` not contains the search string.
Processed strings must be in Windows-1252 or Windows-1251 encoding

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IWindows125xStringAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>searchString</Name><Comment><![CDATA[ string that must not be found in ``stringToCheck`` ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>ignoreCases</Name><Comment><![CDATA[ ``TRUE`` means ignore cases; ``FALSE`` means that cases must be equal too ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>sbcsType</Name><Comment><![CDATA[ used Single Byte Character Set (SBCS), is set in Tc2_Utilities.GLOBAL_SBCS_TABLE ]]></Comment><Type Namespace="CNM_AoC.Tc2_Utilities">E_SBCSType</Type><BitSize>16</BitSize></Parameter></Method><Method><Name>endsWith</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` ends with the string ``end``.
Processed strings must be in Windows-1252 or Windows-1251 encoding

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IWindows125xStringAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>end</Name><Comment><![CDATA[ expected end of ``stringToCheck`` ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>ignoreCases</Name><Comment><![CDATA[ ``TRUE`` means ignore cases; ``FALSE`` means that cases must be equal too ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>trim</Name><Comment><![CDATA[ ``TRUE`` means truncation of spaces on the right side of ``stringToCheck``]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>sbcsType</Name><Comment><![CDATA[ used Single Byte Character Set (SBCS), is set in Tc2_Utilities.GLOBAL_SBCS_TABLE ]]></Comment><Type Namespace="CNM_AoC.Tc2_Utilities">E_SBCSType</Type><BitSize>16</BitSize></Parameter></Method><Method><Name>isEmpty</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` is empty.
Processed strings must be in Windows-1252 or Windows-1251 encoding

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IWindows125xStringAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>isEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` is equal to ``expected``.
Processed strings must be in Windows-1252 or Windows-1251 encoding

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IWindows125xStringAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>expected</Name><Comment><![CDATA[ ``stringToCheck`` must be equal to expected ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>ignoreCases</Name><Comment><![CDATA[ ``TRUE`` means ignore cases; ``FALSE`` means that cases must be equal too ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>sbcsType</Name><Comment><![CDATA[ used Single Byte Character Set (SBCS), is set in Tc2_Utilities.GLOBAL_SBCS_TABLE ]]></Comment><Type Namespace="CNM_AoC.Tc2_Utilities">E_SBCSType</Type><BitSize>16</BitSize></Parameter></Method><Method><Name>isNotEmpty</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` is not empty.
Processed strings must be in Windows-1252 or Windows-1251 encoding

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IWindows125xStringAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>isNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` is not equal to ``unexpected``.
Processed strings must be in Windows-1252 or Windows-1251 encoding

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IWindows125xStringAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>unexpected</Name><Comment><![CDATA[ ``stringToCheck`` must be not equal to expected ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>ignoreCases</Name><Comment><![CDATA[ ``TRUE`` means ignore cases; ``FALSE`` means that cases must be equal too ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>sbcsType</Name><Comment><![CDATA[ used Single Byte Character Set (SBCS), is set in Tc2_Utilities.GLOBAL_SBCS_TABLE ]]></Comment><Type Namespace="CNM_AoC.Tc2_Utilities">E_SBCSType</Type><BitSize>16</BitSize></Parameter></Method><Method><Name>lengthIsBetween</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` length is between ``minLength`` and ``maxLength``.
Processed strings must be in Windows-1252 or Windows-1251 encoding

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IWindows125xStringAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>minLength</Name><Comment><![CDATA[ lower limit of the string length ]]></Comment><Type>USINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>maxLength</Name><Comment><![CDATA[ upper limit of the string length ]]></Comment><Type>USINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>lengthIsExact</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` length is equal to ``expectedLength``.
Processed strings must be in Windows-1252 or Windows-1251 encoding

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IWindows125xStringAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>expectedLength</Name><Comment><![CDATA[ expected length of ``stringToCheck`` ]]></Comment><Type>USINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>lengthIsMax</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` length is equal or less than to ``maxLength``.
Processed strings must be in Windows-1252 or Windows-1251 encoding

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IWindows125xStringAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>maxLength</Name><Comment><![CDATA[ upper limit of the length of ``stringToCheck`` ]]></Comment><Type>USINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>lengthIsMin</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` length is equal or grater than to ``minLength``.
Processed strings must be in Windows-1252 or Windows-1251 encoding

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IWindows125xStringAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>minLength</Name><Comment><![CDATA[ lower limit of the length of ``stringToCheck`` ]]></Comment><Type>USINT</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>startsWith</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current string ``stringToCheck`` starts with string ``start``.
Processed strings must be in Windows-1252 or Windows-1251 encoding

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IWindows125xStringAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>stringToCheck</Name><Comment><![CDATA[ current string to check ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>start</Name><Comment><![CDATA[ expected start of ``stringToCheck`` ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>ignoreCases</Name><Comment><![CDATA[ ``TRUE`` means ignore cases; ``FALSE`` means that cases must be equal too ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>trim</Name><Comment><![CDATA[ ``TRUE`` means truncation of spaces on the left side of ``stringToCheck``]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>sbcsType</Name><Comment><![CDATA[ used Single Byte Character Set (SBCS), is set in Tc2_Utilities.GLOBAL_SBCS_TABLE ]]></Comment><Type Namespace="CNM_AoC.Tc2_Utilities">E_SBCSType</Type><BitSize>16</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">IStringAssertions</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>__getunicode</Name><Comment><![CDATA[

short summary
=================
Returns an interface :ref:`IUnicodeStringAssertions` with assert statements,
for UTF-8 and UTF-16 strings with an undifined length.

.. attention:: 
	All strings are handled as null terminated byte/word streams.
	For UTF-8 is end of the string 16#00
	For UTF-16 is end of the string 16#00_00

.. attention:: 
	The interface :ref:`IUnicodeAssertions` uses ``ANY_STRING``, 
	for this it's not possible to use literals/constants,
	because for ``ANY`` types generates the compiler ``__SYSTEM.AnyType``
	and ``__SYSTEM.AnyType`` contains a pointer  

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IUnicodeStringAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getutf16</Name><Comment><![CDATA[

short summary
=================
Returns an interface :ref:`IUtf16StringAssertions` with assert statements
for UTF-16 strings until 255 ``WORD`` length (``WSTRING(Tc2_System.MAX_STRING_LENGTH)``)

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IUtf16StringAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getutf8</Name><Comment><![CDATA[

short summary
=================
Returns an interface :ref:`IUtf8StringAssertions` with assert statements
for UTF-8 strings up to 255 bytes length (``STRING(Tc2_System.MAX_STRING_LENGTH)``)

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IUtf8StringAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getwindows125x</Name><Comment><![CDATA[

short summary
=================
Returns an interface :ref:`IWindows125xStringAssertions` with assert statements for 8-bit 
windows-1252 and windows-1251 strings up to 255 characters length (``Tc2_System.T_MaxString``).
Use Tc2_Utilities.GLOBAL_SBCS_TABLE variable to select required encoding

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IWindows125xStringAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">I64BitTimeAssertions</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>timeHasExpired</Name><Comment><![CDATA[

short summary
=================
This assertion method checks whether time has elapsed since the timestamp time

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>timestamp</Name><Comment><![CDATA[ start time you get it with ``LTIME()`` ]]></Comment><Type>LTIME</Type><BitSize>64</BitSize></Parameter><Parameter><Name>expiringTime</Name><Comment><![CDATA[ timeout like ``LTIME#300ms`` ]]></Comment><Type>LTIME</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>timeHasNotExpired</Name><Comment><![CDATA[

short summary
=================
This assertion method checks that the time since the timestamp time has not yet elapsed

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>timestamp</Name><Comment><![CDATA[ start time you get it with ``LTIME()`` ]]></Comment><Type>LTIME</Type><BitSize>64</BitSize></Parameter><Parameter><Name>expiringTime</Name><Comment><![CDATA[ timeout like ``LTIME#300ms`` ]]></Comment><Type>LTIME</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LTIME</Type><BitSize>64</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected value to compare ]]></Comment><Type>LTIME</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsGreaterThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than the less value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LTIME</Type><BitSize>64</BitSize></Parameter><Parameter><Name>lessValue</Name><Comment><![CDATA[ less than lower limit ]]></Comment><Type>LTIME</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsInRangeOf</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is inside a limit

.. attention:: 
	limits are included: ``valueIsInRangeOf(lt#3ms,lt#3ms ,lt#3ms)`` is a true assertion

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>lowerLimit</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>LTIME</Type><BitSize>64</BitSize></Parameter><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LTIME</Type><BitSize>64</BitSize></Parameter><Parameter><Name>upperLimit</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>LTIME</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsLessThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than the greater value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LTIME</Type><BitSize>64</BitSize></Parameter><Parameter><Name>greaterValue</Name><Comment><![CDATA[ greater than upper limit ]]></Comment><Type>LTIME</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMax</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than or equal to the maximum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LTIME</Type><BitSize>64</BitSize></Parameter><Parameter><Name>maximumValue</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>LTIME</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMin</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than or equal to the minimum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LTIME</Type><BitSize>64</BitSize></Parameter><Parameter><Name>minimumValue</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>LTIME</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>LTIME</Type><BitSize>64</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected value to compare ]]></Comment><Type>LTIME</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">I32BitTimeAssertions</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>timeHasExpired</Name><Comment><![CDATA[

short summary
=================
This assertion method checks whether time has elapsed since the timestamp time

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>timestamp</Name><Comment><![CDATA[ start time you get it with ``TIME()`` ]]></Comment><Type>TIME</Type><BitSize>32</BitSize></Parameter><Parameter><Name>expiringTime</Name><Comment><![CDATA[ timeout like ``t#300ms`` ]]></Comment><Type>TIME</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>timeHasNotExpired</Name><Comment><![CDATA[

short summary
=================
This assertion method checks that the time since the timestamp time has not yet elapsed

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>timestamp</Name><Comment><![CDATA[ start time you get it with ``TIME()`` ]]></Comment><Type>TIME</Type><BitSize>32</BitSize></Parameter><Parameter><Name>expiringTime</Name><Comment><![CDATA[ timeout like ``t#300ms`` ]]></Comment><Type>TIME</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is equal to the expected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>TIME</Type><BitSize>32</BitSize></Parameter><Parameter><Name>expectedValue</Name><Comment><![CDATA[ expected value to compare ]]></Comment><Type>TIME</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsGreaterThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than the less value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>TIME</Type><BitSize>32</BitSize></Parameter><Parameter><Name>lessValue</Name><Comment><![CDATA[ less than lower limit ]]></Comment><Type>TIME</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsInRangeOf</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is inside a limit

.. attention:: 
	limits are included: ``valueIsInRangeOf(t#3ms,t#3ms ,t#3ms)`` is a true assertion

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>lowerLimit</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>TIME</Type><BitSize>32</BitSize></Parameter><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>TIME</Type><BitSize>32</BitSize></Parameter><Parameter><Name>upperLimit</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>TIME</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsLessThan</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than the greater value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>TIME</Type><BitSize>32</BitSize></Parameter><Parameter><Name>greaterValue</Name><Comment><![CDATA[ greater than upper limit ]]></Comment><Type>TIME</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMax</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is less than or equal to the maximum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>TIME</Type><BitSize>32</BitSize></Parameter><Parameter><Name>maximumValue</Name><Comment><![CDATA[ upper limit for the current value ]]></Comment><Type>TIME</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsMin</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is greater than or equal to the minimum value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>TIME</Type><BitSize>32</BitSize></Parameter><Parameter><Name>minimumValue</Name><Comment><![CDATA[ lower limit for the current value ]]></Comment><Type>TIME</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>valueIsNotEqualTo</Name><Comment><![CDATA[

short summary
=================
This assertion method checks if the current value is not equal to the unexpected value

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>currentValue</Name><Comment><![CDATA[ current value to check ]]></Comment><Type>TIME</Type><BitSize>32</BitSize></Parameter><Parameter><Name>unexpectedValue</Name><Comment><![CDATA[ unexpected value to compare ]]></Comment><Type>TIME</Type><BitSize>32</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ message if the assertion is false ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">ITimeAssertions</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>__getlong</Name><Comment><![CDATA[

short summary
=================
Returns an interface with assert statements for 64 bit times 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">I64BitTimeAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getsimple</Name><Comment><![CDATA[

short summary
=================
Returns an interface with assert statements for 32 bit times 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">I32BitTimeAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">IAssertions</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>__getbinary</Name><Comment><![CDATA[

short summary
=================
Returns the interface :ref:`IBinaryAssertions`
with assert statements for binary data 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IBinaryAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getbitNumber</Name><Comment><![CDATA[

short summary
=================
Returns the interface :ref:`IBitNumberAssertions`
with assert statements for bit numbers

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IBitNumberAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getboolean</Name><Comment><![CDATA[

short summary
=================
Returns the interface :ref:`IBooleanAssertion`
with assert statements for booleans

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IBooleanAssertion</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getdateAndTime</Name><Comment><![CDATA[

short summary
=================
Returns the interface :ref:`IDateAndTimeAssertions`
with assert statements for date and time data types

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IDateAndTimeAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getfloat</Name><Comment><![CDATA[

short summary
=================
Returns the interface :ref:`IFloatAssertions`
with assert statements for floatings

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IFloatAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getinteger</Name><Comment><![CDATA[

short summary
=================
Returns the interface :ref:`IIntergerAssertions`
with assert statements for integers

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IIntergerAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getobject</Name><Comment><![CDATA[

short summary
=================
Returns the interface :ref:`IObjectAssertions`
with assert statements for ``CNM_AbstractObject.IObject``

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IObjectAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getpointers</Name><Comment><![CDATA[

short summary
=================
Returns the interface :ref:`IPointerAssertions`
with assert statements for pointers

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IPointerAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getstrings</Name><Comment><![CDATA[

short summary
=================
Returns the interface :ref:`IStringAssertions`
with assert statements for windows-1252 and UTF-16 strings

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IStringAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__gettimes</Name><Comment><![CDATA[

short summary
=================
Returns the interface :ref:`ITimeAssertions`
with assert statements for time data types

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">ITimeAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">IAssertor</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>__getassert</Name><Comment><![CDATA[

short summary
=================
Returns the interface :ref:`IAssertions`
to get access to the assert statements

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

methods
==================

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>TcPlcInterfaceId</Name><Value>1699</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">IAssertCallBack</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_AbstractObject">IObject</ExtendsType><Method><Name>assertionWasWrong</Name><Comment><![CDATA[

short summary
=================
This method is called if an assertion was ``FALSE``

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>caller</Name><Comment><![CDATA[ caller object of the method ]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ alarm message ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>additionalText</Name><Comment><![CDATA[ debugging information ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize></Parameter></Method><Properties><Property><Name>TcPlcInterfaceId</Name><Value>2298</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_AssertionInterfaceLib">AbstractAssertor</Name><Comment><![CDATA[

short summary
=================
| This abstract class provides assert statements in a `fluent interface`_ style for the most common data types. 
| It implements the interfaces :ref:`IAssertor` and :ref:`IAssertCallBack`
| If you need assertion statements you've to extend this class and you've to overwrite the methods
| :ref:`AbstractAssertor.assertionWasWrong`
| :ref:`AbstractAssertor.className`

.. _`fluent interface`: https://en.wikipedia.org/wiki/Fluent_interface

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

methods and properties
=======================

]]></Comment><BitSize>138560</BitSize><ExtendsType Namespace="CNM_AbstractObject">Object</ExtendsType><Implements Namespace="CNM_AssertionInterfaceLib">IAssertor</Implements><Implements Namespace="CNM_AssertionInterfaceLib">IAssertCallBack</Implements><Method><Name>__getassert</Name><Comment><![CDATA[

short summary
=================
Returns the interface :ref:`IAssertions`
to get access to the assert statements

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

methods
==================

]]></Comment><ReturnType Namespace="CNM_AssertionInterfaceLib">IAssertions</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>assert</Name><Type Namespace="CNM_AssertionInterfaceLib">IAssertions</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getclassName</Name><Comment><![CDATA[

short summary
=================
This abstract property returns the class name of the concrete object, 
It's for debugging purpose

.. attention:: 
	For derivations: **It is necessary that this property is overridden by the concrete class**

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">ClassName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Local><Name>className</Name><Type Namespace="CNM_AbstractObject">ClassName</Type><BitSize>2048</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>assertionWasWrong</Name><Comment><![CDATA[

short summary
=================
This method is called if an assertion was ``FALSE``

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>caller</Name><Comment><![CDATA[ caller object of the method ]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ alarm message ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>additionalText</Name><Comment><![CDATA[ debugging information ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize></Parameter></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property><Property><Name>reflection</Name></Property></Properties></DataType><DataType><Name GUID="{A2D6ACE7-8C54-4AB6-8BF8-E2C54DC040A0}" TcBaseType="true" CName="TcEventArgumentType*">TcEventArgumentType</Name><BitSize>16</BitSize><BaseType GUID="{18071995-0000-0000-0000-000000000006}">INT</BaseType><EnumInfo><Text><![CDATA[Undefined]]></Text><Enum>0</Enum></EnumInfo><EnumInfo><Text><![CDATA[Boolean]]></Text><Enum>1</Enum></EnumInfo><EnumInfo><Text><![CDATA[Int8]]></Text><Enum>2</Enum></EnumInfo><EnumInfo><Text><![CDATA[Int16]]></Text><Enum>3</Enum></EnumInfo><EnumInfo><Text><![CDATA[Int32]]></Text><Enum>4</Enum></EnumInfo><EnumInfo><Text><![CDATA[Int64]]></Text><Enum>5</Enum></EnumInfo><EnumInfo><Text><![CDATA[UInt8]]></Text><Enum>6</Enum></EnumInfo><EnumInfo><Text><![CDATA[UInt16]]></Text><Enum>7</Enum></EnumInfo><EnumInfo><Text><![CDATA[UInt32]]></Text><Enum>8</Enum></EnumInfo><EnumInfo><Text><![CDATA[UInt64]]></Text><Enum>9</Enum></EnumInfo><EnumInfo><Text><![CDATA[Float]]></Text><Enum>10</Enum></EnumInfo><EnumInfo><Text><![CDATA[Double]]></Text><Enum>11</Enum></EnumInfo><EnumInfo><Text><![CDATA[CharType]]></Text><Enum>12</Enum></EnumInfo><EnumInfo><Text><![CDATA[WCharType]]></Text><Enum>13</Enum></EnumInfo><EnumInfo><Text><![CDATA[StringType]]></Text><Enum>14</Enum></EnumInfo><EnumInfo><Text><![CDATA[WStringType]]></Text><Enum>15</Enum></EnumInfo><EnumInfo><Text><![CDATA[EventReference]]></Text><Enum>16</Enum></EnumInfo><EnumInfo><Text><![CDATA[FormatString]]></Text><Enum>17</Enum></EnumInfo><EnumInfo><Text><![CDATA[ExternalTimestamp]]></Text><Enum>18</Enum></EnumInfo><EnumInfo><Text><![CDATA[Blob]]></Text><Enum>19</Enum></EnumInfo><EnumInfo><Text><![CDATA[AdsNotificationStream]]></Text><Enum>20</Enum></EnumInfo><EnumInfo><Text><![CDATA[UTF8EncodedString]]></Text><Enum>21</Enum></EnumInfo><Properties><Property><Name>plcAttribute_qualified_only</Name></Property><Property><Name>plcAttribute_strict</Name></Property></Properties><Hides><Hide GUID="{A1C88D80-AC7F-419E-838D-233C8A8C0184}" /><Hide GUID="{939C2FD3-7468-4E5B-AA5D-A64A143B36A8}" /><Hide GUID="{CBABCE69-289D-4490-A8FE-F81B1741D1A1}" /></Hides></DataType><DataType><Name GUID="{BFC9A87A-F6DE-499A-AC45-F3B1A59315F9}" TcBaseType="true" CName="ITcArguments*">ITcArguments</Name><BitSize X64="64">32</BitSize><BaseType GUID="{00000001-0000-0000-E000-000000000064}">ITcUnknown</BaseType><Method><Name>Count</Name><ReturnType GUID="{18071995-0000-0000-0000-000000000019}">HRESULT</ReturnType><ReturnBitSize>32</ReturnBitSize><Parameter><Name>nCount</Name><Type GUID="{18071995-0000-0000-0000-000000000008}" ReferenceTo="true">UDINT</Type><BitSize X64="64">32</BitSize></Parameter></Method><Method><Name>AddArgument</Name><ReturnType GUID="{18071995-0000-0000-0000-000000000019}">HRESULT</ReturnType><ReturnBitSize>32</ReturnBitSize><Parameter><Name>eType</Name><Type GUID="{A2D6ACE7-8C54-4AB6-8BF8-E2C54DC040A0}">TcEventArgumentType</Type><BitSize>16</BitSize></Parameter><Parameter><Name>pData</Name><Type GUID="{18071995-0000-0000-0000-000000000018}">PVOID</Type><BitSize X64="64">32</BitSize></Parameter><Parameter><Name>cbData</Name><Type GUID="{18071995-0000-0000-0000-000000000008}">UDINT</Type><BitSize>32</BitSize></Parameter></Method><Method><Name>Get</Name><ReturnType GUID="{18071995-0000-0000-0000-000000000019}">HRESULT</ReturnType><ReturnBitSize>32</ReturnBitSize><Parameter><Name>nIndex</Name><Type GUID="{18071995-0000-0000-0000-000000000008}">UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>eType</Name><Type GUID="{A2D6ACE7-8C54-4AB6-8BF8-E2C54DC040A0}" ReferenceTo="true">TcEventArgumentType</Type><BitSize X64="64">32</BitSize></Parameter><Parameter><Name>ppData</Name><Type GUID="{18071995-0000-0000-0000-000000000018}" PointerTo="1" Const="1">PVOID</Type><BitSize X64="64">32</BitSize></Parameter></Method><Method><Name>Clear</Name><ReturnType GUID="{18071995-0000-0000-0000-000000000019}">HRESULT</ReturnType><ReturnBitSize>32</ReturnBitSize></Method><Method><Name>GetArgumentTypes</Name><ReturnType GUID="{18071995-0000-0000-0000-000000000019}">HRESULT</ReturnType><ReturnBitSize>32</ReturnBitSize><Parameter><Name>pArgumentTypes</Name><Type GUID="{A2D6ACE7-8C54-4AB6-8BF8-E2C54DC040A0}" PointerTo="1">TcEventArgumentType</Type><BitSize X64="64">32</BitSize></Parameter></Method><Method><Name>GetDataSize</Name><ReturnType GUID="{18071995-0000-0000-0000-000000000019}">HRESULT</ReturnType><ReturnBitSize>32</ReturnBitSize><Parameter><Name>cbData</Name><Type GUID="{18071995-0000-0000-0000-000000000008}" ReferenceTo="true">UDINT</Type><BitSize X64="64">32</BitSize></Parameter></Method><Method><Name>GetData</Name><ReturnType GUID="{18071995-0000-0000-0000-000000000019}">HRESULT</ReturnType><ReturnBitSize>32</ReturnBitSize><Parameter><Name>pData</Name><Type GUID="{18071995-0000-0000-0000-000000000001}" PointerTo="1">BYTE</Type><BitSize X64="64">32</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_AoC.CNM_CycleManager.CNM_CycleManagerInterfaces.CNM_MessageInterfaces.Tc3_EventLogger">I_TcArguments</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>__getipData</Name><ReturnType GUID="{BFC9A87A-F6DE-499A-AC45-F3B1A59315F9}">ITcArguments</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property><Property><Name>conditionalshow</Name></Property></Properties></Method><Method><Name>__getnCount</Name><ReturnType>UDINT</ReturnType><ReturnBitSize>32</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>AddBlob</Name><ReturnType Namespace="CNM_AoC.CNM_CycleManager.CNM_CycleManagerInterfaces.CNM_MessageInterfaces.Tc3_EventLogger">I_TcArguments</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>pData</Name><Type GUID="{18071995-0000-0000-0000-000000000018}">PVOID</Type><BitSize>64</BitSize></Parameter><Parameter><Name>cbData</Name><Type>UINT</Type><BitSize>16</BitSize></Parameter></Method><Method><Name>AddBool</Name><ReturnType Namespace="CNM_AoC.CNM_CycleManager.CNM_CycleManagerInterfaces.CNM_MessageInterfaces.Tc3_EventLogger">I_TcArguments</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>value</Name><Type>BOOL</Type><BitSize>8</BitSize></Parameter></Method><Method><Name>AddByte</Name><ReturnType Namespace="CNM_AoC.CNM_CycleManager.CNM_CycleManagerInterfaces.CNM_MessageInterfaces.Tc3_EventLogger">I_TcArguments</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>value</Name><Type>BYTE</Type><BitSize>8</BitSize></Parameter></Method><Method><Name>AddDInt</Name><ReturnType Namespace="CNM_AoC.CNM_CycleManager.CNM_CycleManagerInterfaces.CNM_MessageInterfaces.Tc3_EventLogger">I_TcArguments</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>value</Name><Type>DINT</Type><BitSize>32</BitSize></Parameter></Method><Method><Name>AddDWord</Name><ReturnType Namespace="CNM_AoC.CNM_CycleManager.CNM_CycleManagerInterfaces.CNM_MessageInterfaces.Tc3_EventLogger">I_TcArguments</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>value</Name><Type>DWORD</Type><BitSize>32</BitSize></Parameter></Method><Method><Name>AddEventReferenceEx</Name><ReturnType Namespace="CNM_AoC.CNM_CycleManager.CNM_CycleManagerInterfaces.CNM_MessageInterfaces.Tc3_EventLogger">I_TcArguments</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>stEventEntry</Name><Type GUID="{6925E8D1-EDCA-47DD-B80C-A6329A85D63D}">TcEventEntry</Type><BitSize>192</BitSize></Parameter></Method><Method><Name>AddEventReferenceId</Name><ReturnType Namespace="CNM_AoC.CNM_CycleManager.CNM_CycleManagerInterfaces.CNM_MessageInterfaces.Tc3_EventLogger">I_TcArguments</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>nEventId</Name><Type>UDINT</Type><BitSize>32</BitSize></Parameter></Method><Method><Name>AddEventReferenceIdGuid</Name><ReturnType Namespace="CNM_AoC.CNM_CycleManager.CNM_CycleManagerInterfaces.CNM_MessageInterfaces.Tc3_EventLogger">I_TcArguments</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>nEventId</Name><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>EventClass</Name><Type GUID="{18071995-0000-0000-0000-000000000021}">GUID</Type><BitSize>128</BitSize></Parameter></Method><Method><Name>AddInt</Name><ReturnType Namespace="CNM_AoC.CNM_CycleManager.CNM_CycleManagerInterfaces.CNM_MessageInterfaces.Tc3_EventLogger">I_TcArguments</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>value</Name><Type>INT</Type><BitSize>16</BitSize></Parameter></Method><Method><Name>AddLInt</Name><ReturnType Namespace="CNM_AoC.CNM_CycleManager.CNM_CycleManagerInterfaces.CNM_MessageInterfaces.Tc3_EventLogger">I_TcArguments</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>value</Name><Type>LINT</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>AddLReal</Name><ReturnType Namespace="CNM_AoC.CNM_CycleManager.CNM_CycleManagerInterfaces.CNM_MessageInterfaces.Tc3_EventLogger">I_TcArguments</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>value</Name><Type>LREAL</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>AddReal</Name><ReturnType Namespace="CNM_AoC.CNM_CycleManager.CNM_CycleManagerInterfaces.CNM_MessageInterfaces.Tc3_EventLogger">I_TcArguments</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>value</Name><Type>REAL</Type><BitSize>32</BitSize></Parameter></Method><Method><Name>AddSInt</Name><ReturnType Namespace="CNM_AoC.CNM_CycleManager.CNM_CycleManagerInterfaces.CNM_MessageInterfaces.Tc3_EventLogger">I_TcArguments</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>value</Name><Type>SINT</Type><BitSize>8</BitSize></Parameter></Method><Method><Name>AddString</Name><ReturnType Namespace="CNM_AoC.CNM_CycleManager.CNM_CycleManagerInterfaces.CNM_MessageInterfaces.Tc3_EventLogger">I_TcArguments</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>value</Name><Type ReferenceTo="true">STRING(80)</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter></Method><Method><Name>AddStringByValue</Name><ReturnType Namespace="CNM_AoC.CNM_CycleManager.CNM_CycleManagerInterfaces.CNM_MessageInterfaces.Tc3_EventLogger">I_TcArguments</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>value</Name><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>AddUDInt</Name><ReturnType Namespace="CNM_AoC.CNM_CycleManager.CNM_CycleManagerInterfaces.CNM_MessageInterfaces.Tc3_EventLogger">I_TcArguments</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>value</Name><Type>UDINT</Type><BitSize>32</BitSize></Parameter></Method><Method><Name>AddUInt</Name><ReturnType Namespace="CNM_AoC.CNM_CycleManager.CNM_CycleManagerInterfaces.CNM_MessageInterfaces.Tc3_EventLogger">I_TcArguments</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>value</Name><Type>UINT</Type><BitSize>16</BitSize></Parameter></Method><Method><Name>AddULInt</Name><ReturnType Namespace="CNM_AoC.CNM_CycleManager.CNM_CycleManagerInterfaces.CNM_MessageInterfaces.Tc3_EventLogger">I_TcArguments</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>value</Name><Type>ULINT</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>AddUSInt</Name><ReturnType Namespace="CNM_AoC.CNM_CycleManager.CNM_CycleManagerInterfaces.CNM_MessageInterfaces.Tc3_EventLogger">I_TcArguments</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>value</Name><Type>USINT</Type><BitSize>8</BitSize></Parameter></Method><Method><Name>AddUtf8EncodedString</Name><ReturnType Namespace="CNM_AoC.CNM_CycleManager.CNM_CycleManagerInterfaces.CNM_MessageInterfaces.Tc3_EventLogger">I_TcArguments</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>value</Name><Type ReferenceTo="true">STRING(80)</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter></Method><Method><Name>AddWord</Name><ReturnType Namespace="CNM_AoC.CNM_CycleManager.CNM_CycleManagerInterfaces.CNM_MessageInterfaces.Tc3_EventLogger">I_TcArguments</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>value</Name><Type>WORD</Type><BitSize>16</BitSize></Parameter></Method><Method><Name>AddWString</Name><ReturnType Namespace="CNM_AoC.CNM_CycleManager.CNM_CycleManagerInterfaces.CNM_MessageInterfaces.Tc3_EventLogger">I_TcArguments</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>value</Name><Type ReferenceTo="true">WSTRING(80)</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter></Method><Method><Name>AddWStringByValue</Name><ReturnType Namespace="CNM_AoC.CNM_CycleManager.CNM_CycleManagerInterfaces.CNM_MessageInterfaces.Tc3_EventLogger">I_TcArguments</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>value</Name><Type>WSTRING(255)</Type><BitSize>4096</BitSize></Parameter></Method><Method><Name>Clear</Name><ReturnType Namespace="CNM_AoC.CNM_CycleManager.CNM_CycleManagerInterfaces.CNM_MessageInterfaces.Tc3_EventLogger">I_TcArguments</ReturnType><ReturnBitSize>64</ReturnBitSize></Method></DataType><DataType><Name Namespace="CNM_AoC.CNM_CycleManager.CNM_MessageInterfaces">DialogState</Name><Comment><![CDATA[

short summary
=================
``DialogState`` is an enumeration to express the state of a popup dialog.
For details check the state diagram below.

..diagram::

                                                                      throw
                                        ┌──────────────────────────────────────────────────────────────────┐
		                                /                                                                  /
┌───────────────┐               ┌───────▼───────┐               ┌───────────────┐                ┌────────┴──────┐
/			   /	  throw     /               / ui-response   /               /   user input   /              /
/	 CLOSED    ├────────────────►	 QUEUED    ├────────────────►	 VISIBLE    ├────────────────►	 FINISHED   /
/              /                /              /                /               /                /              /
└──────▲───────┘                └───────┬──────┘                └───────┬──────┘                └───────┬──────┘         
       /              clear             /                               /                               /
      └────────────────────────────────┴───────────────────────────────┴───────────────────────────────┘
	

Type of the enumartion is ``DINT``

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

enumeration values
======================

]]></Comment><BitSize>32</BitSize><BaseType>DINT</BaseType><EnumInfo><Text>CLOSED</Text><Enum>0</Enum><Comment><![CDATA[the dialog is not active]]></Comment></EnumInfo><EnumInfo><Text>QUEUED</Text><Enum>1</Enum><Comment><![CDATA[the dialog is waiting to be displayed]]></Comment></EnumInfo><EnumInfo><Text>VISIBLE</Text><Enum>2</Enum><Comment><![CDATA[the dialog is visable on the UI]]></Comment></EnumInfo><EnumInfo><Text>FINISHED</Text><Enum>3</Enum><Comment><![CDATA[the dialog was finished by the user with a selection]]></Comment></EnumInfo><Properties><Property><Name>qualified_only</Name></Property><Property><Name>strict</Name></Property><Property><Name>to_string</Name></Property><Property><Name>to_string_function</Name><Value>__TO_STRING__3572</Value></Property><Property><Name>to_wstring_function</Name><Value>__TO_WSTRING__3572</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_AoC.CNM_CycleManager.CNM_MessageInterfaces">IDialogDto</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_AoC.CNM_CycleManager.CNM_MessageInterfaces">IMessageDto</ExtendsType><Method><Name>__getresult</Name><Comment><![CDATA[

short summary
=================
This property contains the wrapped TcEventEntry of the DTO.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType>DINT</ReturnType><ReturnBitSize>32</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getstate</Name><Comment><![CDATA[

short summary
=================
This property contains state of the Dialog window.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AoC.CNM_CycleManager.CNM_MessageInterfaces">DialogState</ReturnType><ReturnBitSize>32</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__gettemplate</Name><Comment><![CDATA[

short summary
=================
This property contains name of the template the UI should use when the dialog is opened.
Can be used in places where a generic popup is not sufficient.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType>STRING(255)</ReturnType><ReturnBitSize>2048</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method></DataType><DataType><Name Namespace="CNM_AoC.CNM_CycleManager.CNM_MessageInterfaces">DialogOption</Name><Comment><![CDATA[

short summary
=================
DialogOption is a data type for configuration of buttons in dialogs.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

type members
======================

]]></Comment><BitSize>4160</BitSize><SubItem><Name>text</Name><Type Namespace="Tc2_System">T_MaxString</Type><Comment><![CDATA[text to be shown]]></Comment><BitSize>2048</BitSize><BitOffs>0</BitOffs></SubItem><SubItem><Name>result</Name><Type>DINT</Type><Comment><![CDATA[the returned result value if this option was choosen]]></Comment><BitSize>32</BitSize><BitOffs>2048</BitOffs></SubItem><SubItem><Name>userlevel</Name><Type>DWORD</Type><Comment><![CDATA[a user level needed to select this option]]></Comment><BitSize>32</BitSize><BitOffs>2080</BitOffs></SubItem><SubItem><Name>additionalData</Name><Type Namespace="Tc2_System">T_MaxString</Type><Comment><![CDATA[any additional data needed for the template, e.g. an enabled flag]]></Comment><BitSize>2048</BitSize><BitOffs>2112</BitOffs></SubItem></DataType><DataType><Name Namespace="CNM_AoC.CNM_CycleManager.CNM_MessageInterfaces">IDialog</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_AoC.CNM_CycleManager.CNM_MessageInterfaces">IClearableMessage</ExtendsType><Method><Name>__getdialogDto</Name><Comment><![CDATA[

short summary
=================
This property contains the dialog DTO.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AoC.CNM_CycleManager.CNM_MessageInterfaces">IDialogDto</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>addOption</Name><Comment><![CDATA[

short summary
=================
This method appends the dialog with the given option.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_AoC.CNM_CycleManager.CNM_MessageInterfaces">IDialog</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>option</Name><Type Namespace="CNM_AoC.CNM_CycleManager.CNM_MessageInterfaces">DialogOption</Type><BitSize>4160</BitSize></Parameter></Method><Method><Name>clearOptions</Name><Comment><![CDATA[

short summary
=================
This method clears the options from the dialog.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_AoC.CNM_CycleManager.CNM_MessageInterfaces">IDialog</ReturnType><ReturnBitSize>64</ReturnBitSize></Method></DataType><DataType><Name Namespace="CNM_AoC.CNM_CycleManager.CNM_MessageInterfaces">IMessageVisitor</Name><BitSize>64</BitSize><ExtendsType GUID="{18071995-0000-0000-0000-000000000018}">PVOID</ExtendsType><Method><Name>visitAlarm</Name><Comment><![CDATA[

short summary
=================
This method gets called by any alarm with unknown severity if visited.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Parameter><Name>alarm</Name><Comment><![CDATA[the caller]]></Comment><Type Namespace="CNM_AoC.CNM_CycleManager.CNM_MessageInterfaces">IAlarm</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>visitDialog</Name><Comment><![CDATA[

short summary
=================
This method gets called by a dialog if visited.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Parameter><Name>dialog</Name><Comment><![CDATA[the caller]]></Comment><Type Namespace="CNM_AoC.CNM_CycleManager.CNM_MessageInterfaces">IDialog</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>visitError</Name><Comment><![CDATA[

short summary
=================
This method gets called by an error if visited.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Parameter><Name>error</Name><Comment><![CDATA[the caller]]></Comment><Type Namespace="CNM_AoC.CNM_CycleManager.CNM_MessageInterfaces">IAlarm</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>visitInfo</Name><Comment><![CDATA[

short summary
=================
This method gets called by an info if visited.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Parameter><Name>info</Name><Comment><![CDATA[the caller]]></Comment><Type Namespace="CNM_AoC.CNM_CycleManager.CNM_MessageInterfaces">IAlarm</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>visitMessage</Name><Comment><![CDATA[

short summary
=================
This method gets called by a message if visited.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Parameter><Name>message</Name><Comment><![CDATA[the caller]]></Comment><Type Namespace="CNM_AoC.CNM_CycleManager.CNM_MessageInterfaces">IMessage</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>visitWarning</Name><Comment><![CDATA[

short summary
=================
This method gets called by a warning if visited.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Parameter><Name>warning</Name><Comment><![CDATA[The caller]]></Comment><Type Namespace="CNM_AoC.CNM_CycleManager.CNM_MessageInterfaces">IAlarm</Type><BitSize>64</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_AoC.CNM_CycleManager.CNM_MessageInterfaces">IMessageDto</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_AbstractObject">IObject</ExtendsType><Method><Name>__getevent</Name><Comment><![CDATA[

short summary
=================
This property contains the wrapped TcEventEntry of the DTO.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType GUID="{6925E8D1-EDCA-47DD-B80C-A6329A85D63D}">TcEventEntry</ReturnType><ReturnBitSize>192</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getid</Name><Comment><![CDATA[

short summary
=================
This property returns the ID of the event.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType>DINT</ReturnType><ReturnBitSize>32</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getsource</Name><Comment><![CDATA[

short summary
=================
This property returns the source of the event.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="Tc2_System">T_MaxString</ReturnType><ReturnBitSize>2048</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>accept</Name><Comment><![CDATA[

short summary
=================
This method allows an IMessageVisitor to visit this message as in the Visitor Pattern.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Parameter><Name>visitor</Name><Comment><![CDATA[the visitor to be called by the message]]></Comment><Type Namespace="CNM_AoC.CNM_CycleManager.CNM_MessageInterfaces">IMessageVisitor</Type><BitSize>64</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_AoC.CNM_CycleManager.CNM_MessageInterfaces">IMessage</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_AbstractObject">IObject</ExtendsType><Method><Name>__getarguments</Name><Comment><![CDATA[

short summary
=================
This property returns the I_TcArguments interface which makes it possible to append Arguments to the message text. 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

example
=================
myError.arguments.addDINT(5);
//this will add a 5 as the (first) argument to an error.
//e.g. with the text: "An error occured with number {0}" will be shown as: "An error occured with number 5"

]]></Comment><ReturnType Namespace="CNM_AoC.CNM_CycleManager.CNM_CycleManagerInterfaces.CNM_MessageInterfaces.Tc3_EventLogger">I_TcArguments</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getdto</Name><Comment><![CDATA[

short summary
=================
This property returns the dto of the message containing the data.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AoC.CNM_CycleManager.CNM_MessageInterfaces">IMessageDto</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>throw</Name><Comment><![CDATA[

short summary
=================
This method throws/sends the message and sends it to the associated message service to be handled.
Should only be called once per message (will possilby send multiple if called more then once).

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment></Method><Properties><Property><Name>TcPlcInterfaceId</Name><Value>3494</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_AoC.CNM_CycleManager.CNM_MessageInterfaces">IClearableMessage</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_AoC.CNM_CycleManager.CNM_MessageInterfaces">IMessage</ExtendsType><Method><Name>__getisPending</Name><Comment><![CDATA[

short summary
=================
This property contains the information of wether the message was already thown and is active (TRUE), 
or if it was not thrown yet, cleared or acknowlegded.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>clear</Name><Comment><![CDATA[

short summary
=================
This method clears the message and resets it to a predefined state.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment></Method><Properties><Property><Name>TcPlcInterfaceId</Name><Value>3489</Value></Property></Properties></DataType><DataType><Name GUID="{944726B1-A958-40A6-B97D-51A67664C20E}" TcBaseType="true" CName="TcEventConfirmationState*">TcEventConfirmationState</Name><BitSize>16</BitSize><BaseType GUID="{18071995-0000-0000-0000-000000000006}">INT</BaseType><EnumInfo><Text><![CDATA[NotSupported]]></Text><Enum>0</Enum></EnumInfo><EnumInfo><Text><![CDATA[NotRequired]]></Text><Enum>1</Enum></EnumInfo><EnumInfo><Text><![CDATA[WaitForConfirmation]]></Text><Enum>2</Enum></EnumInfo><EnumInfo><Text><![CDATA[Confirmed]]></Text><Enum>3</Enum></EnumInfo><EnumInfo><Text><![CDATA[Reset]]></Text><Enum>4</Enum></EnumInfo><Properties><Property><Name>plcAttribute_qualified_only</Name></Property><Property><Name>plcAttribute_strict</Name></Property></Properties><Hides><Hide GUID="{C9C91A7D-7028-4F64-9C9F-3A1B2B9EC19E}" /></Hides></DataType><DataType><Name Namespace="CNM_AoC.CNM_CycleManager.CNM_MessageInterfaces">AlarmStopCategory</Name><Comment><![CDATA[

short summary
=================
``AlarmStopCategory`` is an enumeration to express how the operation mode handler should react to the error.

Type of the enumartion is ``DINT``

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

enumeration values
======================

]]></Comment><BitSize>32</BitSize><BaseType>DINT</BaseType><EnumInfo><Text>DONT_STOP</Text><Enum>0</Enum><Comment><![CDATA[do not react to the error]]></Comment></EnumInfo><EnumInfo><Text>STOP_AT_END_OF_CYCLE</Text><Enum>1</Enum><Comment><![CDATA[trigger a stop at end of cycle]]></Comment></EnumInfo><EnumInfo><Text>STOP_IMMEDIATLY</Text><Enum>2</Enum><Comment><![CDATA[stop the machine immediatly]]></Comment></EnumInfo><EnumInfo><Text>DISABLE_MACHINE</Text><Enum>3</Enum><Comment><![CDATA[disable the machine]]></Comment></EnumInfo><Properties><Property><Name>qualified_only</Name></Property><Property><Name>to_string</Name></Property><Property><Name>to_string_function</Name><Value>__TO_STRING__3584</Value></Property><Property><Name>to_wstring_function</Name><Value>__TO_WSTRING__3584</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_AoC.CNM_CycleManager.CNM_MessageInterfaces">IAlarmDto</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_AoC.CNM_CycleManager.CNM_MessageInterfaces">IMessageDto</ExtendsType><Method><Name>__getstate</Name><Comment><![CDATA[

short summary
=================
This property contains the state of the alarm.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType GUID="{944726B1-A958-40A6-B97D-51A67664C20E}">TcEventConfirmationState</ReturnType><ReturnBitSize>16</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getstopCategory</Name><Comment><![CDATA[

short summary
=================
This property contains the stop catagory of the alarm.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AoC.CNM_CycleManager.CNM_MessageInterfaces">AlarmStopCategory</ReturnType><ReturnBitSize>32</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method></DataType><DataType><Name Namespace="CNM_AoC.CNM_CycleManager.CNM_MessageInterfaces">IAlarm</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_AoC.CNM_CycleManager.CNM_MessageInterfaces">IClearableMessage</ExtendsType><Method><Name>__getalarmDto</Name><Comment><![CDATA[

short summary
=================
This property contains the alarm DTO.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AoC.CNM_CycleManager.CNM_MessageInterfaces">IAlarmDto</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method></DataType><DataType><Name Namespace="CNM_CycleManagerInterfaces">ICycleError</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>__getisInErrorStep</Name><Comment><![CDATA[

short summary
=================
This property returns TRUE if the step was reached by evaluating an error.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>acknowledge</Name><Comment><![CDATA[

short summary
=================
This method acknowledges an error in the cycle manager 
and resets the current step to the step befor the error occured.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment></Method><Method><Name>handle</Name><Comment><![CDATA[

short summary
=================
This method throws the alarm in the first cycle and is BUSY until the alarm is cleared or acknowledged.
If the acknowledge flag is set, the cycle manager will automatically call the acknowledge method on success and return to the previous step.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Parameter><Name>alarm</Name><Comment><![CDATA[alarm to handle]]></Comment><Type Namespace="CNM_AoC.CNM_CycleManager.CNM_MessageInterfaces">IAlarm</Type><BitSize>64</BitSize></Parameter><Parameter><Name>acknowledge</Name><Comment><![CDATA[optional acknowledge flag to automatically trigger THIS^.acknowledge() once cleared, default is TRUE]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_CycleManagerInterfaces">ICycleSteps</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>__getcurrent</Name><Comment><![CDATA[

short summary
=================
This property returns the current step of the cycle manager.
Proposed use is as CASE control.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

example
=================
CASE cyclemanager.steps.current OF
DefaultSteps.STEP.IDLE:
	;
DefaultSteps.STEP.INIT:
	;
2:
	;
3:
	;
4:
	;
DefaultSteps.STEP.SUCCESS:
	;
DefaultSteps.STEP.ERROR:
	;
DefaultSteps.STEP.ABORT:
	;
ELSE ;
END_CASE

]]></Comment><ReturnType>DINT</ReturnType><ReturnBitSize>32</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getlast</Name><Comment><![CDATA[

short summary
=================
This property returns the last step of the cycle manager, useful for error steps.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

example
=================
TIMEOUT_STEP_FOR_RETRY:
	cM.steps.next := cM.steps.last-1;
	cM.waitFor(ACK);

]]></Comment><ReturnType>DINT</ReturnType><ReturnBitSize>32</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setnext</Name><Comment><![CDATA[

short summary
=================
This property sets the next step of the cycle manager.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

example
=================
MY_STEP:
	cyclemanager.steps.next := SUCCESS_STEP;
	cyclemanager.executeCommand(finalizeProcess);
	
]]></Comment><Parameter><Name>next</Name><Comment><![CDATA[

short summary
=================
This property sets the next step of the cycle manager.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

example
=================
MY_STEP:
	cyclemanager.steps.next := SUCCESS_STEP;
	cyclemanager.executeCommand(finalizeProcess);
	
]]></Comment><Type>DINT</Type><BitSize>32</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method></DataType><DataType><Name Namespace="CNM_CycleManagerInterfaces">ISingleAttempt</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_AbstractObject">IObject</ExtendsType><Method><Name>invoke</Name><Comment><![CDATA[

short summary
=================
Invokes the action associated with this interface.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize></Method></DataType><DataType><Name Namespace="CNM_CycleManagerInterfaces">ICommand</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_AbstractObject">IObject</ExtendsType><Method><Name>executeCommand</Name><Comment><![CDATA[

short summary
=================
Executes the action associated with this command.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the command]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_CycleManagerInterfaces">ISingleExecutionCycleManager</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_AbstractObject">IObject</ExtendsType><Method><Name>__geterrors</Name><Comment><![CDATA[

short summary
=================
This property returns an ``ICycleError`` interface fluently to provide error handling methods.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_CycleManagerInterfaces">ICycleError</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getexecuteStep</Name><Comment><![CDATA[

short summary
=================
This property returns the execute flag for the current step, 
which is FALSE in the first cycle of each step and TRUE after.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getstate</Name><Comment><![CDATA[

short summary
=================
This property returns the current state of the cycle manager according to its step.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getstep</Name><Comment><![CDATA[

short summary
=================
This property returns the current, next and last step of the cycle manager via fluent interface with the ``ICylceSteps`` interfaces

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_CycleManagerInterfaces">ICycleSteps</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>enter</Name><Comment><![CDATA[

short summary
=================
This method performs the given invoke only in the first cycle of the current step.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>invoke</Name><Comment><![CDATA[ command to execute ]]></Comment><Type Namespace="CNM_CycleManagerInterfaces">ISingleAttempt</Type><BitSize>64</BitSize></Parameter><Parameter><Name>errorStep</Name><Comment><![CDATA[ step to proceed with in case of error ]]></Comment><Type>DINT</Type><BitSize>32</BitSize></Parameter></Method><Method><Name>evaluate</Name><Comment><![CDATA[

short summary
=================
This method evaluates an execution state to calculate the next step.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>state</Name><Comment><![CDATA[ the state which is to be evaluated ]]></Comment><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize></Parameter><Parameter><Name>errorStep</Name><Comment><![CDATA[ step to proceed with in case of error ]]></Comment><Type>DINT</Type><BitSize>32</BitSize></Parameter></Method><Method><Name>executeCommand</Name><Comment><![CDATA[

short summary
=================
This method performs the given command and evaluates the return value.
The command will be called with execute := FALSE in the first cylce and with execute := TRUE in all following

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>command</Name><Comment><![CDATA[ command to execute ]]></Comment><Type Namespace="CNM_CycleManagerInterfaces">ICommand</Type><BitSize>64</BitSize></Parameter><Parameter><Name>errorStep</Name><Comment><![CDATA[ step to proceed with in case of error ]]></Comment><Type>DINT</Type><BitSize>32</BitSize></Parameter></Method><Method><Name>leave</Name><Comment><![CDATA[

short summary
=================
This method performs the given invoke only in the last cycle of the current step.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>invoke</Name><Comment><![CDATA[ command to execute ]]></Comment><Type Namespace="CNM_CycleManagerInterfaces">ISingleAttempt</Type><BitSize>64</BitSize></Parameter><Parameter><Name>errorStep</Name><Comment><![CDATA[ step to proceed with in case of error ]]></Comment><Type>DINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>forceOnError</Name><Comment><![CDATA[ whether the attempt should be called even if there was an error in the current step ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter></Method><Method><Name>proceed</Name><Comment><![CDATA[

short summary
=================
This method changes the current step in the cycle manager to the next in order (current + stepWidth) .
If any evaluate or other call is still busy it will ignore them and change to the next step.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment></Method><Method><Name>proceedWith</Name><Comment><![CDATA[

short summary
=================
This method changes the current step in the cycle manager to the given step.
If any evaluate or other call is still busy it will ignore them and move to the next step.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>step</Name><Comment><![CDATA[ step to move to ]]></Comment><Type>DINT</Type><BitSize>32</BitSize></Parameter></Method><Method><Name>waitFor</Name><Comment><![CDATA[

short summary
=================
This method waits for a boolean signal until the step can be changed. 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>value</Name><Comment><![CDATA[ the value to wait for ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter></Method><Properties><Property><Name>TcPlcInterfaceId</Name><Value>3465</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_CycleManagerInterfaces">StepStopRequestMode</Name><Comment><![CDATA[

short summary
=================
``StepStopRequestMode`` is an enumeration to control StopRequest behaviour in cycle managers.
Cycle managers should continue with SUCCESS after a stop request is acknowledged by the clyce manager.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

enumeration values
======================

]]></Comment><BitSize>32</BitSize><BaseType>DINT</BaseType><EnumInfo><Text>IGNORE</Text><Enum>0</Enum><Comment><![CDATA[ignore stop request]]></Comment></EnumInfo><EnumInfo><Text>AFTER_SUCCESS</Text><Enum>1</Enum><Comment><![CDATA[proceed with stop request after step finishes and would proceed]]></Comment></EnumInfo><EnumInfo><Text>AFTER_NOT_SUCCESS</Text><Enum>2</Enum><Comment><![CDATA[proceed with stop request if the step is still busy]]></Comment></EnumInfo><EnumInfo><Text>ALWAYS</Text><Enum>3</Enum><Comment><![CDATA[immediately proceed with stop request]]></Comment></EnumInfo><Properties><Property><Name>qualified_only</Name></Property><Property><Name>strict</Name></Property><Property><Name>to_string</Name></Property><Property><Name>to_string_function</Name><Value>__TO_STRING__3649</Value></Property><Property><Name>to_wstring_function</Name><Value>__TO_WSTRING__3649</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_CycleManagerInterfaces">ICycleManagerDefaultParameters</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>__setdefaultErrorStep</Name><Parameter><Name>defaultErrorStep</Name><Type>DINT</Type><BitSize>32</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setdefaultPauseEnabled</Name><Parameter><Name>defaultPauseEnabled</Name><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setdefaultSteppingEnabled</Name><Parameter><Name>defaultSteppingEnabled</Name><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setdefaultStepWidth</Name><Parameter><Name>defaultStepWidth</Name><Type>DINT</Type><BitSize>32</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setdefaultStopRequestMode</Name><Parameter><Name>defaultStopRequestMode</Name><Type Namespace="CNM_CycleManagerInterfaces">StepStopRequestMode</Type><BitSize>32</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setdefaultTimeout</Name><Parameter><Name>defaultTimeout</Name><Type>TIME</Type><BitSize>32</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setdefaultTimeoutStep</Name><Parameter><Name>defaultTimeoutStep</Name><Type>DINT</Type><BitSize>32</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>TcPlcInterfaceId</Name><Value>3639</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_CycleManagerInterfaces">ICycleManagerStepParameters</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>__setcurrentErrorStep</Name><Parameter><Name>currentErrorStep</Name><Type>DINT</Type><BitSize>32</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setcurrentPauseEnabled</Name><Parameter><Name>currentPauseEnabled</Name><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setcurrentSteppingEnabled</Name><Parameter><Name>currentSteppingEnabled</Name><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setcurrentStepWidth</Name><Parameter><Name>currentStepWidth</Name><Type>DINT</Type><BitSize>32</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setcurrentStopRequestMode</Name><Parameter><Name>currentStopRequestMode</Name><Type Namespace="CNM_CycleManagerInterfaces">StepStopRequestMode</Type><BitSize>32</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setcurrentTimeout</Name><Parameter><Name>currentTimeout</Name><Type>TIME</Type><BitSize>32</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setcurrentTimeoutStep</Name><Parameter><Name>currentTimeoutStep</Name><Type>DINT</Type><BitSize>32</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>TcPlcInterfaceId</Name><Value>3652</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_CycleManagerInterfaces">IPauseConfiguration</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>disable</Name><Comment><![CDATA[

short summary
=================
This method disables pausing, disabling the cycle manager transition to PAUSED even if pause signal is active.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment></Method><Method><Name>enable</Name><Comment><![CDATA[

short summary
=================
This method enables pausing, allowing the cycle manager to transition to PAUSED state if pause is active.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment></Method></DataType><DataType><Name Namespace="CNM_CycleManagerInterfaces">ISteppingConfiguration</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>disable</Name><Comment><![CDATA[

short summary
=================
This method disables step mode, allowing automatic proceeding without using the step signal.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment></Method><Method><Name>enable</Name><Comment><![CDATA[

short summary
=================
This method enables step mode, only allowing automatic proceeding if the step signal is active.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment></Method></DataType><DataType><Name Namespace="CNM_CycleManagerInterfaces">IStopRequestConfiguration</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>afterNotSuccess</Name><Comment><![CDATA[

short summary
=================
This method sets the stop request behaviour to ``StepStopRequestMode.AFTER_NOT_SUCCESS``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment></Method><Method><Name>afterSuccess</Name><Comment><![CDATA[

short summary
=================
This method sets the stop request behaviour to ``StepStopRequestMode.AFTER_SUCCESS``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment></Method><Method><Name>always</Name><Comment><![CDATA[

short summary
=================
This method sets the stop request behaviour to ``StepStopRequestMode.ALWAYS``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment></Method><Method><Name>ignore</Name><Comment><![CDATA[

short summary
=================
This method sets the stop request behaviour to ``StepStopRequestMode.IGNORE``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment></Method></DataType><DataType><Name Namespace="CNM_CycleManagerInterfaces">ICycleManagerParameters</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>__getpause</Name><Comment><![CDATA[

short summary
=================
This property allows enabling and disabling pausing.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_CycleManagerInterfaces">IPauseConfiguration</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getstepping</Name><Comment><![CDATA[

short summary
=================
This property allows enabling and disabling stepping mode.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_CycleManagerInterfaces">ISteppingConfiguration</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getstopRequest</Name><Comment><![CDATA[

short summary
=================
This property allows changing the stop request behaviour in case of active stop request.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_CycleManagerInterfaces">IStopRequestConfiguration</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__seterrorStep</Name><Comment><![CDATA[

short summary
=================
This property sets the next step in case of an error.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Parameter><Name>errorStep</Name><Comment><![CDATA[

short summary
=================
This property sets the next step in case of an error.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Type>DINT</Type><BitSize>32</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setstepWidth</Name><Comment><![CDATA[

short summary
=================
This property sets the step width when proceeding automatically.
This defaults to 1.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Parameter><Name>stepWidth</Name><Comment><![CDATA[

short summary
=================
This property sets the step width when proceeding automatically.
This defaults to 1.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Type>DINT</Type><BitSize>32</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__settimeout</Name><Comment><![CDATA[

short summary
=================
This property sets the maximum execution time for steps. 
The cycle manager will go into the timeoutStep after the time elapsed.
Set to T#0MS for no timeout (infinite), default.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Parameter><Name>timeout</Name><Comment><![CDATA[

short summary
=================
This property sets the maximum execution time for steps. 
The cycle manager will go into the timeoutStep after the time elapsed.
Set to T#0MS for no timeout (infinite), default.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Type>TIME</Type><BitSize>32</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__settimeoutStep</Name><Comment><![CDATA[

short summary
=================
This property sets the step that will be set if the current step reaches a timeout. 
If not changed will default to the current errorStep.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Parameter><Name>timeoutStep</Name><Comment><![CDATA[

short summary
=================
This property sets the step that will be set if the current step reaches a timeout. 
If not changed will default to the current errorStep.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Type>DINT</Type><BitSize>32</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>TcPlcInterfaceId</Name><Value>3605</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_CycleManagerInterfaces">ISequenceConfiguration</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_CycleManagerInterfaces">ICycleManagerParameters</ExtendsType></DataType><DataType><Name Namespace="CNM_CycleManagerInterfaces">IStepConfiguration</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_CycleManagerInterfaces">ICycleManagerParameters</ExtendsType></DataType><DataType><Name Namespace="CNM_CycleManagerInterfaces">ICycleManagerConfigurationScope</Name><BitSize>64</BitSize><ExtendsType>IQueryInterface</ExtendsType><Method><Name>__getsequence</Name><ReturnType Namespace="CNM_CycleManagerInterfaces">ISequenceConfiguration</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getstep</Name><ReturnType Namespace="CNM_CycleManagerInterfaces">IStepConfiguration</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method></DataType><DataType><Name Namespace="CNM_CycleManagerInterfaces">CycleManagerStepPausing</Name><Comment><![CDATA[

short summary
=================
A class to provide fluent access to the current step pause configuration of a cycle manager.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

methods and properties
=========================

]]></Comment><BitSize>192</BitSize><Implements Namespace="CNM_CycleManagerInterfaces">IPauseConfiguration</Implements><SubItem><Name>parameters</Name><Type Namespace="CNM_CycleManagerInterfaces">ICycleManagerStepParameters</Type><BitSize>64</BitSize><BitOffs>128</BitOffs></SubItem><Method><Name>enable</Name></Method><Method><Name>__setcycleManager</Name><Parameter><Name>cycleManager</Name><Type Namespace="CNM_CycleManagerInterfaces">ICycleManagerStepParameters</Type><BitSize>64</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>disable</Name></Method><Method><Name>__getcycleManager</Name><ReturnType Namespace="CNM_CycleManagerInterfaces">ICycleManagerStepParameters</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>cycleManager</Name><Type Namespace="CNM_CycleManagerInterfaces">ICycleManagerStepParameters</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_CycleManagerInterfaces">CycleManagerStepStepping</Name><Comment><![CDATA[

short summary
=================
A class to provide fluent access to the current step stepping configuration of a cycle manager.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

methods and properties
=========================

]]></Comment><BitSize>192</BitSize><Implements Namespace="CNM_CycleManagerInterfaces">ISteppingConfiguration</Implements><SubItem><Name>parameters</Name><Type Namespace="CNM_CycleManagerInterfaces">ICycleManagerStepParameters</Type><BitSize>64</BitSize><BitOffs>128</BitOffs></SubItem><Method><Name>enable</Name></Method><Method><Name>__setcycleManager</Name><Parameter><Name>cycleManager</Name><Type Namespace="CNM_CycleManagerInterfaces">ICycleManagerStepParameters</Type><BitSize>64</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>disable</Name></Method><Method><Name>__getcycleManager</Name><ReturnType Namespace="CNM_CycleManagerInterfaces">ICycleManagerStepParameters</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>cycleManager</Name><Type Namespace="CNM_CycleManagerInterfaces">ICycleManagerStepParameters</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_CycleManagerInterfaces">CycleManagerStepConfigurator</Name><Comment><![CDATA[

short summary
=================
A class to provide fluent access to the current step configuration of a cycle manager.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

methods and properties
=========================

]]></Comment><BitSize>640</BitSize><Implements Namespace="CNM_CycleManagerInterfaces">IStepConfiguration</Implements><Implements Namespace="CNM_CycleManagerInterfaces">IStopRequestConfiguration</Implements><SubItem><Name>parameters</Name><Type Namespace="CNM_CycleManagerInterfaces">ICycleManagerStepParameters</Type><BitSize>64</BitSize><BitOffs>192</BitOffs></SubItem><SubItem><Name>pauserator</Name><Type Namespace="CNM_CycleManagerInterfaces">CycleManagerStepPausing</Type><BitSize>192</BitSize><BitOffs>256</BitOffs></SubItem><SubItem><Name>steperator</Name><Type Namespace="CNM_CycleManagerInterfaces">CycleManagerStepStepping</Type><BitSize>192</BitSize><BitOffs>448</BitOffs></SubItem><Method><Name>__settimeout</Name><Comment><![CDATA[

short summary
=================
This property sets the maximum execution time for the current step. 
The cycle manager will go into the error step after the time elapsed.
Set to T#0MS for no timeout.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Parameter><Name>timeout</Name><Comment><![CDATA[

short summary
=================
This property sets the maximum execution time for the current step. 
The cycle manager will go into the error step after the time elapsed.
Set to T#0MS for no timeout.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Type>TIME</Type><BitSize>32</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getpause</Name><ReturnType Namespace="CNM_CycleManagerInterfaces">IPauseConfiguration</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>pause</Name><Type Namespace="CNM_CycleManagerInterfaces">IPauseConfiguration</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getstopRequest</Name><ReturnType Namespace="CNM_CycleManagerInterfaces">IStopRequestConfiguration</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>stopRequest</Name><Type Namespace="CNM_CycleManagerInterfaces">IStopRequestConfiguration</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getstepping</Name><ReturnType Namespace="CNM_CycleManagerInterfaces">ISteppingConfiguration</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>stepping</Name><Type Namespace="CNM_CycleManagerInterfaces">ISteppingConfiguration</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>ignore</Name></Method><Method><Name>__seterrorStep</Name><Comment><![CDATA[

short summary
=================
This property sets the next step in case of an error.
Is reset to the default ERROR_STEP when the current step changes.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Parameter><Name>errorStep</Name><Comment><![CDATA[

short summary
=================
This property sets the next step in case of an error.
Is reset to the default ERROR_STEP when the current step changes.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Type>DINT</Type><BitSize>32</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getcycleManager</Name><ReturnType Namespace="CNM_CycleManagerInterfaces">ICycleManagerStepParameters</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>cycleManager</Name><Type Namespace="CNM_CycleManagerInterfaces">ICycleManagerStepParameters</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>always</Name></Method><Method><Name>__setstepWidth</Name><Parameter><Name>stepWidth</Name><Type>DINT</Type><BitSize>32</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>afterSuccess</Name></Method><Method><Name>__setcycleManager</Name><Parameter><Name>cycleManager</Name><Type Namespace="CNM_CycleManagerInterfaces">ICycleManagerStepParameters</Type><BitSize>64</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>afterNotSuccess</Name><Comment><![CDATA[

short summary
=================
This method sets the stop request behaviour to ``StepStopRequestMode.AFTER_NOT_SUCCESS``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment></Method><Method><Name>__settimeoutStep</Name><Comment><![CDATA[

short summary
=================
This property sets the step that will be set if the current step reaches a timeout. 
Will by default be the error step and reset after the current step changes.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Parameter><Name>timeoutStep</Name><Comment><![CDATA[

short summary
=================
This property sets the step that will be set if the current step reaches a timeout. 
Will by default be the error step and reset after the current step changes.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Type>DINT</Type><BitSize>32</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_CycleManagerInterfaces">CycleManagerDefaultStepping</Name><Comment><![CDATA[

short summary
=================
A class to provide fluent access to the default stepping sequence configuration of a cycle manager.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

methods and properties
=========================

]]></Comment><BitSize>192</BitSize><Implements Namespace="CNM_CycleManagerInterfaces">ISteppingConfiguration</Implements><SubItem><Name>parameters</Name><Type Namespace="CNM_CycleManagerInterfaces">ICycleManagerDefaultParameters</Type><BitSize>64</BitSize><BitOffs>128</BitOffs></SubItem><Method><Name>enable</Name></Method><Method><Name>__setcycleManager</Name><Parameter><Name>cycleManager</Name><Type Namespace="CNM_CycleManagerInterfaces">ICycleManagerDefaultParameters</Type><BitSize>64</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>disable</Name></Method><Method><Name>__getcycleManager</Name><ReturnType Namespace="CNM_CycleManagerInterfaces">ICycleManagerDefaultParameters</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>cycleManager</Name><Type Namespace="CNM_CycleManagerInterfaces">ICycleManagerDefaultParameters</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_CycleManagerInterfaces">CycleManagerDefaultPausing</Name><Comment><![CDATA[

short summary
=================
A class to provide fluent access to the default sequence pausing configuration of a cycle manager.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

methods and properties
=========================

]]></Comment><BitSize>192</BitSize><Implements Namespace="CNM_CycleManagerInterfaces">IPauseConfiguration</Implements><SubItem><Name>parameters</Name><Type Namespace="CNM_CycleManagerInterfaces">ICycleManagerDefaultParameters</Type><BitSize>64</BitSize><BitOffs>128</BitOffs></SubItem><Method><Name>enable</Name></Method><Method><Name>__setcycleManager</Name><Parameter><Name>cycleManager</Name><Type Namespace="CNM_CycleManagerInterfaces">ICycleManagerDefaultParameters</Type><BitSize>64</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>disable</Name></Method><Method><Name>__getcycleManager</Name><ReturnType Namespace="CNM_CycleManagerInterfaces">ICycleManagerDefaultParameters</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>cycleManager</Name><Type Namespace="CNM_CycleManagerInterfaces">ICycleManagerDefaultParameters</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_CycleManagerInterfaces">CycleManagerDefaultConfigurator</Name><Comment><![CDATA[

short summary
=================
A class to provide fluent access to the default sequence configuration of a cycle manager.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

methods and properties
=========================

]]></Comment><BitSize>640</BitSize><Implements Namespace="CNM_CycleManagerInterfaces">ISequenceConfiguration</Implements><Implements Namespace="CNM_CycleManagerInterfaces">IStopRequestConfiguration</Implements><SubItem><Name>parameters</Name><Type Namespace="CNM_CycleManagerInterfaces">ICycleManagerDefaultParameters</Type><BitSize>64</BitSize><BitOffs>192</BitOffs></SubItem><SubItem><Name>steperator</Name><Type Namespace="CNM_CycleManagerInterfaces">CycleManagerDefaultStepping</Type><BitSize>192</BitSize><BitOffs>256</BitOffs></SubItem><SubItem><Name>pauserator</Name><Type Namespace="CNM_CycleManagerInterfaces">CycleManagerDefaultPausing</Type><BitSize>192</BitSize><BitOffs>448</BitOffs></SubItem><Method><Name>__settimeout</Name><Comment><![CDATA[

short summary
=================
This property sets the maximum execution time for the current step. 
The cycle manager will go into the error step after the time elapsed.
Set to T#0MS for no timeout.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Parameter><Name>timeout</Name><Comment><![CDATA[

short summary
=================
This property sets the maximum execution time for the current step. 
The cycle manager will go into the error step after the time elapsed.
Set to T#0MS for no timeout.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Type>TIME</Type><BitSize>32</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getpause</Name><ReturnType Namespace="CNM_CycleManagerInterfaces">IPauseConfiguration</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>pause</Name><Type Namespace="CNM_CycleManagerInterfaces">IPauseConfiguration</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getstopRequest</Name><ReturnType Namespace="CNM_CycleManagerInterfaces">IStopRequestConfiguration</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>stopRequest</Name><Type Namespace="CNM_CycleManagerInterfaces">IStopRequestConfiguration</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getstepping</Name><ReturnType Namespace="CNM_CycleManagerInterfaces">ISteppingConfiguration</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>stepping</Name><Type Namespace="CNM_CycleManagerInterfaces">ISteppingConfiguration</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>ignore</Name></Method><Method><Name>__seterrorStep</Name><Comment><![CDATA[

short summary
=================
This property sets the next step in case of an error.
Is reset to the default ERROR_STEP when the current step changes.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Parameter><Name>errorStep</Name><Comment><![CDATA[

short summary
=================
This property sets the next step in case of an error.
Is reset to the default ERROR_STEP when the current step changes.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Type>DINT</Type><BitSize>32</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getcycleManager</Name><ReturnType Namespace="CNM_CycleManagerInterfaces">ICycleManagerDefaultParameters</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>cycleManager</Name><Type Namespace="CNM_CycleManagerInterfaces">ICycleManagerDefaultParameters</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>always</Name></Method><Method><Name>__setstepWidth</Name><Parameter><Name>stepWidth</Name><Type>DINT</Type><BitSize>32</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>afterSuccess</Name></Method><Method><Name>__setcycleManager</Name><Parameter><Name>cycleManager</Name><Type Namespace="CNM_CycleManagerInterfaces">ICycleManagerDefaultParameters</Type><BitSize>64</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>afterNotSuccess</Name><Comment><![CDATA[

short summary
=================
This method sets the stop request behaviour to ``StepStopRequestMode.AFTER_NOT_SUCCESS``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment></Method><Method><Name>__settimeoutStep</Name><Comment><![CDATA[

short summary
=================
This property sets the step that will be set if the current step reaches a timeout. 
Will by default be the error step and reset after the current step changes.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Parameter><Name>timeoutStep</Name><Comment><![CDATA[

short summary
=================
This property sets the step that will be set if the current step reaches a timeout. 
Will by default be the error step and reset after the current step changes.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Type>DINT</Type><BitSize>32</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_CycleManagerInterfaces">CycleManagerConfigurator</Name><Comment><![CDATA[

short summary
=================
A class to provide fluent access to the configuration scope of a cycle manager.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

methods and properties
=========================

]]></Comment><BitSize>2176</BitSize><Implements Namespace="CNM_CycleManagerInterfaces">ICycleManagerConfigurationScope</Implements><SubItem><Name>cycleManagerDefault</Name><Type Namespace="CNM_CycleManagerInterfaces">ICycleManagerDefaultParameters</Type><BitSize>64</BitSize><BitOffs>128</BitOffs></SubItem><SubItem><Name>cycleManagerStep</Name><Type Namespace="CNM_CycleManagerInterfaces">ICycleManagerStepParameters</Type><BitSize>64</BitSize><BitOffs>192</BitOffs></SubItem><SubItem><Name>stepConfigurator</Name><Type Namespace="CNM_CycleManagerInterfaces">CycleManagerStepConfigurator</Type><BitSize>640</BitSize><BitOffs>256</BitOffs></SubItem><SubItem><Name>defaultConfigurator</Name><Type Namespace="CNM_CycleManagerInterfaces">CycleManagerDefaultConfigurator</Type><BitSize>640</BitSize><BitOffs>896</BitOffs></SubItem><SubItem><Name>CycleManagerConfigurator_3673____getstep_3681__conf</Name><Type Namespace="CNM_CycleManagerInterfaces">CycleManagerStepConfigurator</Type><BitSize>640</BitSize><BitOffs>1536</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><Method><Name>__getstep</Name><ReturnType Namespace="CNM_CycleManagerInterfaces">IStepConfiguration</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>step</Name><Type Namespace="CNM_CycleManagerInterfaces">IStepConfiguration</Type><BitSize>64</BitSize></Local><Local><Name>conf</Name><Type Namespace="CNM_CycleManagerInterfaces">CycleManagerStepConfigurator</Type><BitSize>640</BitSize><Properties><Property><Name>uselocation</Name><Value>CYCLEMANAGERCONFIGURATOR_3673____GETSTEP_3681__CONF</Value></Property></Properties></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getsequence</Name><ReturnType Namespace="CNM_CycleManagerInterfaces">ISequenceConfiguration</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>sequence</Name><Type Namespace="CNM_CycleManagerInterfaces">ISequenceConfiguration</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name Namespace="Tc2_Standard">TON</Name><BitSize>256</BitSize><SubItem><Name>IN</Name><Type>BOOL</Type><Comment><![CDATA[ starts timer with rising edge, resets timer with falling edge ]]></Comment><BitSize>8</BitSize><BitOffs>64</BitOffs><Properties><Property><Name>ItemType</Name><Value>Input</Value></Property></Properties></SubItem><SubItem><Name>PT</Name><Type>TIME</Type><Comment><![CDATA[ time to pass, before Q is set ]]></Comment><BitSize>32</BitSize><BitOffs>96</BitOffs><Properties><Property><Name>ItemType</Name><Value>Input</Value></Property></Properties></SubItem><SubItem><Name>Q</Name><Type>BOOL</Type><Comment><![CDATA[ gets TRUE, delay time (PT) after a rising edge at IN ]]></Comment><BitSize>8</BitSize><BitOffs>128</BitOffs><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></SubItem><SubItem><Name>ET</Name><Type>TIME</Type><Comment><![CDATA[ elapsed time ]]></Comment><BitSize>32</BitSize><BitOffs>160</BitOffs><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></SubItem><SubItem><Name>M</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>192</BitOffs></SubItem><SubItem><Name>StartTime</Name><Type>TIME</Type><BitSize>32</BitSize><BitOffs>224</BitOffs></SubItem><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_CycleManagerInterfaces">AbstractCycleManager</Name><Comment><![CDATA[

short summary
=================
An abstract CycleManager implementation to provide basic funtionallity.
Does not update the state of the cyclemanager, it only provides some protected update functions.

.. <info>
If used in the same step, the order/precedence of method calls should be like this:
configurations
enter
executeCommand
evaluate
waitFor
proceed
proceedWith
acknowledge
leave
.. </info>

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

methods and properties
=========================

]]></Comment><BitSize>142464</BitSize><ExtendsType Namespace="CNM_AssertionInterfaceLib">AbstractAssertor</ExtendsType><Implements Namespace="CNM_CycleManagerInterfaces">ISingleExecutionCycleManager</Implements><Implements Namespace="CNM_CycleManagerInterfaces">ICycleManagerDefaultParameters</Implements><Implements Namespace="CNM_CycleManagerInterfaces">ICycleManagerStepParameters</Implements><SubItem><Name>sequenceErrorStep</Name><Type>DINT</Type><BitSize>32</BitSize><BitOffs>139136</BitOffs><Default><Value>-1</Value></Default></SubItem><SubItem><Name>sequencePauseEnabled</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>139168</BitOffs><Default><Bool>false</Bool></Default></SubItem><SubItem><Name>sequenceSteppingEnabled</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>139176</BitOffs><Default><Bool>false</Bool></Default></SubItem><SubItem><Name>sequenceTimeOut</Name><Type>TIME</Type><BitSize>32</BitSize><BitOffs>139200</BitOffs><Default><DateTime>T#0S</DateTime></Default></SubItem><SubItem><Name>sequenceStopRequestMode</Name><Type Namespace="CNM_CycleManagerInterfaces">StepStopRequestMode</Type><BitSize>32</BitSize><BitOffs>139232</BitOffs><Default><EnumText>StepStopRequestMode.IGNORE</EnumText></Default></SubItem><SubItem><Name>sequenceTimeoutStep</Name><Type>DINT</Type><BitSize>32</BitSize><BitOffs>139264</BitOffs><Default><Value>-1</Value></Default></SubItem><SubItem><Name>sequenceStepWidth</Name><Type>DINT</Type><BitSize>32</BitSize><BitOffs>139296</BitOffs><Default><Value>1</Value></Default></SubItem><SubItem><Name>stepErrorStep</Name><Type>DINT</Type><BitSize>32</BitSize><BitOffs>139328</BitOffs><Default><Value>-1</Value></Default></SubItem><SubItem><Name>stepPauseEnabled</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>139360</BitOffs><Default><Bool>false</Bool></Default></SubItem><SubItem><Name>stepSteppingEnabled</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>139368</BitOffs><Default><Bool>false</Bool></Default></SubItem><SubItem><Name>stepTimeOut</Name><Type>TIME</Type><BitSize>32</BitSize><BitOffs>139392</BitOffs><Default><DateTime>T#0S</DateTime></Default></SubItem><SubItem><Name>stepCurrentStopRequestMode</Name><Type Namespace="CNM_CycleManagerInterfaces">StepStopRequestMode</Type><BitSize>32</BitSize><BitOffs>139424</BitOffs><Default><EnumText>StepStopRequestMode.IGNORE</EnumText></Default></SubItem><SubItem><Name>stepTimeoutStep</Name><Type>DINT</Type><BitSize>32</BitSize><BitOffs>139456</BitOffs><Default><Value>-1</Value></Default></SubItem><SubItem><Name>stepStepWidth</Name><Type>DINT</Type><BitSize>32</BitSize><BitOffs>139488</BitOffs><Default><Value>1</Value></Default></SubItem><SubItem><Name>pauseStep</Name><Type>DINT</Type><BitSize>32</BitSize><BitOffs>139520</BitOffs></SubItem><SubItem><Name>lastStep</Name><Type>DINT</Type><BitSize>32</BitSize><BitOffs>139552</BitOffs></SubItem><SubItem><Name>currentStep</Name><Type>DINT</Type><BitSize>32</BitSize><BitOffs>139584</BitOffs><Default><Value>0</Value></Default></SubItem><SubItem><Name>nextStep</Name><Type>DINT</Type><BitSize>32</BitSize><BitOffs>139616</BitOffs><Default><Value>0</Value></Default></SubItem><SubItem><Name>lastExecute</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>139648</BitOffs></SubItem><SubItem><Name>externalExecute</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>139656</BitOffs></SubItem><SubItem><Name>currentState</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize><BitOffs>139664</BitOffs><Default><EnumText>SingleExecutionState.IDLE</EnumText></Default></SubItem><SubItem><Name>wasError</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>139680</BitOffs></SubItem><SubItem><Name>wasTimeoutError</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>139688</BitOffs></SubItem><SubItem><Name>gotHereByError</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>139696</BitOffs></SubItem><SubItem><Name>stepLastCycle</Name><Type>DINT</Type><BitSize>32</BitSize><BitOffs>139712</BitOffs></SubItem><SubItem><Name>wasNotSuccess</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>139744</BitOffs></SubItem><SubItem><Name>wasSuccess</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>139752</BitOffs></SubItem><SubItem><Name>firstCycle</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>139760</BitOffs></SubItem><SubItem><Name>timeoutTimer</Name><Type Namespace="Tc2_Standard">TON</Type><BitSize>256</BitSize><BitOffs>139776</BitOffs></SubItem><SubItem><Name>registeredEnter</Name><Type>BOOL</Type><Comment><![CDATA[used for cycle time optimizations]]></Comment><BitSize>8</BitSize><BitOffs>140032</BitOffs></SubItem><SubItem><Name>registeredCommand</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>140040</BitOffs></SubItem><SubItem><Name>registeredEval</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>140048</BitOffs></SubItem><SubItem><Name>registeredLeave</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>140056</BitOffs></SubItem><SubItem><Name>registeredLeaveCylce</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>140064</BitOffs></SubItem><SubItem><Name>STEP_IDLE</Name><Type>DINT</Type><BitSize>32</BitSize><BitOffs>140096</BitOffs><Default><Value>0</Value></Default></SubItem><SubItem><Name>STEP_INIT</Name><Type>DINT</Type><BitSize>32</BitSize><BitOffs>140128</BitOffs><Default><Value>1</Value></Default></SubItem><SubItem><Name>STEP_ERROR</Name><Type>DINT</Type><BitSize>32</BitSize><BitOffs>140160</BitOffs><Default><Value>-1</Value></Default></SubItem><SubItem><Name>STEP_ABORT</Name><Type>DINT</Type><BitSize>32</BitSize><BitOffs>140192</BitOffs><Default><Value>-2147483648</Value></Default></SubItem><SubItem><Name>STEP_PAUSE</Name><Type>DINT</Type><BitSize>32</BitSize><BitOffs>140224</BitOffs><Default><Value>2147483646</Value></Default></SubItem><SubItem><Name>STEP_SUCCESS</Name><Type>DINT</Type><BitSize>32</BitSize><BitOffs>140256</BitOffs><Default><Value>2147483647</Value></Default></SubItem><SubItem><Name>AbstractCycleManager_1607____getconfiguration_1613__configurator</Name><Type Namespace="CNM_CycleManagerInterfaces">CycleManagerConfigurator</Type><BitSize>2176</BitSize><BitOffs>140288</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><Method><Name>handleCycleManagerExecute</Name><Comment><![CDATA[

short summary
=================
This method handles the execution of the cycle manager.
Should be the first thing to do at the start of each cycle.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the cycle manager]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter></Method><Method><Name>leave</Name><Comment><![CDATA[

short summary
=================
This method performs the given invoke only in the last cycle of the current step.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>invoke</Name><Comment><![CDATA[ command to execute ]]></Comment><Type Namespace="CNM_CycleManagerInterfaces">ISingleAttempt</Type><BitSize>64</BitSize></Parameter><Parameter><Name>errorStep</Name><Comment><![CDATA[ step to proceed with in case of error ]]></Comment><Type>DINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>forceOnError</Name><Comment><![CDATA[ whether the invoke should be called even if there was an error in the current step ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter></Method><Method><Name>__getdefaultTimeout</Name><ReturnType>TIME</ReturnType><ReturnBitSize>32</ReturnBitSize><Local><Name>defaultTimeout</Name><Type>TIME</Type><BitSize>32</BitSize></Local><Properties><Property><Name>property</Name></Property><Property><Name>hide</Name></Property></Properties></Method><Method><Name>enter</Name><Comment><![CDATA[

short summary
=================
This method performs the given invoke only in the first cycle of the current step.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>invoke</Name><Comment><![CDATA[ command to execute ]]></Comment><Type Namespace="CNM_CycleManagerInterfaces">ISingleAttempt</Type><BitSize>64</BitSize></Parameter><Parameter><Name>errorStep</Name><Comment><![CDATA[ step to proceed with in case of error ]]></Comment><Type>DINT</Type><BitSize>32</BitSize></Parameter></Method><Method><Name>__getcurrentTimeoutStep</Name><ReturnType>DINT</ReturnType><ReturnBitSize>32</ReturnBitSize><Local><Name>currentTimeoutStep</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Properties><Property><Name>property</Name></Property><Property><Name>hide</Name></Property></Properties></Method><Method><Name>__getlast</Name><Comment><![CDATA[

short summary
=================
This property returns the last step of the cycle manager, useful for error steps.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

example
=================
TIMEOUT_STEP_FOR_RETRY:
	cM.steps.next := cM.steps.last-1;
	cM.waitFor(ACK);

]]></Comment><ReturnType>DINT</ReturnType><ReturnBitSize>32</ReturnBitSize><Local><Name>last</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Properties><Property><Name>property</Name></Property><Property><Name>hide</Name></Property></Properties></Method><Method><Name>resetInternalVariables</Name></Method><Method><Name>destruct</Name><Comment><![CDATA[

short summary
=================
This method is a self-destruction if the object was created dynamically.
If the object is a container class, the container content is not destroyed with it,
for that there is the method :ref:`ICloneable.deepDestruct`
The output NULL is a constant which is always NULL,
this allows a semi-pleasant notation: ``foo.destruct(NULL => foo);``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

InOut:
	+-----------------+------+---------+------+------------------------------------------+
	| Scope           | Name | Type    | Init | Comment                                  |
	+=================+======+=========+======+==========================================+
	| Output CONSTANT | NULL | __XWORD | 0    | ``NULL`` is a constant which is always 0 |
	+-----------------+------+---------+------+------------------------------------------+

]]></Comment><Parameter><Name>NULL</Name><Comment><![CDATA[ NULL is a constant which is always 0 ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property><Property><Name>suppress_warning_0</Name><Value>C0533</Value></Property></Properties></Parameter><Properties><Property><Name>hide</Name></Property></Properties></Method><Method><Name>getStateFromStep</Name><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>step</Name><Type>DINT</Type><BitSize>32</BitSize></Parameter></Method><Method><Name>waitFor</Name><Comment><![CDATA[

short summary
=================
This method waits for a boolean signal until the step can be changed. 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>value</Name><Comment><![CDATA[ the value to wait for ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter></Method><Method><Name>__getcurrentPauseEnabled</Name><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Local><Name>currentPauseEnabled</Name><Type>BOOL</Type><BitSize>8</BitSize></Local><Properties><Property><Name>property</Name></Property><Property><Name>hide</Name></Property></Properties></Method><Method><Name>assertionWasWrong</Name><Comment><![CDATA[

short summary
=================
This method is called if an assertion was ``FALSE``

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>caller</Name><Comment><![CDATA[ caller object of the method ]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Parameter><Name>message</Name><Comment><![CDATA[ alarm message ]]></Comment><Type Namespace="CNM_AssertionInterfaceLib">AssertMessage</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>additionalText</Name><Comment><![CDATA[ debugging information ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize></Parameter></Method><Method><Name>__setcurrentSteppingEnabled</Name><Properties><Property><Name>property</Name></Property><Property><Name>hide</Name></Property></Properties></Method><Method><Name>__setcurrentStepWidth</Name><Properties><Property><Name>property</Name></Property><Property><Name>hide</Name></Property></Properties></Method><Method><Name>proceed</Name><Comment><![CDATA[

short summary
=================
This method changes the current step in the cycle manager to the next in order (current + stepWidth) .
If any evaluate or other call is still busy it will ignore them and change to the next step.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment></Method><Method><Name>setFirstCycle</Name><Parameter><Name>errorStep</Name><Type>BOOL</Type><BitSize>8</BitSize></Parameter></Method><Method><Name>handleCycleManagerPause</Name><Comment><![CDATA[

short summary
=================
This method handles the pausing of the cycle manager. 
Should be handled before updating.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>pause</Name><Comment><![CDATA[if true and Pausing Enabled and busy will proceed with PAUSE]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter></Method><Method><Name>handle</Name><Parameter><Name>alarm</Name><Type Namespace="CNM_AoC.CNM_CycleManager.CNM_MessageInterfaces">IAlarm</Type><BitSize>64</BitSize></Parameter><Parameter><Name>acknowledge</Name><Type>BOOL</Type><BitSize>8</BitSize></Parameter></Method><Method><Name>__getdefaultPauseEnabled</Name><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Local><Name>defaultPauseEnabled</Name><Type>BOOL</Type><BitSize>8</BitSize></Local><Properties><Property><Name>property</Name></Property><Property><Name>hide</Name></Property></Properties></Method><Method><Name>handleCycleManagerError</Name><Comment><![CDATA[

short summary
=================
This method handles the resume function of the cycle manager.
Should be called befor all other handles.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>resume</Name><Comment><![CDATA[if true, will acknowledge error and return to previous step]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter></Method><Method><Name>evaluate</Name><Comment><![CDATA[

short summary
=================
This method evaluates an execution state to calculate the next step.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>state</Name><Comment><![CDATA[ the state which is to be evaluated ]]></Comment><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize></Parameter><Parameter><Name>errorStep</Name><Comment><![CDATA[ step to proceed with in case of error ]]></Comment><Type>DINT</Type><BitSize>32</BitSize></Parameter></Method><Method><Name>deepDestruct</Name><Comment><![CDATA[

short summary
=================
This method is a self-destruction if the object was created dynamically.
If the object is a container class, the container content is destroyed with it.
The output NULL is a constant which is always NULL,
this allows a semi-pleasant notation: ``foo.deepDestruct(NULL => foo);``.

.. attention:: 
	For derivations: **If a derived class needs ``deepDestruct`` this method must be overwritten.**
	otherwise it just calls :ref:`Object.destruct`. 


.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

InOut:
	+-----------------+------+---------+------+------------------------------------------+
	| Scope           | Name | Type    | Init | Comment                                  |
	+=================+======+=========+======+==========================================+
	| Output CONSTANT | NULL | __XWORD | 0    | ``NULL`` is a constant which is always 0 |
	+-----------------+------+---------+------+------------------------------------------+

]]></Comment><Parameter><Name>NULL</Name><Comment><![CDATA[ NULL is a constant which is always 0 ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property><Property><Name>suppress_warning_0</Name><Value>C0533</Value></Property></Properties></Parameter><Properties><Property><Name>hide</Name></Property></Properties></Method><Method><Name>__getcurrentStepWidth</Name><ReturnType>DINT</ReturnType><ReturnBitSize>32</ReturnBitSize><Local><Name>currentStepWidth</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Properties><Property><Name>property</Name></Property><Property><Name>hide</Name></Property></Properties></Method><Method><Name>__setdefaultPauseEnabled</Name><Properties><Property><Name>property</Name></Property><Property><Name>hide</Name></Property></Properties></Method><Method><Name>__getstate</Name><Comment><![CDATA[

short summary
=================
This property returns the current state of the cycle manager according to its step.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Local><Name>state</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize></Local><Local><Name>WAITING</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getcurrentTimeout</Name><Comment><![CDATA[

short summary
=================
This property sets the maximum execution time for the current step. 
The cycle manager will go into the error step after the time elapsed.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType>TIME</ReturnType><ReturnBitSize>32</ReturnBitSize><Local><Name>currentTimeout</Name><Type>TIME</Type><BitSize>32</BitSize></Local><Properties><Property><Name>property</Name></Property><Property><Name>hide</Name></Property></Properties></Method><Method><Name>__setcurrentTimeout</Name><Comment><![CDATA[

short summary
=================
This property sets the maximum execution time for the current step. 
The cycle manager will go into the error step after the time elapsed.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Properties><Property><Name>property</Name></Property><Property><Name>hide</Name></Property></Properties></Method><Method><Name>executeCommand</Name><Comment><![CDATA[

short summary
=================
This method performs the given command and evaluates the return value.
The command will be called with execute := FALSE in the first cylce and with execute := TRUE in all following

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>command</Name><Comment><![CDATA[ command to execute ]]></Comment><Type Namespace="CNM_CycleManagerInterfaces">ICommand</Type><BitSize>64</BitSize></Parameter><Parameter><Name>errorStep</Name><Comment><![CDATA[ step to proceed with in case of error ]]></Comment><Type>DINT</Type><BitSize>32</BitSize></Parameter></Method><Method><Name>__setnext</Name><Comment><![CDATA[

short summary
=================
This property sets the next step of the cycle manager.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

example
=================
MY_STEP:
	cyclemanager.steps.next := SUCCESS_STEP;
	cyclemanager.executeCommand(finalizeProcess);
	
]]></Comment><Properties><Property><Name>property</Name></Property><Property><Name>hide</Name></Property></Properties></Method><Method><Name>__getcurrentErrorStep</Name><ReturnType>DINT</ReturnType><ReturnBitSize>32</ReturnBitSize><Local><Name>currentErrorStep</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Properties><Property><Name>property</Name></Property><Property><Name>hide</Name></Property></Properties></Method><Method><Name>__getdefaultSteppingEnabled</Name><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Local><Name>defaultSteppingEnabled</Name><Type>BOOL</Type><BitSize>8</BitSize></Local><Properties><Property><Name>property</Name></Property><Property><Name>hide</Name></Property></Properties></Method><Method><Name>__setdefaultStopRequestMode</Name><Properties><Property><Name>property</Name></Property><Property><Name>hide</Name></Property></Properties></Method><Method><Name>__setcurrentErrorStep</Name><Properties><Property><Name>property</Name></Property><Property><Name>hide</Name></Property></Properties></Method><Method><Name>__getnext</Name><Comment><![CDATA[

short summary
=================
This property sets the next step of the cycle manager.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

example
=================
MY_STEP:
	cyclemanager.steps.next := SUCCESS_STEP;
	cyclemanager.executeCommand(finalizeProcess);
	
]]></Comment><ReturnType>DINT</ReturnType><ReturnBitSize>32</ReturnBitSize><Local><Name>next</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Properties><Property><Name>property</Name></Property><Property><Name>hide</Name></Property></Properties></Method><Method><Name>__setcurrent</Name><Comment><![CDATA[

short summary
=================
This property returns the current step of the cycle manager.
Proposed use is as CASE control.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

example
=================
CASE cyclemanager.steps.current OF
DefaultSteps.STEP.IDLE:
	;
DefaultSteps.STEP.INIT:
	;
2:
	;
3:
	;
4:
	;
DefaultSteps.STEP.SUCCESS:
	;
DefaultSteps.STEP.ERROR:
	;
DefaultSteps.STEP.ABORT:
	;
ELSE ;
END_CASE

]]></Comment><Properties><Property><Name>property</Name></Property><Property><Name>hide</Name></Property></Properties></Method><Method><Name>__setdefaultSteppingEnabled</Name><Properties><Property><Name>property</Name></Property><Property><Name>hide</Name></Property></Properties></Method><Method><Name>__getdefaultStepWidth</Name><ReturnType>DINT</ReturnType><ReturnBitSize>32</ReturnBitSize><Local><Name>defaultStepWidth</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Properties><Property><Name>property</Name></Property><Property><Name>hide</Name></Property></Properties></Method><Method><Name>deepClone</Name><Comment><![CDATA[

short summary
=================
This method is used to create a new instance
of the object which has the same internal state as the object.
If the object is a container class, the references to the content objects
are cloned too.

If an object does not support cloning the return value is
``CNM_ReturnTypes.CloneResult.CLONE_IS_NOT_SUPPORTED``.

If there is not enough memory or the cloning fails because the
attribute enable dynamic creation was forgotten the return value is 
``CNM_ReturnTypes.CloneResult.FAILED``.
If something goes wrong, then this method must clean up everything
that has been cloned and free the memory again.
**The deepClone either works completely, or not at all**

Only if the return value is ``CNM_ReturnTypes.CloneResult.SUCCESS``
the output ``clonedObject`` points to the new object
otherwise ``clonedObject`` is NULL.  

.. attention:: 
	For derivations: **If a derived class needs ``deepClone`` this method must be overwritten.**
	and don't forget the attribute ``{attribute 'enable_dynamic_creation'}``, even for container content 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return:``CNM_ReturnTypes.CloneResult.SUCCESS``: new object clone was created,
``CNM_ReturnTypes.CloneResult.FAILED``: object clone failed
``CNM_ReturnTypes.CloneResult.CLONE_IS_NOT_SUPPORTED``: object does not support deep cloning

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">CloneResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>clonedObject</Name><Comment><![CDATA[ new object instance or NULL if somthing went wrong ]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Properties><Property><Name>hide</Name></Property></Properties></Method><Method><Name>__getdefaultTimeoutStep</Name><ReturnType>DINT</ReturnType><ReturnBitSize>32</ReturnBitSize><Local><Name>defaultTimeoutStep</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Properties><Property><Name>property</Name></Property><Property><Name>hide</Name></Property></Properties></Method><Method><Name>clone</Name><Comment><![CDATA[

short summary
=================
This method is used to create a new instance
of the object which has the same internal state as the object.
If the object is a container class, the references to the content objects
are not cloned for this there is the method :ref:`ICloneable.deepClone`.

If an object does not support cloning the return value is
``CNM_ReturnTypes.CloneResult.CLONE_IS_NOT_SUPPORTED``.

If there is not enough memory or the cloning fails because the
attribute enable dynamic creation was forgotten the return value is 
``CNM_ReturnTypes.CloneResult.FAILED``.

Only if the return value is ``CNM_ReturnTypes.CloneResult.SUCCESS``
the output ``clonedObject`` points to the new object
otherwise ``clonedObject`` is NULL.  

.. attention:: 
	For derivations: **If a derived class needs ``clone`` this method must be overwritten.**
	and don't forget the attribute ``{attribute 'enable_dynamic_creation'}``  

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return:``CNM_ReturnTypes.CloneResult.SUCCESS``: new object clone was created,
``CNM_ReturnTypes.CloneResult.FAILED``: object clone failed
``CNM_ReturnTypes.CloneResult.CLONE_IS_NOT_SUPPORTED``: object does not support cloning

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">CloneResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>clonedObject</Name><Comment><![CDATA[ new object instance or NULL if somthing went wrong ]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Properties><Property><Name>hide</Name></Property></Properties></Method><Method><Name>__getstep</Name><Comment><![CDATA[

short summary
=================
This property returns the current, next and last step of the cycle manager via fluent interface with the ``ICylceSteps`` interfaces

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_CycleManagerInterfaces">ICycleSteps</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>step</Name><Type Namespace="CNM_CycleManagerInterfaces">ICycleSteps</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setcurrentTimeoutStep</Name><Properties><Property><Name>property</Name></Property><Property><Name>hide</Name></Property></Properties></Method><Method><Name>__setlast</Name><Comment><![CDATA[

short summary
=================
This property returns the last step of the cycle manager, useful for error steps.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

example
=================
TIMEOUT_STEP_FOR_RETRY:
	cM.steps.next := cM.steps.last-1;
	cM.waitFor(ACK);

]]></Comment><Properties><Property><Name>property</Name></Property><Property><Name>hide</Name></Property></Properties></Method><Method><Name>__getcurrentStopRequestMode</Name><ReturnType Namespace="CNM_CycleManagerInterfaces">StepStopRequestMode</ReturnType><ReturnBitSize>32</ReturnBitSize><Local><Name>currentStopRequestMode</Name><Type Namespace="CNM_CycleManagerInterfaces">StepStopRequestMode</Type><BitSize>32</BitSize></Local><Properties><Property><Name>property</Name></Property><Property><Name>hide</Name></Property></Properties></Method><Method><Name>setWaiting</Name><Parameter><Name>waiting</Name><Comment><![CDATA[flag if the cycle manager waits for the step signal, TRUE if waiting]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter></Method><Method><Name>__getexecuteStep</Name><Comment><![CDATA[

short summary
=================
This property returns the execute flag for the current step, 
which is FALSE in the first cycle of each step and TRUE after.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Local><Name>executeStep</Name><Type>BOOL</Type><BitSize>8</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setdefaultTimeoutStep</Name><Properties><Property><Name>property</Name></Property><Property><Name>hide</Name></Property></Properties></Method><Method><Name>__setstate</Name><Comment><![CDATA[

short summary
=================
This property returns the current state of the cycle manager according to its step.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Parameter><Name>state</Name><Comment><![CDATA[

short summary
=================
This property returns the current state of the cycle manager according to its step.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setcurrentPauseEnabled</Name><Properties><Property><Name>property</Name></Property><Property><Name>hide</Name></Property></Properties></Method><Method><Name>__getcurrent</Name><Comment><![CDATA[

short summary
=================
This property returns the current step of the cycle manager.
Proposed use is as CASE control.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

example
=================
CASE cyclemanager.steps.current OF
DefaultSteps.STEP.IDLE:
	;
DefaultSteps.STEP.INIT:
	;
2:
	;
3:
	;
4:
	;
DefaultSteps.STEP.SUCCESS:
	;
DefaultSteps.STEP.ERROR:
	;
DefaultSteps.STEP.ABORT:
	;
ELSE ;
END_CASE

]]></Comment><ReturnType>DINT</ReturnType><ReturnBitSize>32</ReturnBitSize><Local><Name>current</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Properties><Property><Name>property</Name></Property><Property><Name>hide</Name></Property></Properties></Method><Method><Name>__setdefaultErrorStep</Name><Properties><Property><Name>property</Name></Property><Property><Name>hide</Name></Property></Properties></Method><Method><Name>__getisInErrorStep</Name><Comment><![CDATA[

short summary
=================
This property returns TRUE if the step was reached by evaluating an error.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Local><Name>isInErrorStep</Name><Type>BOOL</Type><BitSize>8</BitSize></Local><Properties><Property><Name>property</Name></Property><Property><Name>hide</Name></Property></Properties></Method><Method><Name>acknowledge</Name><Comment><![CDATA[

short summary
=================
This method acknowledges an error in the state machine and resets the current step to the step befor the error occured.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><Properties><Property><Name>hide</Name></Property></Properties></Method><Method><Name>compareTo</Name><Comment><![CDATA[

short summary
=================
This method compares a foreign object with the own one, this is needed for sort orders.
The abstract class evaluates every object that is NULL as greater, and all other objects as equal. 

.. attention:: 
	For derivations: **If a derived class needs sorting this method must be overwritten.** 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return:``SMALLER``: ``THIS`` precedes in order,
``EQUAL``: ``THIS`` and ``object`` at the same position in order,
``GREATER``: ``THIS`` is after in order.
Checkout the library CNM_ReturnTypes.

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">ComparationResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>object</Name><Comment><![CDATA[ foreign objet to compare]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Properties><Property><Name>hide</Name></Property></Properties></Method><Method><Name>resetCurrentStepParametersToDefaults</Name></Method><Method><Name>__geterrors</Name><Comment><![CDATA[

short summary
=================
This property returns an ``ICycleError`` interface fluently to provide error handling methods.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_CycleManagerInterfaces">ICycleError</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>errors</Name><Type Namespace="CNM_CycleManagerInterfaces">ICycleError</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getdefaultStopRequestMode</Name><ReturnType Namespace="CNM_CycleManagerInterfaces">StepStopRequestMode</ReturnType><ReturnBitSize>32</ReturnBitSize><Local><Name>defaultStopRequestMode</Name><Type Namespace="CNM_CycleManagerInterfaces">StepStopRequestMode</Type><BitSize>32</BitSize></Local><Properties><Property><Name>property</Name></Property><Property><Name>hide</Name></Property></Properties></Method><Method><Name>__setcurrentStopRequestMode</Name><Properties><Property><Name>property</Name></Property><Property><Name>hide</Name></Property></Properties></Method><Method><Name>__getconfiguration</Name><Comment><![CDATA[

short summary
=================
An interface to provide configurations for cycle manager in a fluent way.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

methods and properties
=========================

]]></Comment><ReturnType Namespace="CNM_CycleManagerInterfaces">ICycleManagerConfigurationScope</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>configuration</Name><Type Namespace="CNM_CycleManagerInterfaces">ICycleManagerConfigurationScope</Type><BitSize>64</BitSize></Local><Local><Name>configurator</Name><Type Namespace="CNM_CycleManagerInterfaces">CycleManagerConfigurator</Type><BitSize>2176</BitSize><Properties><Property><Name>uselocation</Name><Value>ABSTRACTCYCLEMANAGER_1607____GETCONFIGURATION_1613__CONFIGURATOR</Value></Property></Properties></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>callUpdates</Name><Comment><![CDATA[

short summary
=================
This method handles all updates of the cycle manager.
Should be called first each cycle befor evaluating the steps and only once per cycle!

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the cycle manager]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>pause</Name><Comment><![CDATA[if true and Pausing Enabled and busy will proceed with PAUSE]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>resume</Name><Comment><![CDATA[if true, will acknowledge error and return to previous step]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>stepControl</Name><Comment><![CDATA[ must be TRUE if stepping is enabled to proceed steps automatically ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>stopRequest</Name><Comment><![CDATA[used for StopRequest evaluation if configured]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter></Method><Method><Name>__setdefaultTimeout</Name><Properties><Property><Name>property</Name></Property><Property><Name>hide</Name></Property></Properties></Method><Method><Name>handleCycleManagerTimeout</Name><Comment><![CDATA[

short summary
=================
This method handles the timeout of the current step.
Call at any point each cycle.
.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Parameter><Name>step</Name><Comment><![CDATA[ must be TRUE if stepping is enabled to proceed steps automatically ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter></Method><Method><Name>updateCycleManager</Name><Comment><![CDATA[

short summary
=================
This method updates the step and state of the cycle manager.
Should be called after all handles each cycle.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment></Method><Method><Name>proceedWith</Name><Comment><![CDATA[

short summary
=================
This method changes the current step in the cycle manager to the given step.
If any evaluate or other call is still busy it will ignore them and move to the next step.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>step</Name><Comment><![CDATA[ step to move to ]]></Comment><Type>DINT</Type><BitSize>32</BitSize></Parameter></Method><Method><Name>__getdefaultErrorStep</Name><ReturnType>DINT</ReturnType><ReturnBitSize>32</ReturnBitSize><Local><Name>defaultErrorStep</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Properties><Property><Name>property</Name></Property><Property><Name>hide</Name></Property></Properties></Method><Method><Name>handleStepChange</Name><Comment><![CDATA[

short summary
=================
This method handles the step change, call early in handling.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>step</Name><Comment><![CDATA[ must be TRUE if stepping is enabled to proceed steps automatically ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>stopRequest</Name><Comment><![CDATA[used for StopRequest evaluation if configured]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter></Method><Method><Name>__setdefaultStepWidth</Name><Properties><Property><Name>property</Name></Property><Property><Name>hide</Name></Property></Properties></Method><Method><Name>__getcurrentSteppingEnabled</Name><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Local><Name>currentSteppingEnabled</Name><Type>BOOL</Type><BitSize>8</BitSize></Local><Properties><Property><Name>property</Name></Property><Property><Name>hide</Name></Property></Properties></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_CycleManager">SimpleCycleManager</Name><Comment><![CDATA[

short summary
=================
An implementation of the ``ISinlgeExecutionCycleManager`` to provide simple cycle managment for steps in state machines.
The body NEEDS to be called at the start of every cycle (before using the step property) ONLY ONCE.

.. <info>
If used in the same step, the order of method calls should be this:
configurations
enter
executeCommand
evaluate
waitFor
proceed
proceedWith
acknowledge
leave
.. </info>

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

methods and properties
=========================

]]></Comment><BitSize>142528</BitSize><ExtendsType Namespace="CNM_CycleManagerInterfaces">AbstractCycleManager</ExtendsType><SubItem><Name>execute</Name><Type>BOOL</Type><Comment><![CDATA[control bit to start or abort the cycle manager]]></Comment><BitSize>8</BitSize><BitOffs>142464</BitOffs><Properties><Property><Name>ItemType</Name><Value>Input</Value></Property></Properties></SubItem><SubItem><Name>stopRequest</Name><Type>BOOL</Type><Comment><![CDATA[used for StopRequest evaluation if configured]]></Comment><BitSize>8</BitSize><BitOffs>142472</BitOffs><Default><Bool>false</Bool></Default><Properties><Property><Name>ItemType</Name><Value>Input</Value></Property></Properties></SubItem><SubItem><Name>pause</Name><Type>BOOL</Type><Comment><![CDATA[if true and Pausing Enabled and busy will proceed with PAUSE]]></Comment><BitSize>8</BitSize><BitOffs>142480</BitOffs><Default><Bool>false</Bool></Default><Properties><Property><Name>ItemType</Name><Value>Input</Value></Property></Properties></SubItem><SubItem><Name>resume</Name><Type>BOOL</Type><Comment><![CDATA[if true, will acknowledge error and return to previous step]]></Comment><BitSize>8</BitSize><BitOffs>142488</BitOffs><Default><Bool>false</Bool></Default><Properties><Property><Name>ItemType</Name><Value>Input</Value></Property></Properties></SubItem><SubItem><Name>stepControl</Name><Type>BOOL</Type><Comment><![CDATA[ must be TRUE if stepping is enabled to proceed steps automatically ]]></Comment><BitSize>8</BitSize><BitOffs>142496</BitOffs><Default><Bool>true</Bool></Default><Properties><Property><Name>ItemType</Name><Value>Input</Value></Property></Properties></SubItem><SubItem><Name>waitingForStep</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>142504</BitOffs></SubItem><Method><Name>setWaiting</Name><Parameter><Name>waiting</Name><Comment><![CDATA[flag if the cycle manager waits for the step signal, TRUE if waiting]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter></Method><Method><Name>__setisWaiting</Name><Parameter><Name>isWaiting</Name><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getisWaiting</Name><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Local><Name>isWaiting</Name><Type>BOOL</Type><BitSize>8</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getclassName</Name><Comment><![CDATA[

short summary
=================
This abstract property returns the class name of the concrete object, 
which is useful for logging/debugging purpose or to check the class name
for ``__DELETE`` in factories (sometimes it's necessary to do more 
than just to free the memory).

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">ClassName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Local><Name>className</Name><Type Namespace="CNM_AbstractObject">ClassName</Type><BitSize>2048</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name Namespace="Tc2_System">E_OpenPath</Name><Comment><![CDATA[ File open path ]]></Comment><BitSize>16</BitSize><BaseType>UINT</BaseType><EnumInfo><Text>PATH_GENERIC</Text><Enum>1</Enum><Comment><![CDATA[ Search/open/create files in selected/generic folder ]]></Comment></EnumInfo><EnumInfo><Text>PATH_BOOTPRJ</Text><Enum>2</Enum><Comment><![CDATA[ Search/open/create files in TwinCAT boot project folder and adds the *.wbp extension ]]></Comment></EnumInfo><EnumInfo><Text>PATH_BOOTDATA</Text><Enum>3</Enum><Comment><![CDATA[ Reserved for future use]]></Comment></EnumInfo><EnumInfo><Text>PATH_BOOTPATH</Text><Enum>4</Enum><Comment><![CDATA[ Refers to the TwinCAT/Boot directory without adding an extension (.wbp) ]]></Comment></EnumInfo><EnumInfo><Text>PATH_USERPATH1</Text><Enum>11</Enum><Comment><![CDATA[ Reserved for future use ]]></Comment></EnumInfo><EnumInfo><Text>PATH_USERPATH2</Text><Enum>12</Enum><Comment><![CDATA[ Reserved for future use ]]></Comment></EnumInfo><EnumInfo><Text>PATH_USERPATH3</Text><Enum>13</Enum><Comment><![CDATA[ Reserved for future use ]]></Comment></EnumInfo><EnumInfo><Text>PATH_USERPATH4</Text><Enum>14</Enum><Comment><![CDATA[ Reserved for future use ]]></Comment></EnumInfo><EnumInfo><Text>PATH_USERPATH5</Text><Enum>15</Enum><Comment><![CDATA[ Reserved for future use ]]></Comment></EnumInfo><EnumInfo><Text>PATH_USERPATH6</Text><Enum>16</Enum><Comment><![CDATA[ Reserved for future use ]]></Comment></EnumInfo><EnumInfo><Text>PATH_USERPATH7</Text><Enum>17</Enum><Comment><![CDATA[ Reserved for future use ]]></Comment></EnumInfo><EnumInfo><Text>PATH_USERPATH8</Text><Enum>18</Enum><Comment><![CDATA[ Reserved for future use ]]></Comment></EnumInfo><EnumInfo><Text>PATH_USERPATH9</Text><Enum>19</Enum><Comment><![CDATA[ Reserved for future use ]]></Comment></EnumInfo></DataType><DataType><Name Namespace="Tc2_System">FB_FileOpen</Name><Comment><![CDATA[ Open and/or create a file. ]]></Comment><BitSize>3776</BitSize><SubItem><Name>sNetId</Name><Type Namespace="Tc2_System">T_AmsNetID</Type><Comment><![CDATA[ Ams net id ]]></Comment><BitSize>192</BitSize><BitOffs>64</BitOffs><Properties><Property><Name>ItemType</Name><Value>Input</Value></Property></Properties></SubItem><SubItem><Name>sPathName</Name><Type Namespace="Tc2_System">T_MaxString</Type><Comment><![CDATA[ Max filename length = 255 ]]></Comment><BitSize>2048</BitSize><BitOffs>256</BitOffs><Properties><Property><Name>ItemType</Name><Value>Input</Value></Property></Properties></SubItem><SubItem><Name>nMode</Name><Type>DWORD</Type><Comment><![CDATA[ Open mode flags ]]></Comment><BitSize>32</BitSize><BitOffs>2304</BitOffs><Properties><Property><Name>ItemType</Name><Value>Input</Value></Property></Properties></SubItem><SubItem><Name>ePath</Name><Type Namespace="Tc2_System">E_OpenPath</Type><Comment><![CDATA[ Default: Open generic file ]]></Comment><BitSize>16</BitSize><BitOffs>2336</BitOffs><Default><EnumText>E_OpenPath.PATH_GENERIC</EnumText></Default><Properties><Property><Name>ItemType</Name><Value>Input</Value></Property></Properties></SubItem><SubItem><Name>bExecute</Name><Type>BOOL</Type><Comment><![CDATA[ Rising edge starts command execution ]]></Comment><BitSize>8</BitSize><BitOffs>2352</BitOffs><Properties><Property><Name>ItemType</Name><Value>Input</Value></Property></Properties></SubItem><SubItem><Name>tTimeout</Name><Type>TIME</Type><Comment><![CDATA[ Maximum time allowed for the execution of this ADS command ]]></Comment><BitSize>32</BitSize><BitOffs>2368</BitOffs><Default><DateTime>5000</DateTime></Default><Properties><Property><Name>ItemType</Name><Value>Input</Value></Property></Properties></SubItem><SubItem><Name>bBusy</Name><Type>BOOL</Type><Comment><![CDATA[ Busy flag ]]></Comment><BitSize>8</BitSize><BitOffs>2400</BitOffs><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></SubItem><SubItem><Name>bError</Name><Type>BOOL</Type><Comment><![CDATA[ Error flag ]]></Comment><BitSize>8</BitSize><BitOffs>2408</BitOffs><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></SubItem><SubItem><Name>nErrId</Name><Type>UDINT</Type><Comment><![CDATA[ ADS error code ]]></Comment><BitSize>32</BitSize><BitOffs>2432</BitOffs><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></SubItem><SubItem><Name>hFile</Name><Type>UINT</Type><Comment><![CDATA[ File handle ]]></Comment><BitSize>16</BitSize><BitOffs>2464</BitOffs><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></SubItem><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property><Property><Name>hide_all_locals</Name></Property></Properties></DataType><DataType><Name Namespace="Tc2_System">FB_FileClose</Name><Comment><![CDATA[ Closes a file stream. ]]></Comment><BitSize>1408</BitSize><SubItem><Name>sNetId</Name><Type Namespace="Tc2_System">T_AmsNetID</Type><Comment><![CDATA[ Ams net id ]]></Comment><BitSize>192</BitSize><BitOffs>64</BitOffs><Properties><Property><Name>ItemType</Name><Value>Input</Value></Property></Properties></SubItem><SubItem><Name>hFile</Name><Type>UINT</Type><Comment><![CDATA[ File handle obtained through 'open' ]]></Comment><BitSize>16</BitSize><BitOffs>256</BitOffs><Properties><Property><Name>ItemType</Name><Value>Input</Value></Property></Properties></SubItem><SubItem><Name>bExecute</Name><Type>BOOL</Type><Comment><![CDATA[ Rising edge starts command execution ]]></Comment><BitSize>8</BitSize><BitOffs>272</BitOffs><Properties><Property><Name>ItemType</Name><Value>Input</Value></Property></Properties></SubItem><SubItem><Name>tTimeout</Name><Type>TIME</Type><Comment><![CDATA[ Maximum time allowed for the execution of this ADS command ]]></Comment><BitSize>32</BitSize><BitOffs>288</BitOffs><Default><DateTime>5000</DateTime></Default><Properties><Property><Name>ItemType</Name><Value>Input</Value></Property></Properties></SubItem><SubItem><Name>bBusy</Name><Type>BOOL</Type><Comment><![CDATA[ Busy flag ]]></Comment><BitSize>8</BitSize><BitOffs>320</BitOffs><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></SubItem><SubItem><Name>bError</Name><Type>BOOL</Type><Comment><![CDATA[ Error flag ]]></Comment><BitSize>8</BitSize><BitOffs>328</BitOffs><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></SubItem><SubItem><Name>nErrId</Name><Type>UDINT</Type><Comment><![CDATA[ ADS error code ]]></Comment><BitSize>32</BitSize><BitOffs>352</BitOffs><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></SubItem><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property><Property><Name>hide_all_locals</Name></Property></Properties></DataType><DataType><Name Namespace="Tc2_System">FB_FileWrite</Name><Comment><![CDATA[ Writes data to the stream. ]]></Comment><BitSize>1792</BitSize><SubItem><Name>sNetId</Name><Type Namespace="Tc2_System">T_AmsNetID</Type><Comment><![CDATA[ Ams net id ]]></Comment><BitSize>192</BitSize><BitOffs>64</BitOffs><Properties><Property><Name>ItemType</Name><Value>Input</Value></Property></Properties></SubItem><SubItem><Name>hFile</Name><Type>UINT</Type><Comment><![CDATA[ File handle ]]></Comment><BitSize>16</BitSize><BitOffs>256</BitOffs><Properties><Property><Name>ItemType</Name><Value>Input</Value></Property></Properties></SubItem><SubItem><Name>pWriteBuff</Name><Type GUID="{18071995-0000-0000-0000-000000000018}">PVOID</Type><Comment><![CDATA[ Buffer address for write ]]></Comment><BitSize>64</BitSize><BitOffs>320</BitOffs><Properties><Property><Name>ItemType</Name><Value>Input</Value></Property><Property><Name>TcIgnorePersistent</Name></Property></Properties></SubItem><SubItem><Name>cbWriteLen</Name><Type>UDINT</Type><Comment><![CDATA[ Count of bytes for write ]]></Comment><BitSize>32</BitSize><BitOffs>384</BitOffs><Properties><Property><Name>ItemType</Name><Value>Input</Value></Property></Properties></SubItem><SubItem><Name>bExecute</Name><Type>BOOL</Type><Comment><![CDATA[ Rising edge starts command execution ]]></Comment><BitSize>8</BitSize><BitOffs>416</BitOffs><Properties><Property><Name>ItemType</Name><Value>Input</Value></Property></Properties></SubItem><SubItem><Name>tTimeout</Name><Type>TIME</Type><Comment><![CDATA[ Maximum time allowed for the execution of this ADS command ]]></Comment><BitSize>32</BitSize><BitOffs>448</BitOffs><Default><DateTime>5000</DateTime></Default><Properties><Property><Name>ItemType</Name><Value>Input</Value></Property></Properties></SubItem><SubItem><Name>bBusy</Name><Type>BOOL</Type><Comment><![CDATA[ Busy flag ]]></Comment><BitSize>8</BitSize><BitOffs>480</BitOffs><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></SubItem><SubItem><Name>bError</Name><Type>BOOL</Type><Comment><![CDATA[ Error flag ]]></Comment><BitSize>8</BitSize><BitOffs>488</BitOffs><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></SubItem><SubItem><Name>nErrId</Name><Type>UDINT</Type><Comment><![CDATA[ ADS error code ]]></Comment><BitSize>32</BitSize><BitOffs>512</BitOffs><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></SubItem><SubItem><Name>cbWrite</Name><Type>UDINT</Type><Comment><![CDATA[ Count of bytes actually written ]]></Comment><BitSize>32</BitSize><BitOffs>544</BitOffs><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></SubItem><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property><Property><Name>hide_all_locals</Name></Property></Properties></DataType><DataType><Name Namespace="Tc2_System">FB_FileRead</Name><Comment><![CDATA[ Reads data from a stream. ]]></Comment><BitSize>1856</BitSize><SubItem><Name>sNetId</Name><Type Namespace="Tc2_System">T_AmsNetID</Type><Comment><![CDATA[ Ams net id ]]></Comment><BitSize>192</BitSize><BitOffs>64</BitOffs><Properties><Property><Name>ItemType</Name><Value>Input</Value></Property></Properties></SubItem><SubItem><Name>hFile</Name><Type>UINT</Type><Comment><![CDATA[ File handle ]]></Comment><BitSize>16</BitSize><BitOffs>256</BitOffs><Properties><Property><Name>ItemType</Name><Value>Input</Value></Property></Properties></SubItem><SubItem><Name>pReadBuff</Name><Type GUID="{18071995-0000-0000-0000-000000000018}">PVOID</Type><Comment><![CDATA[ Buffer address for read ]]></Comment><BitSize>64</BitSize><BitOffs>320</BitOffs><Properties><Property><Name>ItemType</Name><Value>Input</Value></Property><Property><Name>TcIgnorePersistent</Name></Property></Properties></SubItem><SubItem><Name>cbReadLen</Name><Type>UDINT</Type><Comment><![CDATA[ Count of bytes for read ]]></Comment><BitSize>32</BitSize><BitOffs>384</BitOffs><Properties><Property><Name>ItemType</Name><Value>Input</Value></Property></Properties></SubItem><SubItem><Name>bExecute</Name><Type>BOOL</Type><Comment><![CDATA[ Rising edge starts command execution ]]></Comment><BitSize>8</BitSize><BitOffs>416</BitOffs><Properties><Property><Name>ItemType</Name><Value>Input</Value></Property></Properties></SubItem><SubItem><Name>tTimeout</Name><Type>TIME</Type><Comment><![CDATA[ Maximum time allowed for the execution of this ADS command ]]></Comment><BitSize>32</BitSize><BitOffs>448</BitOffs><Default><DateTime>5000</DateTime></Default><Properties><Property><Name>ItemType</Name><Value>Input</Value></Property></Properties></SubItem><SubItem><Name>bBusy</Name><Type>BOOL</Type><Comment><![CDATA[ Busy flag ]]></Comment><BitSize>8</BitSize><BitOffs>480</BitOffs><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></SubItem><SubItem><Name>bError</Name><Type>BOOL</Type><Comment><![CDATA[ Error flag ]]></Comment><BitSize>8</BitSize><BitOffs>488</BitOffs><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></SubItem><SubItem><Name>nErrId</Name><Type>UDINT</Type><Comment><![CDATA[ ADS error code ]]></Comment><BitSize>32</BitSize><BitOffs>512</BitOffs><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></SubItem><SubItem><Name>cbRead</Name><Type>UDINT</Type><Comment><![CDATA[ Count of bytes actually read ]]></Comment><BitSize>32</BitSize><BitOffs>544</BitOffs><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></SubItem><SubItem><Name>bEOF</Name><Type>BOOL</Type><Comment><![CDATA[ End of file ]]></Comment><BitSize>8</BitSize><BitOffs>576</BitOffs><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></SubItem><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property><Property><Name>hide_all_locals</Name></Property></Properties></DataType><DataType><Name Namespace="CNM_AoC">FileHandler</Name><BitSize>294080</BitSize><SubItem><Name>fbFileOpen</Name><Type Namespace="Tc2_System">FB_FileOpen</Type><BitSize>3776</BitSize><BitOffs>64</BitOffs></SubItem><SubItem><Name>fbFileClose</Name><Type Namespace="Tc2_System">FB_FileClose</Type><BitSize>1408</BitSize><BitOffs>3840</BitOffs></SubItem><SubItem><Name>writer</Name><Type Namespace="Tc2_System">FB_FileWrite</Type><BitSize>1792</BitSize><BitOffs>5248</BitOffs></SubItem><SubItem><Name>reader</Name><Type Namespace="Tc2_System">FB_FileRead</Type><BitSize>1856</BitSize><BitOffs>7040</BitOffs></SubItem><SubItem><Name>FileHandler_1511__read_1522__cm</Name><Type Namespace="CNM_CycleManager">SimpleCycleManager</Type><BitSize>142528</BitSize><BitOffs>8896</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>FileHandler_1511__read_1522__hFile</Name><Type>UINT</Type><Comment><![CDATA[ File handle of the source file ]]></Comment><BitSize>16</BitSize><BitOffs>151424</BitOffs><Default><Value>0</Value></Default><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>FileHandler_1511__write_1523__cm</Name><Type Namespace="CNM_CycleManager">SimpleCycleManager</Type><BitSize>142528</BitSize><BitOffs>151488</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>FileHandler_1511__write_1523__hFile</Name><Type>UINT</Type><Comment><![CDATA[ File handle of the source file ]]></Comment><BitSize>16</BitSize><BitOffs>294016</BitOffs><Default><Value>0</Value></Default><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><Method><Name>read</Name><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[ Rising edge starts program execution ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>text</Name><Type PointerTo="1">BYTE</Type><BitSize>64</BitSize></Parameter><Parameter><Name>sNetId</Name><Comment><![CDATA[ TwinCAT system network address ]]></Comment><Type Namespace="Tc2_System">T_AmsNetID</Type><BitSize>192</BitSize></Parameter><Parameter><Name>sDirectoryPath</Name><Comment><![CDATA[ CSV destination directory path e.g. 'C:/temp/' ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>sFileName</Name><Comment><![CDATA[ CSV destination file name e.g. 'Dividos' automatically extended by a timestamp ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>readLen</Name><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Local><Name>cm</Name><Type Namespace="CNM_CycleManager">SimpleCycleManager</Type><BitSize>142528</BitSize><Properties><Property><Name>uselocation</Name><Value>FILEHANDLER_1511__READ_1522__CM</Value></Property></Properties></Local><Local><Name>hFile</Name><Comment><![CDATA[ File handle of the source file ]]></Comment><Type>UINT</Type><BitSize>16</BitSize><Properties><Property><Name>uselocation</Name><Value>FILEHANDLER_1511__READ_1522__HFILE</Value></Property></Properties></Local><Local><Name>busy</Name><Type>BOOL</Type><BitSize>8</BitSize></Local><Local><Name>bError</Name><Type>BOOL</Type><BitSize>8</BitSize></Local><Local><Name>nErrId</Name><Type>UDINT</Type><BitSize>32</BitSize></Local><Local><Name>writeString</Name><Type>STRING(255)</Type><BitSize>2048</BitSize></Local><Local><Name>STATE_OPEN_SOURCE_FILE</Name><Type>INT</Type><BitSize>16</BitSize></Local><Local><Name>STATE_WAIT_FILE_OPENED</Name><Type>INT</Type><BitSize>16</BitSize></Local><Local><Name>STATE_READ</Name><Type>INT</Type><BitSize>16</BitSize></Local><Local><Name>STATE_READ_FINISHED</Name><Type>INT</Type><BitSize>16</BitSize></Local><Local><Name>STATE_CLOSE_SOURCE_FILE</Name><Type>INT</Type><BitSize>16</BitSize></Local><Local><Name>STATE_WAIT_FILE_CLOSED</Name><Type>INT</Type><BitSize>16</BitSize></Local><Local><Name>STATE_ERROR</Name><Type>INT</Type><BitSize>16</BitSize></Local></Method><Method><Name>write</Name><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[ Rising edge starts program execution ]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>text</Name><Type PointerTo="1">BYTE</Type><BitSize>64</BitSize></Parameter><Parameter><Name>sNetId</Name><Comment><![CDATA[ TwinCAT system network address ]]></Comment><Type Namespace="Tc2_System">T_AmsNetID</Type><BitSize>192</BitSize></Parameter><Parameter><Name>sDirectoryPath</Name><Comment><![CDATA[ CSV destination directory path e.g. 'C:/temp/' ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>sFileName</Name><Comment><![CDATA[ CSV destination file name e.g. 'Dividos' automatically extended by a timestamp ]]></Comment><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize></Parameter><Local><Name>cm</Name><Type Namespace="CNM_CycleManager">SimpleCycleManager</Type><BitSize>142528</BitSize><Properties><Property><Name>uselocation</Name><Value>FILEHANDLER_1511__WRITE_1523__CM</Value></Property></Properties></Local><Local><Name>hFile</Name><Comment><![CDATA[ File handle of the source file ]]></Comment><Type>UINT</Type><BitSize>16</BitSize><Properties><Property><Name>uselocation</Name><Value>FILEHANDLER_1511__WRITE_1523__HFILE</Value></Property></Properties></Local><Local><Name>busy</Name><Type>BOOL</Type><BitSize>8</BitSize></Local><Local><Name>bError</Name><Type>BOOL</Type><BitSize>8</BitSize></Local><Local><Name>nErrId</Name><Type>UDINT</Type><BitSize>32</BitSize></Local><Local><Name>writeString</Name><Type>STRING(255)</Type><BitSize>2048</BitSize></Local><Local><Name>STATE_OPEN_SOURCE_FILE</Name><Type>INT</Type><BitSize>16</BitSize></Local><Local><Name>STATE_WAIT_FILE_OPENED</Name><Type>INT</Type><BitSize>16</BitSize></Local><Local><Name>STATE_WRITE</Name><Type>INT</Type><BitSize>16</BitSize></Local><Local><Name>STATE_WRITE_FINISHED</Name><Type>INT</Type><BitSize>16</BitSize></Local><Local><Name>STATE_CLOSE_SOURCE_FILE</Name><Type>INT</Type><BitSize>16</BitSize></Local><Local><Name>STATE_WAIT_FILE_CLOSED</Name><Type>INT</Type><BitSize>16</BitSize></Local><Local><Name>STATE_ERROR</Name><Type>INT</Type><BitSize>16</BitSize></Local></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_AoC">IHaveValue</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_AbstractObject">IObject</ExtendsType><Method><Name>__getvalue</Name><ReturnType>LREAL</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setvalue</Name><Parameter><Name>value</Name><Type>LREAL</Type><BitSize>64</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>TcPlcInterfaceId</Name><Value>3828</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_AoC">IStringContainer</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_AoC">IHaveValue</ExtendsType><Method><Name>__gettext</Name><ReturnType>STRING(255)</ReturnType><ReturnBitSize>2048</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__settext</Name><Parameter><Name>text</Name><Type>STRING(255)</Type><BitSize>2048</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>TcPlcInterfaceId</Name><Value>3823</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_AoC">IStringContainerList</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_AbstractObject">IObject</ExtendsType><Method><Name>__gethasElement</Name><Comment><![CDATA[

short summary
=================
This property returns ``TRUE`` if the collection has any element.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getisEmpty</Name><Comment><![CDATA[

short summary
=================
This property returns ``TRUE`` if the collection is empty.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getsize</Name><Comment><![CDATA[

short summary
=================
This property returns the number of elements inside this collection.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType>LWORD</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>append</Name><Comment><![CDATA[

short summary
=================
This methode adds the given CNM_AbstractObject.IObject to the end of the list.
Example: 
Given a list that looks like this: (Head->) A B C (<- End),
calling append(D) on this list will place the D at the and,
making it the new End: (Head->) A B C D(<- End)

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>stringcontainer</Name><Comment><![CDATA[The object to be appended]]></Comment><Type Namespace="CNM_AoC">IStringContainer</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>appendCollection</Name><Comment><![CDATA[

short summary
=================
This methode adds all elements of the given collection to the end of this list.
Example:
For the list1: A B C and list2: D E F will be after list1.appendCollection(list2):
A B C D E F. Notice the elements are still in the same order they where befor on each subsection.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>collectionToAppend</Name><Comment><![CDATA[The collection to be appended]]></Comment><Type Namespace="CNM_CollectionInterfaces">ICollection</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>clear</Name><Comment><![CDATA[

short summary
=================
This methode clears/deletes all clearable data from this object.
Example:
A list: 1 2 3 after list.clear() will have no remaining items, isEmpty = true.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment></Method><Method><Name>containsEqualStringContainer</Name><Comment><![CDATA[

short summary
=================
This methode checks if a given object is contained in the collection. 
The object is inside if the collection contains an object where the default comperator of the objects returns EQUAL on compareTo!

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``FALSE``: list does not contain an equal object
    ``TRUE``: list does contain an equal object

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Parameter><Name>stringcontainer</Name><Comment><![CDATA[the object to be checked if it exists inside the collection]]></Comment><Type Namespace="CNM_AoC">IStringContainer</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>containsStringContainer</Name><Comment><![CDATA[

short summary
=================
This methode checks if a given object is contained in the collection. 
The object is inside if the collection contains an object of equal hashcode!

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``FALSE``: list does not contain given object,
    ``TRUE``: list does contain given object

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Parameter><Name>stringcontainer</Name><Comment><![CDATA[the object to be checked if it exists inside the collection]]></Comment><Type Namespace="CNM_AoC">IStringContainer</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>dequeue</Name><Comment><![CDATA[

short summary
=================
This property returns the last object in the first and removes it from the list. Can be seen as opposite of prepend.
Example:
On a list: (Head -->) A B C, list.dequeue will return A.
Example 2:
If you call prepend(x), a dequeue right after will return x.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AoC">IStringContainer</ReturnType><ReturnBitSize>64</ReturnBitSize></Method><Method><Name>forEach</Name><Comment><![CDATA[

short summary
=================
Method to perform a given action on all objects inside the collection.
Needs to reset the execution flag between calls.
Action to perform needs to implement :ref:`IApplier`.
Example:
You have a list of numbers: 1 2 3 and a ConcreteIncrementApplier that can take  a number and increment it. 
Calling list.forEach(TRUE, ConcreteIncrementApplier) will increment all numbers in the list, becoming: 2 3 4.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: CNM_ReturnTypes.ExecutionState

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the forEach loop]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>applier</Name><Comment><![CDATA[the applier (action) to be used on all obejcts in the collection]]></Comment><Type Namespace="CNM_CollectionInterfaces">IApplier</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>getIndexOf</Name><Comment><![CDATA[

short summary
=================
This methode returns ths index of the first object that is equal to the given.
Example:
A list of: 1 2 3 after list.getIndexOf(1) will return: index=>0 and return IndexBounds.IN_BOUNDS
Example 2:
A list of: 1 2 3 after list.getIndexOf(4) will return: index=>3 and return IndexBounds.OUT_OF_BOUNDS

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``SingleExecutionResult.SUCCESS``: object found
    ``SingleExecutionResult.ERROR``: object couldn't be found in the list, index is undefined

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>stringcontainer</Name><Comment><![CDATA[the object to get the index from]]></Comment><Type Namespace="CNM_AoC">IStringContainer</Type><BitSize>64</BitSize></Parameter><Parameter><Name>index</Name><Comment><![CDATA[the index of the object inside the collection]]></Comment><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter></Method><Method><Name>getStringContainerAt</Name><Comment><![CDATA[

short summary
=================
This methode returns the object at the given index.
Returned objects can be modified, but not replaced! To replace an object use replaceObjectAt.
Example:
A list of: 1 2 3 after list.getObjectAt(1) will return: object=>2 and return SingleExecutionResult.SUCCESS
Example 2:
A list of: 1 2 3 after list.getObjectAt(3) will return: object=>NULL and return SingleExecutionResult.ERROR

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``SingleExecutionResult.SUCCESS``: index was valid
    ``SingleExecutionResult.ERROR``: index was not valid, returned object is undefined

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>index</Name><Comment><![CDATA[the index to access the object from]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>stringcontainer</Name><Comment><![CDATA[the object at the given index]]></Comment><Type Namespace="CNM_AoC">IStringContainer</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter></Method><Method><Name>insertStringContainerAt</Name><Comment><![CDATA[

short summary
=================
This methode adds the given object at the given index. 
Will shift the other data starting at given index to the right.
List Lenght will be incremented.
Example:
A list of: 1 2 3 after list.insertObjectAt(1, object:=4) will become: 1 4 2 3 and return SingleExecutionResult.SUCCESS
Example 2:
A list of: 1 2 3 after list.insertObjectAt(3, object:=4) will become: 1 2 3 4 and return SingleExecutionResult.SUCCESS
Example 3:
A list of: 1 2 3 after list.insertObjectAt(5, object:=4) will become: 1 2 3 and return SingleExecutionResult.ERROR

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``SingleExecutionResult.SUCCESS``: index was valid, object inserted
    ``SingleExecutionResult.ERROR``: index out of bounds, list not changed

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>index</Name><Comment><![CDATA[the index to insert the object at]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>stringcontainer</Name><Comment><![CDATA[the object to be added]]></Comment><Type Namespace="CNM_AoC">IStringContainer</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>inverseSort</Name><Comment><![CDATA[

short summary
=================
This method sorts the Sortable in the inverted order, so from great to low
.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: ``ABORTED``: While inverse was pending,execute had a falling edge,
	``BUSY``: Inverse is in progress
	``ERROR``: Inverse was not able to finish (p.e. List changed) call inverse(false) to reset
	``IDLE``: Currently invert is not in progress
	``SUCCESS``: Inversing was finished 
]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the inverting, needs to be active until the ExecutionState is noz longer busy]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter></Method><Method><Name>invert</Name><Comment><![CDATA[

short summary
=================
Inverts the order of the elements inside the object. Does not apply any kind of sorting, only reverses.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================

]]></Comment></Method><Method><Name>iterate</Name><Comment><![CDATA[

short summary
=================
This methode returns the next object in the iteration and returns an execution state.
Example:
You have a list: 1 2 3
the first iterate call will return CNM_ReturnTypes.BUSY and object = 1
the second iterate call will return CNM_ReturnTypes.BUSY and object = 2
the third iterate call will return CNM_ReturnTypes.SUCCESS and object = 3

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the iterate]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>stringcontainer</Name><Comment><![CDATA[the returned object of the iteration]]></Comment><Type Namespace="CNM_AoC">IStringContainer</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter></Method><Method><Name>pop</Name><Comment><![CDATA[

short summary
=================
This property returns the last object in the list and removes it from the list. Can be seen as opposite of append.
Example:
On a list: (Head -->) A B C, list.pop will return C.
Example 2:
If you call append(x), a pop right after will return x.
May return a null pointer if list is empty

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AoC">IStringContainer</ReturnType><ReturnBitSize>64</ReturnBitSize></Method><Method><Name>prepend</Name><Comment><![CDATA[

short summary
=================
This methode adds the given obejct to the end of the list.
Example: 
Given a list that looks like this: (Head->) A B C (<- End),
calling prepend(D) on this list will place the D at start,
making it the new Head: (Head->) D A B C (<- End)

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``SingleExecutionResult.SUCCESS``: prepend was successful
	``SingleExecutionResult.ERROR``: allocation of memory for new object failed
	
]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>stringcontainer</Name><Comment><![CDATA[The object to be prepended]]></Comment><Type Namespace="CNM_AoC">IStringContainer</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>prependCollection</Name><Comment><![CDATA[

short summary
=================
This methode adds all elements of the given collection to the start of this list. 
Example:
For the list1: A B C and list2: D E F will be after list1.prependCollection(list2):
D E F A B C. Notice the elements are still in the same order they where befor on each subsection.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``SingleExecutionResult.SUCCESS``: prependCollection was successful
	``SingleExecutionResult.ERROR``: could not allocate memory for all new elements, list is left unchanged

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>collectionToPrepend</Name><Comment><![CDATA[The collection to be prepended]]></Comment><Type Namespace="CNM_CollectionInterfaces">ICollection</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>remove</Name><Comment><![CDATA[

short summary
=================
This methode removes the first instance of the given object from the list.
Compares objects with hash value.
For example a Linked List: A B C A A D will on remove(A) becomes: B C A A D

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>stringcontainer</Name><Comment><![CDATA[The object to be removed from the list]]></Comment><Type Namespace="CNM_AoC">IStringContainer</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>removeStringContainerAt</Name><Comment><![CDATA[

short summary
=================
This methode removes the element at the given index. 
Will shift the remaining data to the left (no empty space in list)
List Length will be decremented.
Example:
A list of: 1 2 3 after list.removeObjectAt(1) will become: 1 3 and return IndexBounds.IN_BOUNDS
Example 2:
A list of: 1 2 3 after list.removeObjectAt(3) will reamin: 1 2 3 and return IndexBounds.OUT_OF_BOUNDS

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``SingleExecutionResult.SUCCESS``: Element removed from index
    ``SingleExecutionResult.ERROR``: index out of bound, no object removed

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>index</Name><Comment><![CDATA[the index to remove the object from]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>replaceStringContainerAt</Name><Comment><![CDATA[

short summary
=================
This methode replaces the Interface reference inside the collection at the given index with the given Interface.
Example:
A list of: 1 2 3 after list.replaceObjectAt(1, withObject:=4) will become: 1 4 3 and return SingleExecutionResult.SUCCESS
Example 2:
A list of: 1 2 3 after list.replaceObjectAt(3, withObject:=4) will remain: 1 2 3 and return SingleExecutionResult.ERROR

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``SingleExecutionResult.SUCCESS``: index valid, element at index replaced with ``withObject``
    ``SingleExecutionResult.ERROR``: ìndex out of bounds, nothing changed

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>index</Name><Comment><![CDATA[the index to replace the object at]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>withStringContainer</Name><Comment><![CDATA[the object to be at this index instead]]></Comment><Type Namespace="CNM_AoC">IStringContainer</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>setSorter</Name><Comment><![CDATA[

short summary
=================
This methode can replace the default sorter for a custom one. Check :ref:`IListSorter`
Can be used for performant sorting algorithms if more about the data structure is known.

.. attention:: 
	For implementations: **IListSorter is an empty interface and you should extend it with custom interfaces for each type of list.**
	For LinkedList see :ref:`ILinkedListSorter`. 
	Your implementation should then use this extended interface and the setter should check for compability. 
	
.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``THIS^`` :ref:`IList`

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">ISortable</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>sorter</Name><Comment><![CDATA[The instance of the sorter to be used to sort the list]]></Comment><Type Namespace="CNM_CollectionInterfaces">IArrayListSorter</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>sort</Name><Comment><![CDATA[

short summary
=================
This method sorts the data structure. 
This can take many cycles and should be called until the CNM_ReturnTypes.ExecutionState is no longer ``BUSY``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``ABORTED``: While sort was pending,execute had a falling edge,
	``BUSY``: Sort is in progress
	``ERROR``: Sort was not able to finish (p.e. List changed) call sort(false) to reset
	``IDLE``: Currently no sort in progress
	``SUCCESS``: Sorting was finished 

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the sorting, needs to be active until the ExecutionState is SUCCESS]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter></Method><Method><Name>sortWithComparator</Name><Comment><![CDATA[

short summary
=================
This method sorts the data structure. 
It uses the passed Comperator to sort the structure.
This can take many cycles and should be called until the CNM_ReturnTypes.ExecutionState is no longer ``BUSY``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``ABORTED``: While sort was pending,execute had a falling edge,
	``BUSY``: Sort is in progress
	``ERROR``: Sort was not able to finish (p.e. List changed) call sort(false) to reset
	``IDLE``: Currently no sort in progress
	``SUCCESS``: Sorting was finished 

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the sorting, needs to be active until the ExecutionState is SUCCESS]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>comparator</Name><Comment><![CDATA[the comparator that should be used for the sort. Must not be changed while sort is in process]]></Comment><Type Namespace="CNM_AbstractObject">IComparator</Type><BitSize>64</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_AoC">ILine</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_AoC">IStringContainer</ExtendsType><Method><Name>splitBy</Name><ReturnType Namespace="CNM_AoC">IStringContainerList</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>splitter</Name><Type>STRING(255)</Type><BitSize>2048</BitSize></Parameter><Parameter><Name>addEmptyEntries</Name><Type>BOOL</Type><BitSize>8</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_AoC">ILineList</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_AbstractObject">IObject</ExtendsType><Method><Name>__gethasElement</Name><Comment><![CDATA[

short summary
=================
This property returns ``TRUE`` if the collection has any element.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getisEmpty</Name><Comment><![CDATA[

short summary
=================
This property returns ``TRUE`` if the collection is empty.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getsize</Name><Comment><![CDATA[

short summary
=================
This property returns the number of elements inside this collection.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType>LWORD</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>append</Name><Comment><![CDATA[

short summary
=================
This methode adds the given CNM_AbstractObject.IObject to the end of the list.
Example: 
Given a list that looks like this: (Head->) A B C (<- End),
calling append(D) on this list will place the D at the and,
making it the new End: (Head->) A B C D(<- End)

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>line</Name><Comment><![CDATA[The object to be appended]]></Comment><Type Namespace="CNM_AoC">ILine</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>appendCollection</Name><Comment><![CDATA[

short summary
=================
This methode adds all elements of the given collection to the end of this list.
Example:
For the list1: A B C and list2: D E F will be after list1.appendCollection(list2):
A B C D E F. Notice the elements are still in the same order they where befor on each subsection.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>collectionToAppend</Name><Comment><![CDATA[The collection to be appended]]></Comment><Type Namespace="CNM_CollectionInterfaces">ICollection</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>clear</Name><Comment><![CDATA[

short summary
=================
This methode clears/deletes all clearable data from this object.
Example:
A list: 1 2 3 after list.clear() will have no remaining items, isEmpty = true.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment></Method><Method><Name>containsEqualLine</Name><Comment><![CDATA[

short summary
=================
This methode checks if a given object is contained in the collection. 
The object is inside if the collection contains an object where the default comperator of the objects returns EQUAL on compareTo!

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``FALSE``: list does not contain an equal object
    ``TRUE``: list does contain an equal object

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Parameter><Name>line</Name><Comment><![CDATA[the object to be checked if it exists inside the collection]]></Comment><Type Namespace="CNM_AoC">ILine</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>containsLine</Name><Comment><![CDATA[

short summary
=================
This methode checks if a given object is contained in the collection. 
The object is inside if the collection contains an object of equal hashcode!

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``FALSE``: list does not contain given object,
    ``TRUE``: list does contain given object

]]></Comment><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Parameter><Name>line</Name><Comment><![CDATA[the object to be checked if it exists inside the collection]]></Comment><Type Namespace="CNM_AoC">ILine</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>dequeue</Name><Comment><![CDATA[

short summary
=================
This property returns the last object in the first and removes it from the list. Can be seen as opposite of prepend.
Example:
On a list: (Head -->) A B C, list.dequeue will return A.
Example 2:
If you call prepend(x), a dequeue right after will return x.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AoC">ILine</ReturnType><ReturnBitSize>64</ReturnBitSize></Method><Method><Name>forEach</Name><Comment><![CDATA[

short summary
=================
Method to perform a given action on all objects inside the collection.
Needs to reset the execution flag between calls.
Action to perform needs to implement :ref:`IApplier`.
Example:
You have a list of numbers: 1 2 3 and a ConcreteIncrementApplier that can take  a number and increment it. 
Calling list.forEach(TRUE, ConcreteIncrementApplier) will increment all numbers in the list, becoming: 2 3 4.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: CNM_ReturnTypes.ExecutionState

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the forEach loop]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>applier</Name><Comment><![CDATA[the applier (action) to be used on all obejcts in the collection]]></Comment><Type Namespace="CNM_CollectionInterfaces">IApplier</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>getIndexOf</Name><Comment><![CDATA[

short summary
=================
This methode returns ths index of the first object that is equal to the given.
Example:
A list of: 1 2 3 after list.getIndexOf(1) will return: index=>0 and return IndexBounds.IN_BOUNDS
Example 2:
A list of: 1 2 3 after list.getIndexOf(4) will return: index=>3 and return IndexBounds.OUT_OF_BOUNDS

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``SingleExecutionResult.SUCCESS``: object found
    ``SingleExecutionResult.ERROR``: object couldn't be found in the list, index is undefined

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>line</Name><Comment><![CDATA[the object to get the index from]]></Comment><Type Namespace="CNM_AoC">ILine</Type><BitSize>64</BitSize></Parameter><Parameter><Name>index</Name><Comment><![CDATA[the index of the object inside the collection]]></Comment><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter></Method><Method><Name>getLineAt</Name><Comment><![CDATA[

short summary
=================
This methode returns the object at the given index.
Returned objects can be modified, but not replaced! To replace an object use replaceObjectAt.
Example:
A list of: 1 2 3 after list.getObjectAt(1) will return: object=>2 and return SingleExecutionResult.SUCCESS
Example 2:
A list of: 1 2 3 after list.getObjectAt(3) will return: object=>NULL and return SingleExecutionResult.ERROR

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``SingleExecutionResult.SUCCESS``: index was valid
    ``SingleExecutionResult.ERROR``: index was not valid, returned object is undefined

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>index</Name><Comment><![CDATA[the index to access the object from]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>line</Name><Comment><![CDATA[the object at the given index]]></Comment><Type Namespace="CNM_AoC">ILine</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter></Method><Method><Name>insertLineAt</Name><Comment><![CDATA[

short summary
=================
This methode adds the given object at the given index. 
Will shift the other data starting at given index to the right.
List Lenght will be incremented.
Example:
A list of: 1 2 3 after list.insertObjectAt(1, object:=4) will become: 1 4 2 3 and return SingleExecutionResult.SUCCESS
Example 2:
A list of: 1 2 3 after list.insertObjectAt(3, object:=4) will become: 1 2 3 4 and return SingleExecutionResult.SUCCESS
Example 3:
A list of: 1 2 3 after list.insertObjectAt(5, object:=4) will become: 1 2 3 and return SingleExecutionResult.ERROR

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``SingleExecutionResult.SUCCESS``: index was valid, object inserted
    ``SingleExecutionResult.ERROR``: index out of bounds, list not changed

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>index</Name><Comment><![CDATA[the index to insert the object at]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>line</Name><Comment><![CDATA[the object to be added]]></Comment><Type Namespace="CNM_AoC">ILine</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>inverseSort</Name><Comment><![CDATA[

short summary
=================
This method sorts the Sortable in the inverted order, so from great to low
.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================
:return: ``ABORTED``: While inverse was pending,execute had a falling edge,
	``BUSY``: Inverse is in progress
	``ERROR``: Inverse was not able to finish (p.e. List changed) call inverse(false) to reset
	``IDLE``: Currently invert is not in progress
	``SUCCESS``: Inversing was finished 
]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the inverting, needs to be active until the ExecutionState is noz longer busy]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter></Method><Method><Name>invert</Name><Comment><![CDATA[

short summary
=================
Inverts the order of the elements inside the object. Does not apply any kind of sorting, only reverses.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=========================

]]></Comment></Method><Method><Name>iterate</Name><Comment><![CDATA[

short summary
=================
This methode returns the next object in the iteration and returns an execution state.
Example:
You have a list: 1 2 3
the first iterate call will return CNM_ReturnTypes.BUSY and object = 1
the second iterate call will return CNM_ReturnTypes.BUSY and object = 2
the third iterate call will return CNM_ReturnTypes.SUCCESS and object = 3

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the iterate]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>line</Name><Comment><![CDATA[the returned object of the iteration]]></Comment><Type Namespace="CNM_AoC">ILine</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter></Method><Method><Name>pop</Name><Comment><![CDATA[

short summary
=================
This property returns the last object in the list and removes it from the list. Can be seen as opposite of append.
Example:
On a list: (Head -->) A B C, list.pop will return C.
Example 2:
If you call append(x), a pop right after will return x.
May return a null pointer if list is empty

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AoC">ILine</ReturnType><ReturnBitSize>64</ReturnBitSize></Method><Method><Name>prepend</Name><Comment><![CDATA[

short summary
=================
This methode adds the given obejct to the end of the list.
Example: 
Given a list that looks like this: (Head->) A B C (<- End),
calling prepend(D) on this list will place the D at start,
making it the new Head: (Head->) D A B C (<- End)

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``SingleExecutionResult.SUCCESS``: prepend was successful
	``SingleExecutionResult.ERROR``: allocation of memory for new object failed
	
]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>line</Name><Comment><![CDATA[The object to be prepended]]></Comment><Type Namespace="CNM_AoC">ILine</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>prependCollection</Name><Comment><![CDATA[

short summary
=================
This methode adds all elements of the given collection to the start of this list. 
Example:
For the list1: A B C and list2: D E F will be after list1.prependCollection(list2):
D E F A B C. Notice the elements are still in the same order they where befor on each subsection.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``SingleExecutionResult.SUCCESS``: prependCollection was successful
	``SingleExecutionResult.ERROR``: could not allocate memory for all new elements, list is left unchanged

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>collectionToPrepend</Name><Comment><![CDATA[The collection to be prepended]]></Comment><Type Namespace="CNM_CollectionInterfaces">ICollection</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>remove</Name><Comment><![CDATA[

short summary
=================
This methode removes the first instance of the given object from the list.
Compares objects with hash value.
For example a Linked List: A B C A A D will on remove(A) becomes: B C A A D

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><Parameter><Name>line</Name><Comment><![CDATA[The object to be removed from the list]]></Comment><Type Namespace="CNM_AoC">ILine</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>removeLineAt</Name><Comment><![CDATA[

short summary
=================
This methode removes the element at the given index. 
Will shift the remaining data to the left (no empty space in list)
List Length will be decremented.
Example:
A list of: 1 2 3 after list.removeObjectAt(1) will become: 1 3 and return IndexBounds.IN_BOUNDS
Example 2:
A list of: 1 2 3 after list.removeObjectAt(3) will reamin: 1 2 3 and return IndexBounds.OUT_OF_BOUNDS

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``SingleExecutionResult.SUCCESS``: Element removed from index
    ``SingleExecutionResult.ERROR``: index out of bound, no object removed

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>index</Name><Comment><![CDATA[the index to remove the object from]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>replaceLineAt</Name><Comment><![CDATA[

short summary
=================
This methode replaces the Interface reference inside the collection at the given index with the given Interface.
Example:
A list of: 1 2 3 after list.replaceObjectAt(1, withObject:=4) will become: 1 4 3 and return SingleExecutionResult.SUCCESS
Example 2:
A list of: 1 2 3 after list.replaceObjectAt(3, withObject:=4) will remain: 1 2 3 and return SingleExecutionResult.ERROR

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``SingleExecutionResult.SUCCESS``: index valid, element at index replaced with ``withObject``
    ``SingleExecutionResult.ERROR``: ìndex out of bounds, nothing changed

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>index</Name><Comment><![CDATA[the index to replace the object at]]></Comment><Type>LWORD</Type><BitSize>64</BitSize></Parameter><Parameter><Name>withLine</Name><Comment><![CDATA[the object to be at this index instead]]></Comment><Type Namespace="CNM_AoC">ILine</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>setSorter</Name><Comment><![CDATA[

short summary
=================
This methode can replace the default sorter for a custom one. Check :ref:`IListSorter`
Can be used for performant sorting algorithms if more about the data structure is known.

.. attention:: 
	For implementations: **IListSorter is an empty interface and you should extend it with custom interfaces for each type of list.**
	For LinkedList see :ref:`ILinkedListSorter`. 
	Your implementation should then use this extended interface and the setter should check for compability. 
	
.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``THIS^`` :ref:`IList`

]]></Comment><ReturnType Namespace="CNM_CollectionInterfaces">ISortable</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>sorter</Name><Comment><![CDATA[The instance of the sorter to be used to sort the list]]></Comment><Type Namespace="CNM_CollectionInterfaces">IArrayListSorter</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>sort</Name><Comment><![CDATA[

short summary
=================
This method sorts the data structure. 
This can take many cycles and should be called until the CNM_ReturnTypes.ExecutionState is no longer ``BUSY``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``ABORTED``: While sort was pending,execute had a falling edge,
	``BUSY``: Sort is in progress
	``ERROR``: Sort was not able to finish (p.e. List changed) call sort(false) to reset
	``IDLE``: Currently no sort in progress
	``SUCCESS``: Sorting was finished 

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the sorting, needs to be active until the ExecutionState is SUCCESS]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter></Method><Method><Name>sortWithComparator</Name><Comment><![CDATA[

short summary
=================
This method sorts the data structure. 
It uses the passed Comperator to sort the structure.
This can take many cycles and should be called until the CNM_ReturnTypes.ExecutionState is no longer ``BUSY``.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return: ``ABORTED``: While sort was pending,execute had a falling edge,
	``BUSY``: Sort is in progress
	``ERROR``: Sort was not able to finish (p.e. List changed) call sort(false) to reset
	``IDLE``: Currently no sort in progress
	``SUCCESS``: Sorting was finished 

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Comment><![CDATA[control bit to start or abort the sorting, needs to be active until the ExecutionState is SUCCESS]]></Comment><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Parameter><Name>comparator</Name><Comment><![CDATA[the comparator that should be used for the sort. Must not be changed while sort is in process]]></Comment><Type Namespace="CNM_AbstractObject">IComparator</Type><BitSize>64</BitSize></Parameter></Method></DataType><DataType><Name Namespace="CNM_AoC">AbstractSolver</Name><BitSize>953472</BitSize><SubItem><Name>io</Name><Type Namespace="CNM_AoC">FileHandler</Type><BitSize>294080</BitSize><BitOffs>64</BitOffs></SubItem><SubItem><Name>bufferRead</Name><Type>STRING(64000)</Type><BitSize>512008</BitSize><BitOffs>294144</BitOffs><Default><String /></Default></SubItem><SubItem><Name>bufferWrite</Name><Type>STRING(255)</Type><BitSize>2048</BitSize><BitOffs>806152</BitOffs><Default><String /></Default></SubItem><SubItem><Name>cm</Name><Type Namespace="CNM_CycleManager">SimpleCycleManager</Type><BitSize>142528</BitSize><BitOffs>808256</BitOffs></SubItem><SubItem><Name>lines</Name><Type Namespace="CNM_AoC">ILineList</Type><BitSize>64</BitSize><BitOffs>950784</BitOffs></SubItem><SubItem><Name>inoutPath</Name><Type>STRING(80)</Type><BitSize>648</BitSize><BitOffs>950848</BitOffs></SubItem><SubItem><Name>snetId</Name><Type>STRING(80)</Type><BitSize>648</BitSize><BitOffs>951496</BitOffs></SubItem><SubItem><Name>inputFile</Name><Type>STRING(80)</Type><BitSize>648</BitSize><BitOffs>952144</BitOffs></SubItem><SubItem><Name>outputFile</Name><Type>STRING(80)</Type><BitSize>648</BitSize><BitOffs>952792</BitOffs><Default><String>solution.txt</String></Default></SubItem><Method><Name>solve</Name><Parameter><Name>step</Name><Type>DINT</Type><BitSize>32</BitSize></Parameter></Method><Method><Name>writeSolution</Name></Method><Method><Name>run</Name><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionState</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>execute</Name><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Local><Name>READ_INPUT</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>GET_LINES</Name><Type>DINT</Type><BitSize>32</BitSize></Local></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_AoC">IHaveUlintValue</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_AbstractObject">IObject</ExtendsType><Method><Name>__getvalue</Name><ReturnType>ULINT</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setvalue</Name><Parameter><Name>value</Name><Type>ULINT</Type><BitSize>64</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>TcPlcInterfaceId</Name><Value>3892</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_AoC">UlintValue</Name><BitSize>2688</BitSize><ExtendsType Namespace="CNM_AbstractObject">Object</ExtendsType><Implements Namespace="CNM_AoC">IHaveUlintValue</Implements><SubItem><Name>myValue</Name><Type>ULINT</Type><BitSize>64</BitSize><BitOffs>2624</BitOffs></SubItem><Method><Name>__getvalue</Name><ReturnType>ULINT</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>value</Name><Type>ULINT</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setvalue</Name><Parameter><Name>value</Name><Type>ULINT</Type><BitSize>64</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getclassName</Name><Comment><![CDATA[

short summary
=================
This abstract property returns the class name of the concrete object, 
which is useful for logging/debugging purpose or to check the class name
for ``__DELETE`` in factories (sometimes it's necessary to do more 
than just to free the memory).

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">ClassName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Local><Name>className</Name><Type Namespace="CNM_AbstractObject">ClassName</Type><BitSize>2048</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>compareTo</Name><Comment><![CDATA[

short summary
=================
This method compares a foreign object with the own one, this is needed for sort orders.
The abstract class evaluates every object that is NULL as greater, and all other objects as equal. 

.. attention:: 
	For derivations: **If a derived class needs sorting this method must be overwritten.** 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return:``SMALLER``: ``THIS`` precedes in order,
``EQUAL``: ``THIS`` and ``object`` at the same position in order,
``GREATER``: ``THIS`` is after in order.
Checkout the library CNM_ReturnTypes.

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">ComparationResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>object</Name><Comment><![CDATA[ foreign objet to compare]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Local><Name>other</Name><Type Namespace="CNM_AoC">IHaveValue</Type><BitSize>64</BitSize></Local></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_AoC">IHaveLintValue</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_AbstractObject">IObject</ExtendsType><Method><Name>__getvalue</Name><ReturnType>LINT</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setvalue</Name><Parameter><Name>value</Name><Type>LINT</Type><BitSize>64</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>TcPlcInterfaceId</Name><Value>3912</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_AoC">LintValue</Name><BitSize>2688</BitSize><ExtendsType Namespace="CNM_AbstractObject">Object</ExtendsType><Implements Namespace="CNM_AoC">IHaveLintValue</Implements><SubItem><Name>myValue</Name><Type>LINT</Type><BitSize>64</BitSize><BitOffs>2624</BitOffs></SubItem><Method><Name>__getvalue</Name><ReturnType>LINT</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>value</Name><Type>LINT</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setvalue</Name><Parameter><Name>value</Name><Type>LINT</Type><BitSize>64</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getclassName</Name><Comment><![CDATA[

short summary
=================
This abstract property returns the class name of the concrete object, 
which is useful for logging/debugging purpose or to check the class name
for ``__DELETE`` in factories (sometimes it's necessary to do more 
than just to free the memory).

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">ClassName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Local><Name>className</Name><Type Namespace="CNM_AbstractObject">ClassName</Type><BitSize>2048</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>compareTo</Name><Comment><![CDATA[

short summary
=================
This method compares a foreign object with the own one, this is needed for sort orders.
The abstract class evaluates every object that is NULL as greater, and all other objects as equal. 

.. attention:: 
	For derivations: **If a derived class needs sorting this method must be overwritten.** 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return:``SMALLER``: ``THIS`` precedes in order,
``EQUAL``: ``THIS`` and ``object`` at the same position in order,
``GREATER``: ``THIS`` is after in order.
Checkout the library CNM_ReturnTypes.

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">ComparationResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>object</Name><Comment><![CDATA[ foreign objet to compare]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Local><Name>other</Name><Type Namespace="CNM_AoC">IHaveValue</Type><BitSize>64</BitSize></Local></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name Namespace="CNM_AoC">Value</Name><BitSize>2688</BitSize><ExtendsType Namespace="CNM_AbstractObject">Object</ExtendsType><Implements Namespace="CNM_AoC">IHaveValue</Implements><SubItem><Name>myValue</Name><Type>LREAL</Type><BitSize>64</BitSize><BitOffs>2624</BitOffs></SubItem><Method><Name>__getvalue</Name><ReturnType>LREAL</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>value</Name><Type>LREAL</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setvalue</Name><Parameter><Name>value</Name><Type>LREAL</Type><BitSize>64</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getclassName</Name><Comment><![CDATA[

short summary
=================
This abstract property returns the class name of the concrete object, 
which is useful for logging/debugging purpose or to check the class name
for ``__DELETE`` in factories (sometimes it's necessary to do more 
than just to free the memory).

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">ClassName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Local><Name>className</Name><Type Namespace="CNM_AbstractObject">ClassName</Type><BitSize>2048</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>compareTo</Name><Comment><![CDATA[

short summary
=================
This method compares a foreign object with the own one, this is needed for sort orders.
The abstract class evaluates every object that is NULL as greater, and all other objects as equal. 

.. attention:: 
	For derivations: **If a derived class needs sorting this method must be overwritten.** 

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return:``SMALLER``: ``THIS`` precedes in order,
``EQUAL``: ``THIS`` and ``object`` at the same position in order,
``GREATER``: ``THIS`` is after in order.
Checkout the library CNM_ReturnTypes.

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">ComparationResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>object</Name><Comment><![CDATA[ foreign objet to compare]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Local><Name>other</Name><Type Namespace="CNM_AoC">IHaveValue</Type><BitSize>64</BitSize></Local></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name>NumberParser</Name><BitSize>64</BitSize><Method><Name>getAllNumbersUlint</Name><ReturnType Namespace="CNM_CollectionInterfaces">IArrayList</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>container</Name><Type Namespace="CNM_AoC">IStringContainer</Type><BitSize>64</BitSize></Parameter><Local><Name>index</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>currentParseValue</Name><Type>ULINT</Type><BitSize>64</BitSize></Local><Local><Name>currentLineText</Name><Type>STRING(255)</Type><BitSize>2048</BitSize></Local><Local><Name>found</Name><Type>BOOL</Type><BitSize>8</BitSize></Local><Local><Name>result</Name><Type Namespace="CNM_CollectionInterfaces">IArrayList</Type><BitSize>64</BitSize></Local><Local><Name>pResult</Name><Type Namespace="CNM_Collections" PointerTo="1">ArrayList</Type><BitSize>64</BitSize></Local><Local><Name>pValue</Name><Type Namespace="CNM_AoC" PointerTo="1">UlintValue</Type><BitSize>64</BitSize></Local><Local><Name>value</Name><Type Namespace="CNM_AoC">IHaveUlintValue</Type><BitSize>64</BitSize></Local></Method><Method><Name>getAllNumbersLint</Name><ReturnType Namespace="CNM_CollectionInterfaces">IArrayList</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>container</Name><Type Namespace="CNM_AoC">IStringContainer</Type><BitSize>64</BitSize></Parameter><Local><Name>index</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>currentParseValue</Name><Type>LINT</Type><BitSize>64</BitSize></Local><Local><Name>currentLineText</Name><Type>STRING(255)</Type><BitSize>2048</BitSize></Local><Local><Name>found</Name><Type>BOOL</Type><BitSize>8</BitSize></Local><Local><Name>result</Name><Type Namespace="CNM_CollectionInterfaces">IArrayList</Type><BitSize>64</BitSize></Local><Local><Name>pResult</Name><Type Namespace="CNM_Collections" PointerTo="1">ArrayList</Type><BitSize>64</BitSize></Local><Local><Name>pValue</Name><Type Namespace="CNM_AoC" PointerTo="1">LintValue</Type><BitSize>64</BitSize></Local><Local><Name>value</Name><Type Namespace="CNM_AoC">IHaveLintValue</Type><BitSize>64</BitSize></Local></Method><Method><Name>getAllNumbers</Name><ReturnType Namespace="CNM_CollectionInterfaces">IArrayList</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>container</Name><Type Namespace="CNM_AoC">IStringContainer</Type><BitSize>64</BitSize></Parameter><Local><Name>index</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>currentParseValue</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>currentLineText</Name><Type>STRING(255)</Type><BitSize>2048</BitSize></Local><Local><Name>found</Name><Type>BOOL</Type><BitSize>8</BitSize></Local><Local><Name>result</Name><Type Namespace="CNM_CollectionInterfaces">IArrayList</Type><BitSize>64</BitSize></Local><Local><Name>pResult</Name><Type Namespace="CNM_Collections" PointerTo="1">ArrayList</Type><BitSize>64</BitSize></Local><Local><Name>pValue</Name><Type Namespace="CNM_AoC" PointerTo="1">Value</Type><BitSize>64</BitSize></Local><Local><Name>value</Name><Type Namespace="CNM_AoC">IHaveValue</Type><BitSize>64</BitSize></Local></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name>Day01Solution</Name><BitSize>968128</BitSize><ExtendsType Namespace="CNM_AoC">AbstractSolver</ExtendsType><SubItem><Name>Day01Solution_1484__solve_1497__pathInserted</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>953472</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>Day01Solution_1484__solve_1497__left</Name><Type Namespace="CNM_Collections">ArrayList</Type><BitSize>7232</BitSize><BitOffs>953536</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>Day01Solution_1484__solve_1497__right</Name><Type Namespace="CNM_Collections">ArrayList</Type><BitSize>7232</BitSize><BitOffs>960768</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>Day01Solution_1484__solve_1497__parser</Name><Type>NumberParser</Type><BitSize>64</BitSize><BitOffs>968000</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>Day01Solution_1484__solve_1497__sum</Name><Type>DINT</Type><BitSize>32</BitSize><BitOffs>968064</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><Method><Name>solve</Name><Parameter><Name>step</Name><Type>DINT</Type><BitSize>32</BitSize></Parameter><Local><Name>pathInserted</Name><Type>BOOL</Type><BitSize>8</BitSize><Properties><Property><Name>uselocation</Name><Value>DAY01SOLUTION_1484__SOLVE_1497__PATHINSERTED</Value></Property></Properties></Local><Local><Name>left</Name><Type Namespace="CNM_Collections">ArrayList</Type><BitSize>7232</BitSize><Properties><Property><Name>uselocation</Name><Value>DAY01SOLUTION_1484__SOLVE_1497__LEFT</Value></Property></Properties></Local><Local><Name>right</Name><Type Namespace="CNM_Collections">ArrayList</Type><BitSize>7232</BitSize><Properties><Property><Name>uselocation</Name><Value>DAY01SOLUTION_1484__SOLVE_1497__RIGHT</Value></Property></Properties></Local><Local><Name>parser</Name><Type>NumberParser</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>DAY01SOLUTION_1484__SOLVE_1497__PARSER</Value></Property></Properties></Local><Local><Name>sum</Name><Type>DINT</Type><BitSize>32</BitSize><Properties><Property><Name>uselocation</Name><Value>DAY01SOLUTION_1484__SOLVE_1497__SUM</Value></Property></Properties></Local><Local><Name>parsed</Name><Type Namespace="CNM_CollectionInterfaces">IArrayList</Type><BitSize>64</BitSize></Local><Local><Name>tmpObj</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Local><Name>value1</Name><Type Namespace="CNM_AoC">IHaveValue</Type><BitSize>64</BitSize></Local><Local><Name>value2</Name><Type Namespace="CNM_AoC">IHaveValue</Type><BitSize>64</BitSize></Local><Local><Name>index</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>currentLine</Name><Type Namespace="CNM_AoC">ILine</Type><BitSize>64</BitSize></Local><Local><Name>currentLineObject</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Local><Name>READ_INPUT</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>GET_LINES</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>PARSE</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>SORT_LEFT</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>SORT_RIGHT</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>SOLVE_PART1</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>RESET_FOR_PART2</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>SOLVE_PART2</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>APPEND_SOLUTION</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>WRITE_SOLUTION</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>CLEAN_UP</Name><Type>DINT</Type><BitSize>32</BitSize></Local></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name>Day02Solution</Name><BitSize>960896</BitSize><ExtendsType Namespace="CNM_AoC">AbstractSolver</ExtendsType><SubItem><Name>Day02Solution_3932__solve_3946__pathInserted</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>953472</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>Day02Solution_3932__solve_3946__sequences</Name><Type Namespace="CNM_Collections">ArrayList</Type><BitSize>7232</BitSize><BitOffs>953536</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>Day02Solution_3932__solve_3946__parser</Name><Type>NumberParser</Type><BitSize>64</BitSize><BitOffs>960768</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>Day02Solution_3932__solve_3946__sum</Name><Type>DINT</Type><BitSize>32</BitSize><BitOffs>960832</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><Method><Name>solve</Name><Parameter><Name>step</Name><Type>DINT</Type><BitSize>32</BitSize></Parameter><Local><Name>pathInserted</Name><Type>BOOL</Type><BitSize>8</BitSize><Properties><Property><Name>uselocation</Name><Value>DAY02SOLUTION_3932__SOLVE_3946__PATHINSERTED</Value></Property></Properties></Local><Local><Name>sequences</Name><Type Namespace="CNM_Collections">ArrayList</Type><BitSize>7232</BitSize><Properties><Property><Name>uselocation</Name><Value>DAY02SOLUTION_3932__SOLVE_3946__SEQUENCES</Value></Property></Properties></Local><Local><Name>parser</Name><Type>NumberParser</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>DAY02SOLUTION_3932__SOLVE_3946__PARSER</Value></Property></Properties></Local><Local><Name>sum</Name><Type>DINT</Type><BitSize>32</BitSize><Properties><Property><Name>uselocation</Name><Value>DAY02SOLUTION_3932__SOLVE_3946__SUM</Value></Property></Properties></Local><Local><Name>parsed</Name><Type Namespace="CNM_CollectionInterfaces">IArrayList</Type><BitSize>64</BitSize></Local><Local><Name>tmpObj</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Local><Name>sequence</Name><Type Namespace="CNM_CollectionInterfaces">IArrayList</Type><BitSize>64</BitSize></Local><Local><Name>sequenceCopy</Name><Type Namespace="CNM_CollectionInterfaces">IArrayList</Type><BitSize>64</BitSize></Local><Local><Name>index</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>currentLine</Name><Type Namespace="CNM_AoC">ILine</Type><BitSize>64</BitSize></Local><Local><Name>currentLineObject</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Local><Name>READ_INPUT</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>GET_LINES</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>PARSE</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>SOLVE_PART1</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>RESET_FOR_PART2</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>SOLVE_PART2</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>APPEND_SOLUTION</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>WRITE_SOLUTION</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>CLEAN_UP</Name><Type>DINT</Type><BitSize>32</BitSize></Local></Method><Method><Name>isSequenceValid</Name><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Parameter><Name>sequence</Name><Type Namespace="CNM_CollectionInterfaces">IArrayList</Type><BitSize>64</BitSize></Parameter><Local><Name>tmpObj</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Local><Name>number</Name><Type Namespace="CNM_AoC">IHaveValue</Type><BitSize>64</BitSize></Local><Local><Name>skipped</Name><Type>BOOL</Type><BitSize>8</BitSize></Local><Local><Name>first</Name><Type>BOOL</Type><BitSize>8</BitSize></Local><Local><Name>second</Name><Type>BOOL</Type><BitSize>8</BitSize></Local><Local><Name>lastValue</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>prevLastValue</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>errors</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>currentValue</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>sequenceResult</Name><Type Namespace="CNM_ReturnTypes">SingleExecutionState</Type><BitSize>16</BitSize></Local><Local><Name>order</Name><Comment><![CDATA[-1 falling, 1 rising, 0 unknown]]></Comment><Type>DINT</Type><BitSize>32</BitSize></Local></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name>ISumCollectorLINT</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_AbstractObject">IObject</ExtendsType><Method><Name>__getenabled</Name><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getsum</Name><ReturnType>LINT</ReturnType><ReturnBitSize>64</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setenabled</Name><Parameter><Name>enabled</Name><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setsum</Name><Parameter><Name>sum</Name><Type>LINT</Type><BitSize>64</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>addValue</Name><Parameter><Name>value</Name><Type>LINT</Type><BitSize>64</BitSize></Parameter></Method></DataType><DataType><Name>MulInstruction</Name><BitSize>2816</BitSize><ExtendsType Namespace="CNM_AbstractObject">Object</ExtendsType><Implements Namespace="CNM_CycleManagerInterfaces">ISingleAttempt</Implements><SubItem><Name>myLeft</Name><Type>LINT</Type><BitSize>64</BitSize><BitOffs>2624</BitOffs></SubItem><SubItem><Name>myRight</Name><Type>LINT</Type><BitSize>64</BitSize><BitOffs>2688</BitOffs></SubItem><SubItem><Name>myCollector</Name><Type>ISumCollectorLINT</Type><BitSize>64</BitSize><BitOffs>2752</BitOffs></SubItem><Method><Name>invoke</Name><Comment><![CDATA[

short summary
=================
Invokes the action associated with this interface.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize></Method><Method><Name>__getclassName</Name><Comment><![CDATA[

short summary
=================
This abstract property returns the class name of the concrete object, 
which is useful for logging/debugging purpose or to check the class name
for ``__DELETE`` in factories (sometimes it's necessary to do more 
than just to free the memory).

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">ClassName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Local><Name>className</Name><Type Namespace="CNM_AbstractObject">ClassName</Type><BitSize>2048</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property><Property><Name>VTableOffset</Name><Value>1385192</Value></Property><Property><Name>VfInitVTableIndex</Name><Value>23</Value></Property><Property><Name>enable_dynamic_creation</Name></Property></Properties></DataType><DataType><Name>DoInstruction</Name><BitSize>2688</BitSize><ExtendsType Namespace="CNM_AbstractObject">Object</ExtendsType><Implements Namespace="CNM_CycleManagerInterfaces">ISingleAttempt</Implements><SubItem><Name>myCollector</Name><Type>ISumCollectorLINT</Type><BitSize>64</BitSize><BitOffs>2624</BitOffs></SubItem><Method><Name>invoke</Name><Comment><![CDATA[

short summary
=================
Invokes the action associated with this interface.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize></Method><Method><Name>__getclassName</Name><Comment><![CDATA[

short summary
=================
This abstract property returns the class name of the concrete object, 
which is useful for logging/debugging purpose or to check the class name
for ``__DELETE`` in factories (sometimes it's necessary to do more 
than just to free the memory).

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">ClassName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Local><Name>className</Name><Type Namespace="CNM_AbstractObject">ClassName</Type><BitSize>2048</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property><Property><Name>VTableOffset</Name><Value>1385600</Value></Property><Property><Name>VfInitVTableIndex</Name><Value>23</Value></Property><Property><Name>enable_dynamic_creation</Name></Property></Properties></DataType><DataType><Name>DontInstruction</Name><BitSize>2688</BitSize><ExtendsType Namespace="CNM_AbstractObject">Object</ExtendsType><Implements Namespace="CNM_CycleManagerInterfaces">ISingleAttempt</Implements><SubItem><Name>myCollector</Name><Type>ISumCollectorLINT</Type><BitSize>64</BitSize><BitOffs>2624</BitOffs></SubItem><Method><Name>invoke</Name><Comment><![CDATA[

short summary
=================
Invokes the action associated with this interface.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">SingleExecutionResult</ReturnType><ReturnBitSize>16</ReturnBitSize></Method><Method><Name>__getclassName</Name><Comment><![CDATA[

short summary
=================
This abstract property returns the class name of the concrete object, 
which is useful for logging/debugging purpose or to check the class name
for ``__DELETE`` in factories (sometimes it's necessary to do more 
than just to free the memory).

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">ClassName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Local><Name>className</Name><Type Namespace="CNM_AbstractObject">ClassName</Type><BitSize>2048</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property><Property><Name>VTableOffset</Name><Value>1386008</Value></Property><Property><Name>VfInitVTableIndex</Name><Value>23</Value></Property><Property><Name>enable_dynamic_creation</Name></Property></Properties></DataType><DataType><Name>SumCollectorLINT</Name><BitSize>2752</BitSize><ExtendsType Namespace="CNM_AbstractObject">Object</ExtendsType><Implements>ISumCollectorLINT</Implements><SubItem><Name>isEnabled</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>2624</BitOffs><Default><Bool>true</Bool></Default></SubItem><SubItem><Name>myValue</Name><Type>LINT</Type><BitSize>64</BitSize><BitOffs>2688</BitOffs><Default><Value>0</Value></Default></SubItem><Method><Name>__getsum</Name><ReturnType>LINT</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>sum</Name><Type>LINT</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setsum</Name><Parameter><Name>sum</Name><Type>LINT</Type><BitSize>64</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setenabled</Name><Parameter><Name>enabled</Name><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>addValue</Name><Parameter><Name>value</Name><Type>LINT</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>__getclassName</Name><Comment><![CDATA[

short summary
=================
This abstract property returns the class name of the concrete object, 
which is useful for logging/debugging purpose or to check the class name
for ``__DELETE`` in factories (sometimes it's necessary to do more 
than just to free the memory).

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">ClassName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Local><Name>className</Name><Type Namespace="CNM_AbstractObject">ClassName</Type><BitSize>2048</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getenabled</Name><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Local><Name>enabled</Name><Type>BOOL</Type><BitSize>8</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property><Property><Name>VTableOffset</Name><Value>1381448</Value></Property><Property><Name>VfInitVTableIndex</Name><Value>23</Value></Property><Property><Name>enable_dynamic_creation</Name></Property></Properties></DataType><DataType><Name>Day03Solution</Name><BitSize>963520</BitSize><ExtendsType Namespace="CNM_AoC">AbstractSolver</ExtendsType><SubItem><Name>sumCollector</Name><Type>SumCollectorLINT</Type><BitSize>2752</BitSize><BitOffs>953472</BitOffs></SubItem><SubItem><Name>Day03Solution_3947__solve_3960__pathInserted</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>956224</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>Day03Solution_3947__solve_3960__instructions</Name><Type Namespace="CNM_Collections">ArrayList</Type><BitSize>7232</BitSize><BitOffs>956288</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><Method><Name>tryParseInstruction</Name><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Parameter><Name>text</Name><Type PointerTo="1">BYTE</Type><BitSize>64</BitSize></Parameter><Parameter><Name>maxIndex</Name><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>index</Name><Type ReferenceTo="true">UDINT</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>InOut</Value></Property></Properties></Parameter><Parameter><Name>instruction</Name><Type Namespace="CNM_CycleManagerInterfaces">ISingleAttempt</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Local><Name>mulStart</Name><Type>STRING(80)</Type><BitSize>648</BitSize></Local><Local><Name>doStart</Name><Type>STRING(80)</Type><BitSize>648</BitSize></Local><Local><Name>doNotStart</Name><Type>STRING(80)</Type><BitSize>648</BitSize></Local><Local><Name>digits</Name><Type>STRING(80)</Type><BitSize>648</BitSize></Local><Local><Name>comma</Name><Type>STRING(80)</Type><BitSize>648</BitSize></Local><Local><Name>closedbracket</Name><Type>STRING(80)</Type><BitSize>648</BitSize></Local><Local><Name>validNum</Name><Type>BOOL</Type><BitSize>8</BitSize></Local><Local><Name>numIndex</Name><Type>UDINT</Type><BitSize>32</BitSize></Local><Local><Name>num1</Name><Type>LINT</Type><BitSize>64</BitSize></Local><Local><Name>num2</Name><Type>LINT</Type><BitSize>64</BitSize></Local><Local><Name>mulInst</Name><Type PointerTo="1">MulInstruction</Type><BitSize>64</BitSize></Local><Local><Name>doInst</Name><Type PointerTo="1">DoInstruction</Type><BitSize>64</BitSize></Local><Local><Name>doNotInst</Name><Type PointerTo="1">DontInstruction</Type><BitSize>64</BitSize></Local></Method><Method><Name>solve</Name><Parameter><Name>step</Name><Type>DINT</Type><BitSize>32</BitSize></Parameter><Local><Name>pathInserted</Name><Type>BOOL</Type><BitSize>8</BitSize><Properties><Property><Name>uselocation</Name><Value>DAY03SOLUTION_3947__SOLVE_3960__PATHINSERTED</Value></Property></Properties></Local><Local><Name>instructions</Name><Type Namespace="CNM_Collections">ArrayList</Type><BitSize>7232</BitSize><Properties><Property><Name>uselocation</Name><Value>DAY03SOLUTION_3947__SOLVE_3960__INSTRUCTIONS</Value></Property></Properties></Local><Local><Name>parsed</Name><Type Namespace="CNM_CycleManagerInterfaces">ISingleAttempt</Type><BitSize>64</BitSize></Local><Local><Name>tmpObj</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Local><Name>instruction</Name><Type Namespace="CNM_CycleManagerInterfaces">ISingleAttempt</Type><BitSize>64</BitSize></Local><Local><Name>index</Name><Type>UDINT</Type><BitSize>32</BitSize></Local><Local><Name>currentLine</Name><Type Namespace="CNM_AoC">ILine</Type><BitSize>64</BitSize></Local><Local><Name>currentLineObject</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Local><Name>READ_INPUT</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>GET_LINES</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>PARSE</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>SOLVE_PART1</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>RESET_FOR_PART2</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>SOLVE_PART2</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>APPEND_SOLUTION</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>WRITE_SOLUTION</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>CLEAN_UP</Name><Type>DINT</Type><BitSize>32</BitSize></Local></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name>IChar</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_AbstractObject">IObject</ExtendsType><Method><Name>__getcharAsByte</Name><ReturnType>BYTE</ReturnType><ReturnBitSize>8</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getcharAsString</Name><ReturnType>STRING(1)</ReturnType><ReturnBitSize>16</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method></DataType><DataType><Name>CharObj</Name><BitSize>2688</BitSize><ExtendsType Namespace="CNM_AbstractObject">Object</ExtendsType><Implements>IChar</Implements><SubItem><Name>myChar</Name><Type>STRING(1)</Type><BitSize>16</BitSize><BitOffs>2624</BitOffs></SubItem><Method><Name>__getcharAsByte</Name><ReturnType>BYTE</ReturnType><ReturnBitSize>8</ReturnBitSize><Local><Name>charAsByte</Name><Type>BYTE</Type><BitSize>8</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getcharAsString</Name><ReturnType>STRING(1)</ReturnType><ReturnBitSize>16</ReturnBitSize><Local><Name>charAsString</Name><Type>STRING(1)</Type><BitSize>16</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getclassName</Name><Comment><![CDATA[

short summary
=================
This abstract property returns the class name of the concrete object, 
which is useful for logging/debugging purpose or to check the class name
for ``__DELETE`` in factories (sometimes it's necessary to do more 
than just to free the memory).

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">ClassName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Local><Name>className</Name><Type Namespace="CNM_AbstractObject">ClassName</Type><BitSize>2048</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property><Property><Name>VTableOffset</Name><Value>1386416</Value></Property><Property><Name>VfInitVTableIndex</Name><Value>23</Value></Property><Property><Name>enable_dynamic_creation</Name></Property></Properties></DataType><DataType><Name>I2dArray</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_AbstractObject">IObject</ExtendsType><Method><Name>getObjectAt</Name><ReturnType Namespace="CNM_AbstractObject">IObject</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>y</Name><Comment><![CDATA[dimension 1]]></Comment><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>x</Name><Comment><![CDATA[dimension 2]]></Comment><Type>UDINT</Type><BitSize>32</BitSize></Parameter></Method><Method><Name>isInBounds</Name><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Parameter><Name>x</Name><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>y</Name><Type>UDINT</Type><BitSize>32</BitSize></Parameter></Method><Method><Name>setObjectAt</Name><Parameter><Name>y</Name><Comment><![CDATA[dimension 1]]></Comment><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>x</Name><Comment><![CDATA[dimension 2]]></Comment><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>obj</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter></Method><Properties><Property><Name>TcPlcInterfaceId</Name><Value>4050</Value></Property></Properties></DataType><DataType><Name>Dynamic2dArray</Name><BitSize>2752</BitSize><ExtendsType Namespace="CNM_AbstractObject">Object</ExtendsType><Implements>I2dArray</Implements><SubItem><Name>dim1</Name><Type>UDINT</Type><BitSize>32</BitSize><BitOffs>2624</BitOffs></SubItem><SubItem><Name>dim2</Name><Type>UDINT</Type><BitSize>32</BitSize><BitOffs>2656</BitOffs></SubItem><SubItem><Name>container</Name><Type Namespace="CNM_AbstractObject" PointerTo="1">IObject</Type><BitSize>64</BitSize><BitOffs>2688</BitOffs></SubItem><Method><Name>deepDestruct</Name><Comment><![CDATA[

short summary
=================
This method is a self-destruction if the object was created dynamically.
If the object is a container class, the container content is destroyed with it.
The output NULL is a constant which is always NULL,
this allows a semi-pleasant notation: ``foo.deepDestruct(NULL => foo);``.

.. attention:: 
	For derivations: **If a derived class needs ``deepDestruct`` this method must be overwritten.**
	otherwise it just calls :ref:`Object.destruct`. 


.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================

InOut:
	+-----------------+------+---------+------+------------------------------------------+
	| Scope           | Name | Type    | Init | Comment                                  |
	+=================+======+=========+======+==========================================+
	| Output CONSTANT | NULL | __XWORD | 0    | ``NULL`` is a constant which is always 0 |
	+-----------------+------+---------+------+------------------------------------------+

]]></Comment><Parameter><Name>NULL</Name><Comment><![CDATA[ NULL is a constant which is always 0 ]]></Comment><Type>LWORD</Type><BitSize>64</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Local><Name>indexY</Name><Type>UDINT</Type><BitSize>32</BitSize></Local><Local><Name>indexX</Name><Type>UDINT</Type><BitSize>32</BitSize></Local></Method><Method><Name>isInBounds</Name><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Parameter><Name>x</Name><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>y</Name><Type>UDINT</Type><BitSize>32</BitSize></Parameter></Method><Method><Name>getObjectAt</Name><ReturnType Namespace="CNM_AbstractObject">IObject</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>y</Name><Comment><![CDATA[dimension 1]]></Comment><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>x</Name><Comment><![CDATA[dimension 2]]></Comment><Type>UDINT</Type><BitSize>32</BitSize></Parameter></Method><Method><Name>__getclassName</Name><Comment><![CDATA[

short summary
=================
This abstract property returns the class name of the concrete object, 
which is useful for logging/debugging purpose or to check the class name
for ``__DELETE`` in factories (sometimes it's necessary to do more 
than just to free the memory).

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">ClassName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Local><Name>className</Name><Type Namespace="CNM_AbstractObject">ClassName</Type><BitSize>2048</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>setObjectAt</Name><Parameter><Name>y</Name><Comment><![CDATA[dimension 1]]></Comment><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>x</Name><Comment><![CDATA[dimension 2]]></Comment><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>obj</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property><Property><Name>VTableOffset</Name><Value>1386832</Value></Property><Property><Name>VfInitVTableIndex</Name><Value>23</Value></Property><Property><Name>enable_dynamic_creation</Name></Property></Properties></DataType><DataType><Name>Day04Solution</Name><BitSize>953664</BitSize><ExtendsType Namespace="CNM_AoC">AbstractSolver</ExtendsType><SubItem><Name>xmases</Name><Type>I2dArray</Type><BitSize>64</BitSize><BitOffs>953472</BitOffs></SubItem><SubItem><Name>sizeY</Name><Type>UDINT</Type><BitSize>32</BitSize><BitOffs>953536</BitOffs></SubItem><SubItem><Name>sizeX</Name><Type>UDINT</Type><BitSize>32</BitSize><BitOffs>953568</BitOffs></SubItem><SubItem><Name>Day04Solution_4032__solve_4048__pathInserted</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>953600</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>Day04Solution_4032__solve_4048__sum</Name><Type>DINT</Type><BitSize>32</BitSize><BitOffs>953632</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><Method><Name>solve</Name><Parameter><Name>step</Name><Type>DINT</Type><BitSize>32</BitSize></Parameter><Local><Name>pathInserted</Name><Type>BOOL</Type><BitSize>8</BitSize><Properties><Property><Name>uselocation</Name><Value>DAY04SOLUTION_4032__SOLVE_4048__PATHINSERTED</Value></Property></Properties></Local><Local><Name>sum</Name><Type>DINT</Type><BitSize>32</BitSize><Properties><Property><Name>uselocation</Name><Value>DAY04SOLUTION_4032__SOLVE_4048__SUM</Value></Property></Properties></Local><Local><Name>lineText</Name><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize></Local><Local><Name>tmpObj</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Local><Name>char</Name><Type>IChar</Type><BitSize>64</BitSize></Local><Local><Name>pChar</Name><Type PointerTo="1">CharObj</Type><BitSize>64</BitSize></Local><Local><Name>pXmas</Name><Type PointerTo="1">Dynamic2dArray</Type><BitSize>64</BitSize></Local><Local><Name>curChar</Name><Type>STRING(1)</Type><BitSize>16</BitSize></Local><Local><Name>index</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>indexY</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>currentLine</Name><Type Namespace="CNM_AoC">ILine</Type><BitSize>64</BitSize></Local><Local><Name>currentLineObject</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Local><Name>READ_INPUT</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>GET_LINES</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>PARSE</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>SOLVE_PART1</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>RESET_FOR_PART2</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>SOLVE_PART2</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>APPEND_SOLUTION</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>WRITE_SOLUTION</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>CLEAN_UP</Name><Type>DINT</Type><BitSize>32</BitSize></Local></Method><Method><Name>isX</Name><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Parameter><Name>x</Name><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>y</Name><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Local><Name>char</Name><Type>IChar</Type><BitSize>64</BitSize></Local><Local><Name>index</Name><Type>UDINT</Type><BitSize>32</BitSize></Local><Local><Name>xmas</Name><Type>STRING(4)</Type><BitSize>40</BitSize></Local></Method><Method><Name>toChar</Name><ReturnType>IChar</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>obj</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>isInBounds</Name><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Parameter><Name>x</Name><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>y</Name><Type>UDINT</Type><BitSize>32</BitSize></Parameter></Method><Method><Name>countXMAS</Name><ReturnType>DINT</ReturnType><ReturnBitSize>32</ReturnBitSize><Parameter><Name>x</Name><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>y</Name><Type>UDINT</Type><BitSize>32</BitSize></Parameter><Local><Name>char</Name><Type>IChar</Type><BitSize>64</BitSize></Local><Local><Name>index</Name><Type>UDINT</Type><BitSize>32</BitSize></Local><Local><Name>valids</Name><Type>BOOL</Type><ArrayInfo><LBound>0</LBound><Elements>8</Elements></ArrayInfo><BitSize>64</BitSize></Local><Local><Name>xmas</Name><Type>STRING(4)</Type><BitSize>40</BitSize></Local><Local><Name>__Index__0</Name><Type>DINT</Type><BitSize>32</BitSize></Local></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name>IPage</Name><BitSize>64</BitSize><ExtendsType Namespace="CNM_AbstractObject">IObject</ExtendsType><Method><Name>addSuccessor</Name><Parameter><Name>successor</Name><Type Namespace="CNM_AoC">IHaveValue</Type><BitSize>64</BitSize></Parameter></Method></DataType><DataType><Name>Page</Name><BitSize>10112</BitSize><ExtendsType Namespace="CNM_AbstractObject">Object</ExtendsType><Implements>IPage</Implements><SubItem><Name>myValue</Name><Type>LREAL</Type><BitSize>64</BitSize><BitOffs>2816</BitOffs></SubItem><SubItem><Name>mySuccessors</Name><Type Namespace="CNM_Collections">ArrayList</Type><BitSize>7232</BitSize><BitOffs>2880</BitOffs></SubItem><Method><Name>__getvalue</Name><ReturnType>LREAL</ReturnType><ReturnBitSize>64</ReturnBitSize><Local><Name>value</Name><Type>LREAL</Type><BitSize>64</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setvalue</Name><Parameter><Name>value</Name><Type>LREAL</Type><BitSize>64</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>addSuccessor</Name><Parameter><Name>successor</Name><Type Namespace="CNM_AoC">IHaveValue</Type><BitSize>64</BitSize></Parameter></Method><Method><Name>__getclassName</Name><Comment><![CDATA[

short summary
=================
This abstract property returns the class name of the concrete object, 
which is useful for logging/debugging purpose or to check the class name
for ``__DELETE`` in factories (sometimes it's necessary to do more 
than just to free the memory).

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">ClassName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Local><Name>className</Name><Type Namespace="CNM_AbstractObject">ClassName</Type><BitSize>2048</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>compareTo</Name><Comment><![CDATA[

short summary
=================
This method compares a foreign object with the own one, this is needed for sort orders.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

parameters
=================
:return:``SMALLER``: ``THIS`` precedes in order,
``EQUAL``: ``THIS`` and ``object`` at the same position in order,
``GREATER``: ``THIS`` is after in order.
Checkout the library CNM_ReturnTypes.

]]></Comment><ReturnType Namespace="CNM_ReturnTypes">ComparationResult</ReturnType><ReturnBitSize>16</ReturnBitSize><Parameter><Name>object</Name><Comment><![CDATA[ foreign objet to compare]]></Comment><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Parameter><Local><Name>other</Name><Type Namespace="CNM_AoC">IHaveValue</Type><BitSize>64</BitSize></Local></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property><Property><Name>VTableOffset</Name><Value>1387256</Value></Property><Property><Name>VfInitVTableIndex</Name><Value>23</Value></Property><Property><Name>enable_dynamic_creation</Name></Property></Properties></DataType><DataType><Name>Day05Solution</Name><BitSize>1046720</BitSize><ExtendsType Namespace="CNM_AoC">AbstractSolver</ExtendsType><SubItem><Name>Day05Solution_4096__solve_4109__pathInserted</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>953472</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>Day05Solution_4096__solve_4109__pageOrders</Name><Type Namespace="CNM_Collections">ArrayList</Type><BitSize>7232</BitSize><BitOffs>953536</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>Day05Solution_4096__solve_4109__pages</Name><Type>IPage</Type><ArrayInfo><LBound>0</LBound><Elements>1001</Elements></ArrayInfo><BitSize>64064</BitSize><BitOffs>960768</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>Day05Solution_4096__solve_4109__pageList1</Name><Type Namespace="CNM_Collections">ArrayList</Type><BitSize>7232</BitSize><BitOffs>1024832</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>Day05Solution_4096__solve_4109__pageList2</Name><Type Namespace="CNM_Collections">ArrayList</Type><BitSize>7232</BitSize><BitOffs>1032064</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>Day05Solution_4096__solve_4109__prints</Name><Type Namespace="CNM_Collections">ArrayList</Type><BitSize>7232</BitSize><BitOffs>1039296</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>Day05Solution_4096__solve_4109__currentParseList</Name><Type Namespace="CNM_CollectionInterfaces">IArrayList</Type><BitSize>64</BitSize><BitOffs>1046528</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>Day05Solution_4096__solve_4109__parser</Name><Type>NumberParser</Type><BitSize>64</BitSize><BitOffs>1046592</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>Day05Solution_4096__solve_4109__sum</Name><Type>DINT</Type><BitSize>32</BitSize><BitOffs>1046656</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>Day05Solution_4096__solve_4109__sum2</Name><Type>DINT</Type><BitSize>32</BitSize><BitOffs>1046688</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><Method><Name>solve</Name><Parameter><Name>step</Name><Type>DINT</Type><BitSize>32</BitSize></Parameter><Local><Name>pathInserted</Name><Type>BOOL</Type><BitSize>8</BitSize><Properties><Property><Name>uselocation</Name><Value>DAY05SOLUTION_4096__SOLVE_4109__PATHINSERTED</Value></Property></Properties></Local><Local><Name>pageOrders</Name><Type Namespace="CNM_Collections">ArrayList</Type><BitSize>7232</BitSize><Properties><Property><Name>uselocation</Name><Value>DAY05SOLUTION_4096__SOLVE_4109__PAGEORDERS</Value></Property></Properties></Local><Local><Name>pages</Name><Type>IPage</Type><ArrayInfo><LBound>0</LBound><Elements>1001</Elements></ArrayInfo><BitSize>64064</BitSize><Properties><Property><Name>uselocation</Name><Value>DAY05SOLUTION_4096__SOLVE_4109__PAGES</Value></Property></Properties></Local><Local><Name>pageList1</Name><Type Namespace="CNM_Collections">ArrayList</Type><BitSize>7232</BitSize><Properties><Property><Name>uselocation</Name><Value>DAY05SOLUTION_4096__SOLVE_4109__PAGELIST1</Value></Property></Properties></Local><Local><Name>pageList2</Name><Type Namespace="CNM_Collections">ArrayList</Type><BitSize>7232</BitSize><Properties><Property><Name>uselocation</Name><Value>DAY05SOLUTION_4096__SOLVE_4109__PAGELIST2</Value></Property></Properties></Local><Local><Name>prints</Name><Type Namespace="CNM_Collections">ArrayList</Type><BitSize>7232</BitSize><Properties><Property><Name>uselocation</Name><Value>DAY05SOLUTION_4096__SOLVE_4109__PRINTS</Value></Property></Properties></Local><Local><Name>currentParseList</Name><Type Namespace="CNM_CollectionInterfaces">IArrayList</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>DAY05SOLUTION_4096__SOLVE_4109__CURRENTPARSELIST</Value></Property></Properties></Local><Local><Name>parser</Name><Type>NumberParser</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>DAY05SOLUTION_4096__SOLVE_4109__PARSER</Value></Property></Properties></Local><Local><Name>sum</Name><Type>DINT</Type><BitSize>32</BitSize><Properties><Property><Name>uselocation</Name><Value>DAY05SOLUTION_4096__SOLVE_4109__SUM</Value></Property></Properties></Local><Local><Name>sum2</Name><Type>DINT</Type><BitSize>32</BitSize><Properties><Property><Name>uselocation</Name><Value>DAY05SOLUTION_4096__SOLVE_4109__SUM2</Value></Property></Properties></Local><Local><Name>valid</Name><Type>BOOL</Type><BitSize>8</BitSize></Local><Local><Name>parsed</Name><Type Namespace="CNM_CollectionInterfaces">IArrayList</Type><BitSize>64</BitSize></Local><Local><Name>tmpObj</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Local><Name>tmpValue</Name><Type Namespace="CNM_AoC">IHaveValue</Type><BitSize>64</BitSize></Local><Local><Name>tmpPage</Name><Type>IPage</Type><BitSize>64</BitSize></Local><Local><Name>tmpPage2</Name><Type>IPage</Type><BitSize>64</BitSize></Local><Local><Name>page1</Name><Type>LREAL</Type><BitSize>64</BitSize></Local><Local><Name>page2</Name><Type>LREAL</Type><BitSize>64</BitSize></Local><Local><Name>pPage</Name><Type PointerTo="1">Page</Type><BitSize>64</BitSize></Local><Local><Name>print</Name><Type Namespace="CNM_CollectionInterfaces">IArrayList</Type><BitSize>64</BitSize></Local><Local><Name>pageOrder</Name><Type Namespace="CNM_CollectionInterfaces">IArrayList</Type><BitSize>64</BitSize></Local><Local><Name>sequenceCopy</Name><Type Namespace="CNM_CollectionInterfaces">IArrayList</Type><BitSize>64</BitSize></Local><Local><Name>index</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>currentLine</Name><Type Namespace="CNM_AoC">ILine</Type><BitSize>64</BitSize></Local><Local><Name>currentLineObject</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Local><Name>READ_INPUT</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>GET_LINES</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>PARSE</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>PARSE_PAGES</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>SOLVE_PART12</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>APPEND_SOLUTION</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>WRITE_SOLUTION</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>CLEAN_UP</Name><Type>DINT</Type><BitSize>32</BitSize></Local></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name>Rotation</Name><BitSize>32</BitSize><BaseType>DINT</BaseType><EnumInfo><Text>UP</Text><Enum>0</Enum></EnumInfo><EnumInfo><Text>RIGHT</Text><Enum>1</Enum></EnumInfo><EnumInfo><Text>DOWN</Text><Enum>2</Enum></EnumInfo><EnumInfo><Text>LEFT</Text><Enum>3</Enum></EnumInfo><Properties><Property><Name>qualified_only</Name></Property><Property><Name>strict</Name></Property><Property><Name>generate_implicit_init_function</Name></Property></Properties></DataType><DataType><Name>IGuard</Name><BitSize>64</BitSize><ExtendsType GUID="{18071995-0000-0000-0000-000000000018}">PVOID</ExtendsType><Method><Name>__getdirection</Name><ReturnType>Rotation</ReturnType><ReturnBitSize>32</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getx</Name><ReturnType>DINT</ReturnType><ReturnBitSize>32</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__gety</Name><ReturnType>DINT</ReturnType><ReturnBitSize>32</ReturnBitSize><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setdirection</Name><Parameter><Name>direction</Name><Type>Rotation</Type><BitSize>32</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setx</Name><Parameter><Name>x</Name><Type>DINT</Type><BitSize>32</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__sety</Name><Parameter><Name>y</Name><Type>DINT</Type><BitSize>32</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>walk</Name><Parameter><Name>map</Name><Type>I2dArray</Type><BitSize>64</BitSize></Parameter></Method></DataType><DataType><Name>IMove</Name><BitSize>64</BitSize><ExtendsType GUID="{18071995-0000-0000-0000-000000000018}">PVOID</ExtendsType><Method><Name>tryMove</Name><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Parameter><Name>guard</Name><Type>IGuard</Type><BitSize>64</BitSize></Parameter><Parameter><Name>map</Name><Type>I2dArray</Type><BitSize>64</BitSize></Parameter><Parameter><Name>collision</Name><Type>DINT</Type><BitSize>32</BitSize></Parameter></Method></DataType><DataType><Name>GuardMove</Name><BitSize>2496</BitSize><ExtendsType Namespace="CNM_AbstractObject">Object</ExtendsType><Implements>IMove</Implements><Method><Name>getMoveOffset</Name><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Parameter><Name>x</Name><Type>DINT</Type><BitSize>32</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Parameter><Name>y</Name><Type>DINT</Type><BitSize>32</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter></Method><Method><Name>__getclassName</Name><Comment><![CDATA[

short summary
=================
This abstract property returns the class name of the concrete object, 
which is useful for logging/debugging purpose or to check the class name
for ``__DELETE`` in factories (sometimes it's necessary to do more 
than just to free the memory).

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">ClassName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Local><Name>className</Name><Type Namespace="CNM_AbstractObject">ClassName</Type><BitSize>2048</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getdirection</Name><ReturnType>Rotation</ReturnType><ReturnBitSize>32</ReturnBitSize><Local><Name>direction</Name><Type>Rotation</Type><BitSize>32</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>tryMove</Name><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Parameter><Name>guard</Name><Type>IGuard</Type><BitSize>64</BitSize></Parameter><Parameter><Name>map</Name><Type>I2dArray</Type><BitSize>64</BitSize></Parameter><Parameter><Name>collision</Name><Type>DINT</Type><BitSize>32</BitSize></Parameter><Local><Name>diffX</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>diffY</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>newX</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>newY</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>obj</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Local><Name>val</Name><Type Namespace="CNM_AoC">IHaveValue</Type><BitSize>64</BitSize></Local></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name>MoveUp</Name><BitSize>2496</BitSize><ExtendsType>GuardMove</ExtendsType><Method><Name>__getdirection</Name><ReturnType>Rotation</ReturnType><ReturnBitSize>32</ReturnBitSize><Local><Name>direction</Name><Type>Rotation</Type><BitSize>32</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getclassName</Name><Comment><![CDATA[

short summary
=================
This abstract property returns the class name of the concrete object, 
which is useful for logging/debugging purpose or to check the class name
for ``__DELETE`` in factories (sometimes it's necessary to do more 
than just to free the memory).

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">ClassName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Local><Name>className</Name><Type Namespace="CNM_AbstractObject">ClassName</Type><BitSize>2048</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name>MoveRight</Name><BitSize>2496</BitSize><ExtendsType>GuardMove</ExtendsType><Method><Name>__getdirection</Name><ReturnType>Rotation</ReturnType><ReturnBitSize>32</ReturnBitSize><Local><Name>direction</Name><Type>Rotation</Type><BitSize>32</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getclassName</Name><Comment><![CDATA[

short summary
=================
This abstract property returns the class name of the concrete object, 
which is useful for logging/debugging purpose or to check the class name
for ``__DELETE`` in factories (sometimes it's necessary to do more 
than just to free the memory).

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">ClassName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Local><Name>className</Name><Type Namespace="CNM_AbstractObject">ClassName</Type><BitSize>2048</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name>MoveDown</Name><BitSize>2496</BitSize><ExtendsType>GuardMove</ExtendsType><Method><Name>__getdirection</Name><ReturnType>Rotation</ReturnType><ReturnBitSize>32</ReturnBitSize><Local><Name>direction</Name><Type>Rotation</Type><BitSize>32</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getclassName</Name><Comment><![CDATA[

short summary
=================
This abstract property returns the class name of the concrete object, 
which is useful for logging/debugging purpose or to check the class name
for ``__DELETE`` in factories (sometimes it's necessary to do more 
than just to free the memory).

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">ClassName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Local><Name>className</Name><Type Namespace="CNM_AbstractObject">ClassName</Type><BitSize>2048</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name>MoveLeft</Name><BitSize>2496</BitSize><ExtendsType>GuardMove</ExtendsType><Method><Name>__getdirection</Name><ReturnType>Rotation</ReturnType><ReturnBitSize>32</ReturnBitSize><Local><Name>direction</Name><Type>Rotation</Type><BitSize>32</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getclassName</Name><Comment><![CDATA[

short summary
=================
This abstract property returns the class name of the concrete object, 
which is useful for logging/debugging purpose or to check the class name
for ``__DELETE`` in factories (sometimes it's necessary to do more 
than just to free the memory).

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">ClassName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Local><Name>className</Name><Type Namespace="CNM_AbstractObject">ClassName</Type><BitSize>2048</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name>Guard</Name><BitSize>12864</BitSize><ExtendsType Namespace="CNM_AbstractObject">Object</ExtendsType><Implements>IGuard</Implements><SubItem><Name>myX</Name><Type>DINT</Type><BitSize>32</BitSize><BitOffs>2496</BitOffs></SubItem><SubItem><Name>myY</Name><Type>DINT</Type><BitSize>32</BitSize><BitOffs>2528</BitOffs></SubItem><SubItem><Name>myRotation</Name><Type>Rotation</Type><BitSize>32</BitSize><BitOffs>2560</BitOffs></SubItem><SubItem><Name>up</Name><Type>MoveUp</Type><BitSize>2496</BitSize><BitOffs>2624</BitOffs></SubItem><SubItem><Name>right</Name><Type>MoveRight</Type><BitSize>2496</BitSize><BitOffs>5120</BitOffs></SubItem><SubItem><Name>down</Name><Type>MoveDown</Type><BitSize>2496</BitSize><BitOffs>7616</BitOffs></SubItem><SubItem><Name>left</Name><Type>MoveLeft</Type><BitSize>2496</BitSize><BitOffs>10112</BitOffs></SubItem><SubItem><Name>myMoves</Name><Type>IMove</Type><ArrayInfo><LBound>0</LBound><Elements>4</Elements></ArrayInfo><BitSize>256</BitSize><BitOffs>12608</BitOffs></SubItem><Method><Name>__setdirection</Name><Parameter><Name>direction</Name><Type>Rotation</Type><BitSize>32</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getdirection</Name><ReturnType>Rotation</ReturnType><ReturnBitSize>32</ReturnBitSize><Local><Name>direction</Name><Type>Rotation</Type><BitSize>32</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getx</Name><ReturnType>DINT</ReturnType><ReturnBitSize>32</ReturnBitSize><Local><Name>x</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__gety</Name><ReturnType>DINT</ReturnType><ReturnBitSize>32</ReturnBitSize><Local><Name>y</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__setx</Name><Parameter><Name>x</Name><Type>DINT</Type><BitSize>32</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__sety</Name><Parameter><Name>y</Name><Type>DINT</Type><BitSize>32</BitSize></Parameter><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>__getclassName</Name><Comment><![CDATA[

short summary
=================
This abstract property returns the class name of the concrete object, 
which is useful for logging/debugging purpose or to check the class name
for ``__DELETE`` in factories (sometimes it's necessary to do more 
than just to free the memory).

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

]]></Comment><ReturnType Namespace="CNM_AbstractObject">ClassName</ReturnType><ReturnBitSize>2048</ReturnBitSize><Local><Name>className</Name><Type Namespace="CNM_AbstractObject">ClassName</Type><BitSize>2048</BitSize></Local><Properties><Property><Name>property</Name></Property></Properties></Method><Method><Name>walk</Name><Parameter><Name>map</Name><Type>I2dArray</Type><BitSize>64</BitSize></Parameter><Local><Name>currentDirection</Name><Type>DINT</Type><BitSize>32</BitSize></Local></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name>Day06Solution</Name><BitSize>968960</BitSize><ExtendsType Namespace="CNM_AoC">AbstractSolver</ExtendsType><SubItem><Name>Day06Solution_4132__solve_4145__sum</Name><Type>DINT</Type><BitSize>32</BitSize><BitOffs>953472</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>Day06Solution_4132__solve_4145__badGuyGuard</Name><Type>Guard</Type><BitSize>12864</BitSize><BitOffs>953536</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>Day06Solution_4132__solve_4145__loopY</Name><Type>DINT</Type><BitSize>32</BitSize><BitOffs>966400</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>Day06Solution_4132__solve_4145__guardStartX</Name><Type>DINT</Type><BitSize>32</BitSize><BitOffs>966432</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>Day06Solution_4132__solve_4145__guardStartY</Name><Type>DINT</Type><BitSize>32</BitSize><BitOffs>966464</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>Day06Solution_4132__solve_4145__sizeY</Name><Type>UDINT</Type><Comment><![CDATA[map stuff	]]></Comment><BitSize>32</BitSize><BitOffs>966496</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>Day06Solution_4132__solve_4145__sizeX</Name><Type>UDINT</Type><BitSize>32</BitSize><BitOffs>966528</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>Day06Solution_4132__solve_4145__map</Name><Type>I2dArray</Type><BitSize>64</BitSize><BitOffs>966592</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>Day06Solution_4132__solve_4145__pMap</Name><Type PointerTo="1">Dynamic2dArray</Type><BitSize>64</BitSize><BitOffs>966656</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>Day06Solution_4132__solve_4145__indexX</Name><Type>DINT</Type><BitSize>32</BitSize><BitOffs>966720</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>Day06Solution_4132__solve_4145__indexY</Name><Type>DINT</Type><BitSize>32</BitSize><BitOffs>966752</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>Day06Solution_4132__solve_4145__lineText</Name><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize><BitOffs>966784</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>Day06Solution_4132__solve_4145__curChar</Name><Type>STRING(1)</Type><BitSize>16</BitSize><BitOffs>968832</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>Day06Solution_4132__solve_4145__pVal</Name><Type Namespace="CNM_AoC" PointerTo="1">Value</Type><BitSize>64</BitSize><BitOffs>968896</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><Method><Name>solve</Name><Parameter><Name>step</Name><Type>DINT</Type><BitSize>32</BitSize></Parameter><Local><Name>sum</Name><Type>DINT</Type><BitSize>32</BitSize><Properties><Property><Name>uselocation</Name><Value>DAY06SOLUTION_4132__SOLVE_4145__SUM</Value></Property></Properties></Local><Local><Name>badGuyGuard</Name><Type>Guard</Type><BitSize>12864</BitSize><Properties><Property><Name>uselocation</Name><Value>DAY06SOLUTION_4132__SOLVE_4145__BADGUYGUARD</Value></Property></Properties></Local><Local><Name>loopY</Name><Type>DINT</Type><BitSize>32</BitSize><Properties><Property><Name>uselocation</Name><Value>DAY06SOLUTION_4132__SOLVE_4145__LOOPY</Value></Property></Properties></Local><Local><Name>guardStartX</Name><Type>DINT</Type><BitSize>32</BitSize><Properties><Property><Name>uselocation</Name><Value>DAY06SOLUTION_4132__SOLVE_4145__GUARDSTARTX</Value></Property></Properties></Local><Local><Name>guardStartY</Name><Type>DINT</Type><BitSize>32</BitSize><Properties><Property><Name>uselocation</Name><Value>DAY06SOLUTION_4132__SOLVE_4145__GUARDSTARTY</Value></Property></Properties></Local><Local><Name>sizeY</Name><Comment><![CDATA[map stuff	]]></Comment><Type>UDINT</Type><BitSize>32</BitSize><Properties><Property><Name>uselocation</Name><Value>DAY06SOLUTION_4132__SOLVE_4145__SIZEY</Value></Property></Properties></Local><Local><Name>sizeX</Name><Type>UDINT</Type><BitSize>32</BitSize><Properties><Property><Name>uselocation</Name><Value>DAY06SOLUTION_4132__SOLVE_4145__SIZEX</Value></Property></Properties></Local><Local><Name>map</Name><Type>I2dArray</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>DAY06SOLUTION_4132__SOLVE_4145__MAP</Value></Property></Properties></Local><Local><Name>pMap</Name><Type PointerTo="1">Dynamic2dArray</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>DAY06SOLUTION_4132__SOLVE_4145__PMAP</Value></Property></Properties></Local><Local><Name>indexX</Name><Type>DINT</Type><BitSize>32</BitSize><Properties><Property><Name>uselocation</Name><Value>DAY06SOLUTION_4132__SOLVE_4145__INDEXX</Value></Property></Properties></Local><Local><Name>indexY</Name><Type>DINT</Type><BitSize>32</BitSize><Properties><Property><Name>uselocation</Name><Value>DAY06SOLUTION_4132__SOLVE_4145__INDEXY</Value></Property></Properties></Local><Local><Name>lineText</Name><Type Namespace="Tc2_System">T_MaxString</Type><BitSize>2048</BitSize><Properties><Property><Name>uselocation</Name><Value>DAY06SOLUTION_4132__SOLVE_4145__LINETEXT</Value></Property></Properties></Local><Local><Name>curChar</Name><Type>STRING(1)</Type><BitSize>16</BitSize><Properties><Property><Name>uselocation</Name><Value>DAY06SOLUTION_4132__SOLVE_4145__CURCHAR</Value></Property></Properties></Local><Local><Name>pVal</Name><Type Namespace="CNM_AoC" PointerTo="1">Value</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>DAY06SOLUTION_4132__SOLVE_4145__PVAL</Value></Property></Properties></Local><Local><Name>parsed</Name><Type Namespace="CNM_CollectionInterfaces">IArrayList</Type><BitSize>64</BitSize></Local><Local><Name>tmpObj</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Local><Name>tmpVal</Name><Type Namespace="CNM_AoC">IHaveValue</Type><BitSize>64</BitSize></Local><Local><Name>sequence</Name><Type Namespace="CNM_CollectionInterfaces">IArrayList</Type><BitSize>64</BitSize></Local><Local><Name>sequenceCopy</Name><Type Namespace="CNM_CollectionInterfaces">IArrayList</Type><BitSize>64</BitSize></Local><Local><Name>index</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>currentLine</Name><Type Namespace="CNM_AoC">ILine</Type><BitSize>64</BitSize></Local><Local><Name>currentLineObject</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Local><Name>READ_INPUT</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>GET_LINES</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>PARSE</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>SOLVE_PART1</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>RESET_FOR_PART2</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>SOLVE_PART2</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>APPEND_SOLUTION</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>WRITE_SOLUTION</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>CLEAN_UP</Name><Type>DINT</Type><BitSize>32</BitSize></Local></Method><Method><Name>walkToEdge</Name><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Parameter><Name>guard</Name><Type>IGuard</Type><BitSize>64</BitSize></Parameter><Parameter><Name>map</Name><Type>I2dArray</Type><BitSize>64</BitSize></Parameter><Parameter><Name>maxX</Name><Type>DINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>maxY</Name><Type>DINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>visitedFields</Name><Type>DINT</Type><BitSize>32</BitSize><Properties><Property><Name>ItemType</Name><Value>Output</Value></Property></Properties></Parameter><Local><Name>seenField</Name><Type>BOOL</Type><BitSize>8</BitSize></Local><Local><Name>index</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>seen</Name><Comment><![CDATA[x, y, rotation]]></Comment><Type>BOOL</Type><ArrayInfo><LBound>0</LBound><Elements>256</Elements></ArrayInfo><ArrayInfo><LBound>0</LBound><Elements>256</Elements></ArrayInfo><ArrayInfo><LBound>0</LBound><Elements>4</Elements></ArrayInfo><BitSize>2097152</BitSize></Local><Local><Name>__Index__0</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>__Index__1</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>__Index__2</Name><Type>DINT</Type><BitSize>32</BitSize></Local></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name>Day07Solution</Name><BitSize>960960</BitSize><ExtendsType Namespace="CNM_AoC">AbstractSolver</ExtendsType><SubItem><Name>Day07Solution_4262__solve_4277__pathInserted</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>953472</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>Day07Solution_4262__solve_4277__sequences</Name><Type Namespace="CNM_Collections">ArrayList</Type><BitSize>7232</BitSize><BitOffs>953536</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>Day07Solution_4262__solve_4277__parser</Name><Type>NumberParser</Type><BitSize>64</BitSize><BitOffs>960768</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>Day07Solution_4262__solve_4277__sum</Name><Type>ULINT</Type><BitSize>64</BitSize><BitOffs>960832</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><SubItem><Name>Day07Solution_4262__solve_4277__goal</Name><Type>ULINT</Type><BitSize>64</BitSize><BitOffs>960896</BitOffs><Properties><Property><Name>implicit_inst_var</Name></Property></Properties></SubItem><Method><Name>trySolve</Name><ReturnType>BOOL</ReturnType><ReturnBitSize>8</ReturnBitSize><Parameter><Name>prevValue</Name><Type>ULINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>index</Name><Type>DINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>numbers</Name><Type Namespace="CNM_CollectionInterfaces">IArrayList</Type><BitSize>64</BitSize></Parameter><Parameter><Name>operator</Name><Type>DINT</Type><BitSize>32</BitSize></Parameter><Parameter><Name>goal</Name><Type>ULINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>part2</Name><Type>BOOL</Type><BitSize>8</BitSize></Parameter><Local><Name>obj</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Local><Name>val</Name><Type Namespace="CNM_AoC">IHaveUlintValue</Type><BitSize>64</BitSize></Local><Local><Name>curVal</Name><Type>ULINT</Type><BitSize>64</BitSize></Local></Method><Method><Name>solve</Name><Parameter><Name>step</Name><Type>DINT</Type><BitSize>32</BitSize></Parameter><Local><Name>pathInserted</Name><Type>BOOL</Type><BitSize>8</BitSize><Properties><Property><Name>uselocation</Name><Value>DAY07SOLUTION_4262__SOLVE_4277__PATHINSERTED</Value></Property></Properties></Local><Local><Name>sequences</Name><Type Namespace="CNM_Collections">ArrayList</Type><BitSize>7232</BitSize><Properties><Property><Name>uselocation</Name><Value>DAY07SOLUTION_4262__SOLVE_4277__SEQUENCES</Value></Property></Properties></Local><Local><Name>parser</Name><Type>NumberParser</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>DAY07SOLUTION_4262__SOLVE_4277__PARSER</Value></Property></Properties></Local><Local><Name>sum</Name><Type>ULINT</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>DAY07SOLUTION_4262__SOLVE_4277__SUM</Value></Property></Properties></Local><Local><Name>goal</Name><Type>ULINT</Type><BitSize>64</BitSize><Properties><Property><Name>uselocation</Name><Value>DAY07SOLUTION_4262__SOLVE_4277__GOAL</Value></Property></Properties></Local><Local><Name>parsed</Name><Type Namespace="CNM_CollectionInterfaces">IArrayList</Type><BitSize>64</BitSize></Local><Local><Name>tmpObj</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Local><Name>tmpVal</Name><Type Namespace="CNM_AoC">IHaveUlintValue</Type><BitSize>64</BitSize></Local><Local><Name>sequence</Name><Type Namespace="CNM_CollectionInterfaces">IArrayList</Type><BitSize>64</BitSize></Local><Local><Name>sequenceCopy</Name><Type Namespace="CNM_CollectionInterfaces">IArrayList</Type><BitSize>64</BitSize></Local><Local><Name>index</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>currentLine</Name><Type Namespace="CNM_AoC">ILine</Type><BitSize>64</BitSize></Local><Local><Name>currentLineObject</Name><Type Namespace="CNM_AbstractObject">IObject</Type><BitSize>64</BitSize></Local><Local><Name>READ_INPUT</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>GET_LINES</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>PARSE</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>SOLVE_PART1</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>RESET_FOR_PART2</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>SOLVE_PART2</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>APPEND_SOLUTION</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>WRITE_SOLUTION</Name><Type>DINT</Type><BitSize>32</BitSize></Local><Local><Name>CLEAN_UP</Name><Type>DINT</Type><BitSize>32</BitSize></Local></Method><Method><Name>roundUp</Name><ReturnType>ULINT</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>value</Name><Type>LREAL</Type><BitSize>64</BitSize></Parameter><Local><Name>up</Name><Type>ULINT</Type><BitSize>64</BitSize></Local></Method><Method><Name>concatVals</Name><ReturnType>ULINT</ReturnType><ReturnBitSize>64</ReturnBitSize><Parameter><Name>left</Name><Type>ULINT</Type><BitSize>64</BitSize></Parameter><Parameter><Name>right</Name><Type>ULINT</Type><BitSize>64</BitSize></Parameter><Local><Name>log10</Name><Type>LREAL</Type><BitSize>64</BitSize></Local></Method><Properties><Property><Name>PouType</Name><Value>FunctionBlock</Value></Property></Properties></DataType><DataType><Name GUID="{302277DD-5AD1-433D-B776-5031AECC2BB4}" TcBaseType="true">EPlcPersistentStatus</Name><BitSize>8</BitSize><BaseType GUID="{18071995-0000-0000-0000-000000000002}">USINT</BaseType><EnumInfo><Text><![CDATA[PS_None]]></Text><Enum>0</Enum></EnumInfo><EnumInfo><Text><![CDATA[PS_All]]></Text><Enum>1</Enum></EnumInfo><EnumInfo><Text><![CDATA[PS_Partial]]></Text><Enum>2</Enum></EnumInfo><Hides><Hide GUID="{4591E628-DBCE-4E33-AE0B-7EB853AA256E}" /></Hides></DataType><DataType><Name GUID="{6096F07B-CE2D-45B4-B170-49A834787FA2}" TcBaseType="true">PlcAppSystemInfo</Name><BitSize>2048</BitSize><SubItem><Name>ObjId</Name><Type GUID="{18071995-0000-0000-0000-00000000000F}">OTCID</Type><BitSize>32</BitSize><BitOffs>0</BitOffs></SubItem><SubItem><Name>TaskCnt</Name><Type GUID="{18071995-0000-0000-0000-000000000008}">UDINT</Type><BitSize>32</BitSize><BitOffs>32</BitOffs></SubItem><SubItem><Name>OnlineChangeCnt</Name><Type GUID="{18071995-0000-0000-0000-000000000008}">UDINT</Type><BitSize>32</BitSize><BitOffs>64</BitOffs></SubItem><SubItem><Name>Flags</Name><Type GUID="{18071995-0000-0000-0000-000000000007}">DWORD</Type><BitSize>32</BitSize><BitOffs>96</BitOffs></SubItem><SubItem><Name>AdsPort</Name><Type GUID="{18071995-0000-0000-0000-000000000005}">UINT</Type><BitSize>16</BitSize><BitOffs>128</BitOffs></SubItem><SubItem><Name>BootDataLoaded</Name><Type GUID="{18071995-0000-0000-0000-000000000030}">BOOL</Type><BitSize>8</BitSize><BitOffs>144</BitOffs></SubItem><SubItem><Name>OldBootData</Name><Type GUID="{18071995-0000-0000-0000-000000000030}">BOOL</Type><BitSize>8</BitSize><BitOffs>152</BitOffs></SubItem><SubItem><Name>AppTimestamp</Name><Type GUID="{18071995-0000-0000-0000-00000000004C}">DT</Type><BitSize>32</BitSize><BitOffs>160</BitOffs></SubItem><SubItem><Name>KeepOutputsOnBP</Name><Type GUID="{18071995-0000-0000-0000-000000000030}">BOOL</Type><BitSize>8</BitSize><BitOffs>192</BitOffs></SubItem><SubItem><Name>ShutdownInProgress</Name><Type GUID="{18071995-0000-0000-0000-000000000030}">BOOL</Type><BitSize>8</BitSize><BitOffs>200</BitOffs></SubItem><SubItem><Name>LicensesPending</Name><Type GUID="{18071995-0000-0000-0000-000000000030}">BOOL</Type><BitSize>8</BitSize><BitOffs>208</BitOffs></SubItem><SubItem><Name>BSODOccured</Name><Type GUID="{18071995-0000-0000-0000-000000000030}">BOOL</Type><BitSize>8</BitSize><BitOffs>216</BitOffs></SubItem><SubItem><Name>LoggedIn</Name><Type GUID="{18071995-0000-0000-0000-000000000030}">BOOL</Type><BitSize>8</BitSize><BitOffs>224</BitOffs></SubItem><SubItem><Name>PersistentStatus</Name><Type GUID="{302277DD-5AD1-433D-B776-5031AECC2BB4}">EPlcPersistentStatus</Type><BitSize>8</BitSize><BitOffs>232</BitOffs></SubItem><SubItem><Name>TComSrvPtr</Name><Type GUID="{00000030-0000-0000-E000-000000000064}">ITComObjectServer</Type><BitSize X64="64">32</BitSize><BitOffs>256</BitOffs><Properties><Property><Name>TcComInterface</Name></Property></Properties></SubItem><SubItem><Name>AppName</Name><Type GUID="{18071995-0000-0000-0000-00010000003F}">STRING(63)</Type><BitSize>512</BitSize><BitOffs>512</BitOffs></SubItem><SubItem><Name>ProjectName</Name><Type GUID="{18071995-0000-0000-0000-00010000003F}">STRING(63)</Type><BitSize>512</BitSize><BitOffs>1024</BitOffs></SubItem><Hides><Hide GUID="{D91E046A-A488-4D27-8D43-0F3C40ED5081}" /><Hide GUID="{5DCEB2BC-E196-43AD-80B7-EBACF31A430B}" /><Hide GUID="{1B9FDDE4-B3B7-4F0F-AB14-24EDC2F643E7}" /><Hide GUID="{C1C52E30-BC0B-44CA-BF39-E2FE7F2D145C}" /><Hide GUID="{5C8FF47F-7F83-4493-8D21-F1FF8A08F75A}" /><Hide GUID="{941FDF6E-37CE-4C30-AA23-3236AFA461E2}" /></Hides></DataType><DataType><Name GUID="{18990FEE-DAB7-484A-867F-B5550518F883}" TcBaseType="true">PlcTaskSystemInfo</Name><BitSize>1024</BitSize><SubItem><Name>ObjId</Name><Type GUID="{18071995-0000-0000-0000-00000000000F}">OTCID</Type><BitSize>32</BitSize><BitOffs>0</BitOffs></SubItem><SubItem><Name>CycleTime</Name><Type GUID="{18071995-0000-0000-0000-000000000008}">UDINT</Type><BitSize>32</BitSize><BitOffs>32</BitOffs></SubItem><SubItem><Name>Priority</Name><Type GUID="{18071995-0000-0000-0000-000000000005}">UINT</Type><BitSize>16</BitSize><BitOffs>64</BitOffs></SubItem><SubItem><Name>AdsPort</Name><Type GUID="{18071995-0000-0000-0000-000000000005}">UINT</Type><BitSize>16</BitSize><BitOffs>80</BitOffs></SubItem><SubItem><Name>CycleCount</Name><Type GUID="{18071995-0000-0000-0000-000000000008}">UDINT</Type><BitSize>32</BitSize><BitOffs>96</BitOffs></SubItem><SubItem><Name>DcTaskTime</Name><Type GUID="{18071995-0000-0000-0000-00000000000C}">LINT</Type><BitSize>64</BitSize><BitOffs>128</BitOffs></SubItem><SubItem><Name>LastExecTime</Name><Type GUID="{18071995-0000-0000-0000-000000000008}">UDINT</Type><BitSize>32</BitSize><BitOffs>192</BitOffs></SubItem><SubItem><Name>FirstCycle</Name><Type GUID="{18071995-0000-0000-0000-000000000030}">BOOL</Type><BitSize>8</BitSize><BitOffs>224</BitOffs></SubItem><SubItem><Name>CycleTimeExceeded</Name><Type GUID="{18071995-0000-0000-0000-000000000030}">BOOL</Type><BitSize>8</BitSize><BitOffs>232</BitOffs></SubItem><SubItem><Name>InCallAfterOutputUpdate</Name><Type GUID="{18071995-0000-0000-0000-000000000030}">BOOL</Type><BitSize>8</BitSize><BitOffs>240</BitOffs></SubItem><SubItem><Name>RTViolation</Name><Type GUID="{18071995-0000-0000-0000-000000000030}">BOOL</Type><BitSize>8</BitSize><BitOffs>248</BitOffs></SubItem><SubItem><Name>TaskName</Name><Type GUID="{18071995-0000-0000-0000-00010000003F}">STRING(63)</Type><BitSize>512</BitSize><BitOffs>512</BitOffs></SubItem><Hides><Hide GUID="{6A76D020-03A2-465C-A678-C341951E9EF3}" /><Hide GUID="{6F7D679F-72A0-4831-A7F1-085F839743ED}" /><Hide GUID="{56294066-FFF7-46F3-8206-FA06A30B13BA}" /></Hides></DataType><DataType><Name>_Implicit_KindOfTask</Name><BitSize>16</BitSize><BaseType>INT</BaseType><EnumInfo><Text>_implicit_cyclic</Text><Enum>0</Enum></EnumInfo><EnumInfo><Text>_implicit_event</Text><Enum>1</Enum></EnumInfo><EnumInfo><Text>_implicit_external</Text><Enum>2</Enum></EnumInfo><EnumInfo><Text>_implicit_freewheeling</Text><Enum>3</Enum></EnumInfo><Properties><Property><Name>signature_flag</Name><Value>256</Value></Property><Property><Name>hide</Name></Property><Property><Name>generate_implicit_init_function</Name></Property></Properties></DataType><DataType><Name>_Implicit_Jitter_Distribution</Name><BitSize>48</BitSize><SubItem><Name>wRangeMax</Name><Type>WORD</Type><BitSize>16</BitSize><BitOffs>0</BitOffs></SubItem><SubItem><Name>wCountJitterNeg</Name><Type>WORD</Type><BitSize>16</BitSize><BitOffs>16</BitOffs></SubItem><SubItem><Name>wCountJitterPos</Name><Type>WORD</Type><BitSize>16</BitSize><BitOffs>32</BitOffs></SubItem><Properties><Property><Name>signature_flag</Name><Value>256</Value></Property><Property><Name>hide</Name></Property></Properties></DataType><DataType><Name>_Implicit_Task_Info</Name><BitSize>896</BitSize><SubItem><Name>dwVersion</Name><Type>DWORD</Type><BitSize>32</BitSize><BitOffs>0</BitOffs></SubItem><SubItem><Name>pszName</Name><Type PointerTo="1">STRING(80)</Type><BitSize>64</BitSize><BitOffs>64</BitOffs></SubItem><SubItem><Name>nPriority</Name><Type>INT</Type><BitSize>16</BitSize><BitOffs>128</BitOffs></SubItem><SubItem><Name>KindOf</Name><Type>_Implicit_KindOfTask</Type><BitSize>16</BitSize><BitOffs>144</BitOffs></SubItem><SubItem><Name>bWatchdog</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>160</BitOffs></SubItem><SubItem><Name>bProfilingTask</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>168</BitOffs></SubItem><SubItem><Name>dwEventFunctionPointer</Name><Type PointerTo="1">BYTE</Type><BitSize>64</BitSize><BitOffs>192</BitOffs></SubItem><SubItem><Name>pszExternalEvent</Name><Type PointerTo="1">STRING(80)</Type><BitSize>64</BitSize><BitOffs>256</BitOffs></SubItem><SubItem><Name>dwTaskEntryFunctionPointer</Name><Type PointerTo="1">BYTE</Type><BitSize>64</BitSize><BitOffs>320</BitOffs></SubItem><SubItem><Name>dwWatchdogSensitivity</Name><Type>DWORD</Type><BitSize>32</BitSize><BitOffs>384</BitOffs></SubItem><SubItem><Name>dwInterval</Name><Type>DWORD</Type><BitSize>32</BitSize><BitOffs>416</BitOffs></SubItem><SubItem><Name>dwWatchdogTime</Name><Type>DWORD</Type><BitSize>32</BitSize><BitOffs>448</BitOffs></SubItem><SubItem><Name>dwLastCycleTime</Name><Type>DWORD</Type><BitSize>32</BitSize><BitOffs>480</BitOffs></SubItem><SubItem><Name>dwAverageCycleTime</Name><Type>DWORD</Type><BitSize>32</BitSize><BitOffs>512</BitOffs></SubItem><SubItem><Name>dwMaxCycleTime</Name><Type>DWORD</Type><BitSize>32</BitSize><BitOffs>544</BitOffs></SubItem><SubItem><Name>dwMinCycleTime</Name><Type>DWORD</Type><BitSize>32</BitSize><BitOffs>576</BitOffs></SubItem><SubItem><Name>diJitter</Name><Type>DINT</Type><BitSize>32</BitSize><BitOffs>608</BitOffs></SubItem><SubItem><Name>diJitterMin</Name><Type>DINT</Type><BitSize>32</BitSize><BitOffs>640</BitOffs></SubItem><SubItem><Name>diJitterMax</Name><Type>DINT</Type><BitSize>32</BitSize><BitOffs>672</BitOffs></SubItem><SubItem><Name>dwCycleCount</Name><Type>DWORD</Type><BitSize>32</BitSize><BitOffs>704</BitOffs></SubItem><SubItem><Name>wTaskStatus</Name><Type>WORD</Type><BitSize>16</BitSize><BitOffs>736</BitOffs></SubItem><SubItem><Name>wNumOfJitterDistributions</Name><Type>WORD</Type><BitSize>16</BitSize><BitOffs>752</BitOffs></SubItem><SubItem><Name>pJitterDistribution</Name><Type PointerTo="1">_Implicit_Jitter_Distribution</Type><BitSize>64</BitSize><BitOffs>768</BitOffs></SubItem><SubItem><Name>bWithinSPSTimeSlicing</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>832</BitOffs></SubItem><SubItem><Name>byDummy</Name><Type>BYTE</Type><BitSize>8</BitSize><BitOffs>840</BitOffs></SubItem><SubItem><Name>bShouldBlock</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>848</BitOffs></SubItem><SubItem><Name>bActive</Name><Type>BOOL</Type><BitSize>8</BitSize><BitOffs>856</BitOffs></SubItem><SubItem><Name>dwIECCycleCount</Name><Type>DWORD</Type><BitSize>32</BitSize><BitOffs>864</BitOffs></SubItem><Properties><Property><Name>signature_flag</Name><Value>256</Value></Property><Property><Name>hide</Name></Property></Properties></DataType><DataType><Name Namespace="CNM_ReturnTypes">DefaultSteps</Name><Comment><![CDATA[

short summary
=================
DefaultSteps is a constant global variable list,
It contains general steps for structured text-based
state machines that are based on the ``CASE OF`` statement.
The member STEP is a :ref:`CommonSteps` constant.

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

enumeration values
======================

]]></Comment><SubItem><Name Static="true">STEP</Name><Type Namespace="CNM_ReturnTypes">CommonSteps</Type><Comment><![CDATA[ default steps for ``CASE OF`` based state machines ]]></Comment><BitSize>192</BitSize><Properties><Property><Name>suppress_warning_0</Name><Value>C0228</Value></Property></Properties></SubItem><Properties><Property><Name>qualified_only</Name></Property></Properties></DataType><DataType><Name Namespace="Tc2_System">Global_Variables</Name><SubItem><Name Static="true">AMSPORT_LOGGER</Name><Type>UINT</Type><Comment><![CDATA[ Logger ]]></Comment><BitSize>16</BitSize><Default><Value>100</Value></Default></SubItem><SubItem><Name Static="true">AMSPORT_EVENTLOG</Name><Type>UINT</Type><Comment><![CDATA[ Event logger ]]></Comment><BitSize>16</BitSize><Default><Value>110</Value></Default></SubItem><SubItem><Name Static="true">AMSPORT_R0_RTIME</Name><Type>UINT</Type><Comment><![CDATA[ R0 Real time ]]></Comment><BitSize>16</BitSize><Default><Value>200</Value></Default></SubItem><SubItem><Name Static="true">AMSPORT_R0_IO</Name><Type>UINT</Type><Comment><![CDATA[ I/O Driver ]]></Comment><BitSize>16</BitSize><Default><Value>300</Value></Default></SubItem><SubItem><Name Static="true">AMSPORT_R0_NC</Name><Type>UINT</Type><BitSize>16</BitSize><Default><Value>500</Value></Default></SubItem><SubItem><Name Static="true">AMSPORT_R0_NCSAF</Name><Type>UINT</Type><BitSize>16</BitSize><Default><Value>501</Value></Default></SubItem><SubItem><Name Static="true">AMSPORT_R0_NCSVB</Name><Type>UINT</Type><BitSize>16</BitSize><Default><Value>511</Value></Default></SubItem><SubItem><Name Static="true">AMSPORT_R0_ISG</Name><Type>UINT</Type><BitSize>16</BitSize><Default><Value>550</Value></Default></SubItem><SubItem><Name Static="true">AMSPORT_R0_CNC</Name><Type>UINT</Type><BitSize>16</BitSize><Default><Value>600</Value></Default></SubItem><SubItem><Name Static="true">AMSPORT_R0_LINE</Name><Type>UINT</Type><BitSize>16</BitSize><Default><Value>700</Value></Default></SubItem><SubItem><Name Static="true">AMSPORT_R0_PLC</Name><Type>UINT</Type><BitSize>16</BitSize><Default><Value>800</Value></Default></SubItem><SubItem><Name Static="true">AMSPORT_R0_PLC_RTS1</Name><Type>UINT</Type><Comment><![CDATA[ TwinCAT v2.xx first PLC runtime system ]]></Comment><BitSize>16</BitSize><Default><Value>801</Value></Default></SubItem><SubItem><Name Static="true">AMSPORT_R0_PLC_RTS2</Name><Type>UINT</Type><Comment><![CDATA[ TwinCAT v2.xx second PLC runtime system ]]></Comment><BitSize>16</BitSize><Default><Value>811</Value></Default></SubItem><SubItem><Name Static="true">AMSPORT_R0_PLC_RTS3</Name><Type>UINT</Type><Comment><![CDATA[ TwinCAT v2.xx third PLC runtime system ]]></Comment><BitSize>16</BitSize><Default><Value>821</Value></Default></SubItem><SubItem><Name Static="true">AMSPORT_R0_PLC_RTS4</Name><Type>UINT</Type><Comment><![CDATA[ TwinCAT v2.xx fourth PLC runtime system ]]></Comment><BitSize>16</BitSize><Default><Value>831</Value></Default></SubItem><SubItem><Name Static="true">AMSPORT_R0_CAM</Name><Type>UINT</Type><BitSize>16</BitSize><Default><Value>900</Value></Default></SubItem><SubItem><Name Static="true">AMSPORT_R0_CAMTOOL</Name><Type>UINT</Type><Comment><![CDATA[ Camming tool ]]></Comment><BitSize>16</BitSize><Default><Value>950</Value></Default></SubItem><SubItem><Name Static="true">AMSPORT_R3_SYSSERV</Name><Type>UINT</Type><Comment><![CDATA[ TwinCAT System Service ]]></Comment><BitSize>16</BitSize><Default><Value>10000</Value></Default></SubItem><SubItem><Name Static="true">AMSPORT_R3_SCOPESERVER</Name><Type>UINT</Type><Comment><![CDATA[ TwinCAT Scope Server ]]></Comment><BitSize>16</BitSize><Default><Value>14001</Value></Default></SubItem><SubItem><Name Static="true">ADSSTATE_INVALID</Name><Type>UINT</Type><Comment><![CDATA[ Invalid ADS state ]]></Comment><BitSize>16</BitSize><Default><Value>0</Value></Default></SubItem><SubItem><Name Static="true">ADSSTATE_IDLE</Name><Type>UINT</Type><BitSize>16</BitSize><Default><Value>1</Value></Default></SubItem><SubItem><Name Static="true">ADSSTATE_RESET</Name><Type>UINT</Type><BitSize>16</BitSize><Default><Value>2</Value></Default></SubItem><SubItem><Name Static="true">ADSSTATE_INIT</Name><Type>UINT</Type><BitSize>16</BitSize><Default><Value>3</Value></Default></SubItem><SubItem><Name Static="true">ADSSTATE_START</Name><Type>UINT</Type><BitSize>16</BitSize><Default><Value>4</Value></Default></SubItem><SubItem><Name Static="true">ADSSTATE_RUN</Name><Type>UINT</Type><BitSize>16</BitSize><Default><Value>5</Value></Default></SubItem><SubItem><Name Static="true">ADSSTATE_STOP</Name><Type>UINT</Type><BitSize>16</BitSize><Default><Value>6</Value></Default></SubItem><SubItem><Name Static="true">ADSSTATE_SAVECFG</Name><Type>UINT</Type><BitSize>16</BitSize><Default><Value>7</Value></Default></SubItem><SubItem><Name Static="true">ADSSTATE_LOADCFG</Name><Type>UINT</Type><BitSize>16</BitSize><Default><Value>8</Value></Default></SubItem><SubItem><Name Static="true">ADSSTATE_POWERFAILURE</Name><Type>UINT</Type><BitSize>16</BitSize><Default><Value>9</Value></Default></SubItem><SubItem><Name Static="true">ADSSTATE_POWERGOOD</Name><Type>UINT</Type><BitSize>16</BitSize><Default><Value>10</Value></Default></SubItem><SubItem><Name Static="true">ADSSTATE_ERROR</Name><Type>UINT</Type><BitSize>16</BitSize><Default><Value>11</Value></Default></SubItem><SubItem><Name Static="true">ADSSTATE_SHUTDOWN</Name><Type>UINT</Type><BitSize>16</BitSize><Default><Value>12</Value></Default></SubItem><SubItem><Name Static="true">ADSSTATE_SUSPEND</Name><Type>UINT</Type><BitSize>16</BitSize><Default><Value>13</Value></Default></SubItem><SubItem><Name Static="true">ADSSTATE_RESUME</Name><Type>UINT</Type><BitSize>16</BitSize><Default><Value>14</Value></Default></SubItem><SubItem><Name Static="true">ADSSTATE_CONFIG</Name><Type>UINT</Type><Comment><![CDATA[ System is in config mode ]]></Comment><BitSize>16</BitSize><Default><Value>15</Value></Default></SubItem><SubItem><Name Static="true">ADSSTATE_RECONFIG</Name><Type>UINT</Type><Comment><![CDATA[ System should restart in config mode ]]></Comment><BitSize>16</BitSize><Default><Value>16</Value></Default></SubItem><SubItem><Name Static="true">ADSSTATE_STOPPING</Name><Type>UINT</Type><BitSize>16</BitSize><Default><Value>17</Value></Default></SubItem><SubItem><Name Static="true">ADSSTATE_INCOMPATIBLE</Name><Type>UINT</Type><BitSize>16</BitSize><Default><Value>18</Value></Default></SubItem><SubItem><Name Static="true">ADSSTATE_EXCEPTION</Name><Type>UINT</Type><BitSize>16</BitSize><Default><Value>19</Value></Default></SubItem><SubItem><Name Static="true">ADSSTATE_MAXSTATES</Name><Type>UINT</Type><Comment><![CDATA[ Max. number of available ads states ]]></Comment><BitSize>16</BitSize><Default><Value>20</Value></Default></SubItem><SubItem><Name Static="true">ADSIGRP_SYMTAB</Name><Type>UDINT</Type><Comment><![CDATA[ Symbol table ]]></Comment><BitSize>32</BitSize><Default><Value>61440</Value></Default></SubItem><SubItem><Name Static="true">ADSIGRP_SYMNAME</Name><Type>UDINT</Type><Comment><![CDATA[ Symbol name ]]></Comment><BitSize>32</BitSize><Default><Value>61441</Value></Default></SubItem><SubItem><Name Static="true">ADSIGRP_SYMVAL</Name><Type>UDINT</Type><Comment><![CDATA[ Symbol value ]]></Comment><BitSize>32</BitSize><Default><Value>61442</Value></Default></SubItem><SubItem><Name Static="true">ADSIGRP_SYM_HNDBYNAME</Name><Type>UDINT</Type><BitSize>32</BitSize><Default><Value>61443</Value></Default></SubItem><SubItem><Name Static="true">ADSIGRP_SYM_VALBYNAME</Name><Type>UDINT</Type><BitSize>32</BitSize><Default><Value>61444</Value></Default></SubItem><SubItem><Name Static="true">ADSIGRP_SYM_VALBYHND</Name><Type>UDINT</Type><BitSize>32</BitSize><Default><Value>61445</Value></Default></SubItem><SubItem><Name Static="true">ADSIGRP_SYM_RELEASEHND</Name><Type>UDINT</Type><BitSize>32</BitSize><Default><Value>61446</Value></Default></SubItem><SubItem><Name Static="true">ADSIGRP_SYM_INFOBYNAME</Name><Type>UDINT</Type><BitSize>32</BitSize><Default><Value>61447</Value></Default></SubItem><SubItem><Name Static="true">ADSIGRP_SYM_VERSION</Name><Type>UDINT</Type><BitSize>32</BitSize><Default><Value>61448</Value></Default></SubItem><SubItem><Name Static="true">ADSIGRP_SYM_INFOBYNAMEEX</Name><Type>UDINT</Type><BitSize>32</BitSize><Default><Value>61449</Value></Default></SubItem><SubItem><Name Static="true">ADSIGRP_SYM_DOWNLOAD</Name><Type>UDINT</Type><BitSize>32</BitSize><Default><Value>61450</Value></Default></SubItem><SubItem><Name Static="true">ADSIGRP_SYM_UPLOAD</Name><Type>UDINT</Type><BitSize>32</BitSize><Default><Value>61451</Value></Default></SubItem><SubItem><Name Static="true">ADSIGRP_SYM_UPLOADINFO</Name><Type>UDINT</Type><BitSize>32</BitSize><Default><Value>61452</Value></Default></SubItem><SubItem><Name Static="true">ADSIGRP_SYMNOTE</Name><Type>UDINT</Type><Comment><![CDATA[ Notification of named handle ]]></Comment><BitSize>32</BitSize><Default><Value>61456</Value></Default></SubItem><SubItem><Name Static="true">ADSIGRP_IOIMAGE_RWIB</Name><Type>UDINT</Type><Comment><![CDATA[ Read/write input BYTE(S) ]]></Comment><BitSize>32</BitSize><Default><Value>61472</Value></Default></SubItem><SubItem><Name Static="true">ADSIGRP_IOIMAGE_RWIX</Name><Type>UDINT</Type><Comment><![CDATA[ Read/write input bit ]]></Comment><BitSize>32</BitSize><Default><Value>61473</Value></Default></SubItem><SubItem><Name Static="true">ADSIGRP_IOIMAGE_RISIZE</Name><Type>UDINT</Type><Comment><![CDATA[ Read input size (in BYTE) ]]></Comment><BitSize>32</BitSize><Default><Value>61477</Value></Default></SubItem><SubItem><Name Static="true">ADSIGRP_IOIMAGE_RWOB</Name><Type>UDINT</Type><Comment><![CDATA[ Read/write output BYTE(S) ]]></Comment><BitSize>32</BitSize><Default><Value>61488</Value></Default></SubItem><SubItem><Name Static="true">ADSIGRP_IOIMAGE_RWOX</Name><Type>UDINT</Type><Comment><![CDATA[ Read/write output bit ]]></Comment><BitSize>32</BitSize><Default><Value>61489</Value></Default></SubItem><SubItem><Name Static="true">ADSIGRP_IOIMAGE_ROSIZE</Name><Type>UDINT</Type><Comment><![CDATA[ Read/write output bit ]]></Comment><BitSize>32</BitSize><Default><Value>61493</Value></Default></SubItem><SubItem><Name Static="true">ADSIGRP_IOIMAGE_CLEARI</Name><Type>UDINT</Type><Comment><![CDATA[ Write inputs TO null ]]></Comment><BitSize>32</BitSize><Default><Value>61504</Value></Default></SubItem><SubItem><Name Static="true">ADSIGRP_IOIMAGE_CLEARO</Name><Type>UDINT</Type><Comment><![CDATA[ Write outputs TO null ]]></Comment><BitSize>32</BitSize><Default><Value>61520</Value></Default></SubItem><SubItem><Name Static="true">ADSIGRP_IOIMAGE_RWIOB</Name><Type>UDINT</Type><Comment><![CDATA[ Read input AND write output BYTE(S)  ADS-READWRITE ]]></Comment><BitSize>32</BitSize><Default><Value>61536</Value></Default></SubItem><SubItem><Name Static="true">ADSIGRP_DEVICE_DATA</Name><Type>UDINT</Type><Comment><![CDATA[ State, name, etc... ]]></Comment><BitSize>32</BitSize><Default><Value>61696</Value></Default></SubItem><SubItem><Name Static="true">ADSIOFFS_DEVDATA_ADSSTATE</Name><Type>UDINT</Type><Comment><![CDATA[ Ads state OF device ]]></Comment><BitSize>32</BitSize><Default><Value>0</Value></Default></SubItem><SubItem><Name Static="true">ADSIOFFS_DEVDATA_DEVSTATE</Name><Type>UDINT</Type><Comment><![CDATA[ Device state ]]></Comment><BitSize>32</BitSize><Default><Value>2</Value></Default></SubItem><SubItem><Name Static="true">SYSTEMSERVICE_OPENCREATE</Name><Type>UDINT</Type><Comment><![CDATA[ Open and if not existing create ]]></Comment><BitSize>32</BitSize><Default><Value>100</Value></Default></SubItem><SubItem><Name Static="true">SYSTEMSERVICE_OPENREAD</Name><Type>UDINT</Type><Comment><![CDATA[ Open existing for read access ]]></Comment><BitSize>32</BitSize><Default><Value>101</Value></Default></SubItem><SubItem><Name Static="true">SYSTEMSERVICE_OPENWRITE</Name><Type>UDINT</Type><Comment><![CDATA[ Open existing for write access ]]></Comment><BitSize>32</BitSize><Default><Value>102</Value></Default></SubItem><SubItem><Name Static="true">SYSTEMSERVICE_CREATEFILE</Name><Type>UDINT</Type><Comment><![CDATA[ Create ]]></Comment><BitSize>32</BitSize><Default><Value>110</Value></Default></SubItem><SubItem><Name Static="true">SYSTEMSERVICE_CLOSEHANDLE</Name><Type>UDINT</Type><Comment><![CDATA[ Close ]]></Comment><BitSize>32</BitSize><Default><Value>111</Value></Default></SubItem><SubItem><Name Static="true">SYSTEMSERVICE_FOPEN</Name><Type>UDINT</Type><BitSize>32</BitSize><Default><Value>120</Value></Default></SubItem><SubItem><Name Static="true">SYSTEMSERVICE_FCLOSE</Name><Type>UDINT</Type><BitSize>32</BitSize><Default><Value>121</Value></Default></SubItem><SubItem><Name Static="true">SYSTEMSERVICE_FREAD</Name><Type>UDINT</Type><BitSize>32</BitSize><Default><Value>122</Value></Default></SubItem><SubItem><Name Static="true">SYSTEMSERVICE_FWRITE</Name><Type>UDINT</Type><BitSize>32</BitSize><Default><Value>123</Value></Default></SubItem><SubItem><Name Static="true">SYSTEMSERVICE_FSEEK</Name><Type>UDINT</Type><BitSize>32</BitSize><Default><Value>124</Value></Default></SubItem><SubItem><Name Static="true">SYSTEMSERVICE_FTELL</Name><Type>UDINT</Type><BitSize>32</BitSize><Default><Value>125</Value></Default></SubItem><SubItem><Name Static="true">SYSTEMSERVICE_FGETS</Name><Type>UDINT</Type><BitSize>32</BitSize><Default><Value>126</Value></Default></SubItem><SubItem><Name Static="true">SYSTEMSERVICE_FPUTS</Name><Type>UDINT</Type><BitSize>32</BitSize><Default><Value>127</Value></Default></SubItem><SubItem><Name Static="true">SYSTEMSERVICE_FSCANF</Name><Type>UDINT</Type><BitSize>32</BitSize><Default><Value>128</Value></Default></SubItem><SubItem><Name Static="true">SYSTEMSERVICE_FPRINTF</Name><Type>UDINT</Type><BitSize>32</BitSize><Default><Value>129</Value></Default></SubItem><SubItem><Name Static="true">SYSTEMSERVICE_FEOF</Name><Type>UDINT</Type><BitSize>32</BitSize><Default><Value>130</Value></Default></SubItem><SubItem><Name Static="true">SYSTEMSERVICE_FDELETE</Name><Type>UDINT</Type><BitSize>32</BitSize><Default><Value>131</Value></Default></SubItem><SubItem><Name Static="true">SYSTEMSERVICE_FRENAME</Name><Type>UDINT</Type><BitSize>32</BitSize><Default><Value>132</Value></Default></SubItem><SubItem><Name Static="true">SYSTEMSERVICE_MKDIR</Name><Type>UDINT</Type><BitSize>32</BitSize><Default><Value>138</Value></Default></SubItem><SubItem><Name Static="true">SYSTEMSERVICE_RMDIR</Name><Type>UDINT</Type><BitSize>32</BitSize><Default><Value>139</Value></Default></SubItem><SubItem><Name Static="true">SYSTEMSERVICE_REG_HKEYLOCALMACHINE</Name><Type>UDINT</Type><BitSize>32</BitSize><Default><Value>200</Value></Default></SubItem><SubItem><Name Static="true">SYSTEMSERVICE_SENDEMAIL</Name><Type>UDINT</Type><BitSize>32</BitSize><Default><Value>300</Value></Default></SubItem><SubItem><Name Static="true">SYSTEMSERVICE_TIMESERVICES</Name><Type>UDINT</Type><BitSize>32</BitSize><Default><Value>400</Value></Default></SubItem><SubItem><Name Static="true">SYSTEMSERVICE_STARTPROCESS</Name><Type>UDINT</Type><BitSize>32</BitSize><Default><Value>500</Value></Default></SubItem><SubItem><Name Static="true">SYSTEMSERVICE_CHANGENETID</Name><Type>UDINT</Type><BitSize>32</BitSize><Default><Value>600</Value></Default></SubItem><SubItem><Name Static="true">TIMESERVICE_DATEANDTIME</Name><Type>UDINT</Type><Comment><![CDATA[ Date/time ]]></Comment><BitSize>32</BitSize><Default><Value>1</Value></Default></SubItem><SubItem><Name Static="true">TIMESERVICE_SYSTEMTIMES</Name><Type>UDINT</Type><BitSize>32</BitSize><Default><Value>2</Value></Default></SubItem><SubItem><Name Static="true">TIMESERVICE_RTCTIMEDIFF</Name><Type>UDINT</Type><BitSize>32</BitSize><Default><Value>3</Value></Default></SubItem><SubItem><Name Static="true">TIMESERVICE_ADJUSTTIMETORTC</Name><Type>UDINT</Type><BitSize>32</BitSize><Default><Value>4</Value></Default></SubItem><SubItem><Name Static="true">TIMESERVICE_TIMEZONINFORMATION</Name><Type>UDINT</Type><BitSize>32</BitSize><Default><Value>6</Value></Default></SubItem><SubItem><Name Static="true">ADSLOG_MSGTYPE_HINT</Name><Type>DWORD</Type><Comment><![CDATA[ Hint icon ]]></Comment><BitSize>32</BitSize><Default><Value>1</Value></Default></SubItem><SubItem><Name Static="true">ADSLOG_MSGTYPE_WARN</Name><Type>DWORD</Type><Comment><![CDATA[ Warning icon ]]></Comment><BitSize>32</BitSize><Default><Value>2</Value></Default></SubItem><SubItem><Name Static="true">ADSLOG_MSGTYPE_ERROR</Name><Type>DWORD</Type><Comment><![CDATA[ Error icon ]]></Comment><BitSize>32</BitSize><Default><Value>4</Value></Default></SubItem><SubItem><Name Static="true">ADSLOG_MSGTYPE_LOG</Name><Type>DWORD</Type><Comment><![CDATA[ Write message to log file ]]></Comment><BitSize>32</BitSize><Default><Value>16</Value></Default></SubItem><SubItem><Name Static="true">ADSLOG_MSGTYPE_MSGBOX</Name><Type>DWORD</Type><Comment><![CDATA[ View message in message box ]]></Comment><BitSize>32</BitSize><Default><Value>32</Value></Default></SubItem><SubItem><Name Static="true">ADSLOG_MSGTYPE_RESOURCE</Name><Type>DWORD</Type><BitSize>32</BitSize><Default><Value>64</Value></Default></SubItem><SubItem><Name Static="true">ADSLOG_MSGTYPE_STRING</Name><Type>DWORD</Type><BitSize>32</BitSize><Default><Value>128</Value></Default></SubItem><SubItem><Name Static="true">BOOTDATAFLAGS_RETAIN_LOADED</Name><Type>BYTE</Type><Comment><![CDATA[ Retain data loaded ]]></Comment><BitSize>8</BitSize><Default><Value>1</Value></Default></SubItem><SubItem><Name Static="true">BOOTDATAFLAGS_RETAIN_INVALID</Name><Type>BYTE</Type><Comment><![CDATA[ Retain data is invalid ]]></Comment><BitSize>8</BitSize><Default><Value>2</Value></Default></SubItem><SubItem><Name Static="true">BOOTDATAFLAGS_RETAIN_REQUESTED</Name><Type>BYTE</Type><BitSize>8</BitSize><Default><Value>4</Value></Default></SubItem><SubItem><Name Static="true">BOOTDATAFLAGS_PERSISTENT_LOADED</Name><Type>BYTE</Type><Comment><![CDATA[ Persistent data loaded ]]></Comment><BitSize>8</BitSize><Default><Value>16</Value></Default></SubItem><SubItem><Name Static="true">BOOTDATAFLAGS_PERSISTENT_INVALID</Name><Type>BYTE</Type><Comment><![CDATA[ Persistent data is invalid ]]></Comment><BitSize>8</BitSize><Default><Value>32</Value></Default></SubItem><SubItem><Name Static="true">SYSTEMSTATEFLAGS_BSOD</Name><Type>BYTE</Type><Comment><![CDATA[ Blue screen of death ]]></Comment><BitSize>8</BitSize><Default><Value>1</Value></Default></SubItem><SubItem><Name Static="true">SYSTEMSTATEFLAGS_RTVIOLATION</Name><Type>BYTE</Type><Comment><![CDATA[ Realtime violation - latency time ]]></Comment><BitSize>8</BitSize><Default><Value>2</Value></Default></SubItem><SubItem><Name Static="true">nWatchdogTime</Name><Type>BYTE</Type><Comment><![CDATA[ Watchdog time. Depending of g_WatchdogConfig : seconds or minutes ]]></Comment><BitSize>8</BitSize></SubItem><SubItem><Name Static="true">FOPEN_MODEREAD</Name><Type>DWORD</Type><Comment><![CDATA["r": Opens for reading. If the file does not exist or cannot be found, the call fails.]]></Comment><BitSize>32</BitSize><Default><Value>1</Value></Default></SubItem><SubItem><Name Static="true">FOPEN_MODEWRITE</Name><Type>DWORD</Type><Comment><![CDATA["w": Opens an empty file for writing. If the given file exists, its contents are destroyed.]]></Comment><BitSize>32</BitSize><Default><Value>2</Value></Default></SubItem><SubItem><Name Static="true">FOPEN_MODEAPPEND</Name><Type>DWORD</Type><Comment><![CDATA["a": Opens for writing at the end of the file (appending) without removing the EOF marker before writing new data to the file; creates the file first if it doesnot exist.]]></Comment><BitSize>32</BitSize><Default><Value>4</Value></Default></SubItem><SubItem><Name Static="true">FOPEN_MODEPLUS</Name><Type>DWORD</Type><Comment><![CDATA["+": Opens for reading and writing]]></Comment><BitSize>32</BitSize><Default><Value>8</Value></Default></SubItem><SubItem><Name Static="true">FOPEN_MODEBINARY</Name><Type>DWORD</Type><Comment><![CDATA["b": Open in binary (untranslated) mode.]]></Comment><BitSize>32</BitSize><Default><Value>16</Value></Default></SubItem><SubItem><Name Static="true">FOPEN_MODETEXT</Name><Type>DWORD</Type><Comment><![CDATA["t": Open in text (translated) mode.]]></Comment><BitSize>32</BitSize><Default><Value>32</Value></Default></SubItem><SubItem><Name Static="true">TCEVENTFLAG_PRIOCLASS</Name><Type>WORD</Type><Comment><![CDATA[ Event class/priority	through textformatter]]></Comment><BitSize>16</BitSize><Default><Value>16</Value></Default></SubItem><SubItem><Name Static="true">TCEVENTFLAG_FMTSELF</Name><Type>WORD</Type><Comment><![CDATA[ Format in message ]]></Comment><BitSize>16</BitSize><Default><Value>32</Value></Default></SubItem><SubItem><Name Static="true">TCEVENTFLAG_LOG</Name><Type>WORD</Type><Comment><![CDATA[ Write to log file ]]></Comment><BitSize>16</BitSize><Default><Value>64</Value></Default></SubItem><SubItem><Name Static="true">TCEVENTFLAG_MSGBOX</Name><Type>WORD</Type><Comment><![CDATA[ Display message box ]]></Comment><BitSize>16</BitSize><Default><Value>128</Value></Default></SubItem><SubItem><Name Static="true">TCEVENTFLAG_SRCID</Name><Type>WORD</Type><Comment><![CDATA[ Src id instead of source name ]]></Comment><BitSize>16</BitSize><Default><Value>256</Value></Default></SubItem><SubItem><Name Static="true">TCEVENTFLAG_AUTOFMTALL</Name><Type>WORD</Type><BitSize>16</BitSize><Default><Value>4096</Value></Default></SubItem><SubItem><Name Static="true">TCEVENTSTATE_INVALID</Name><Type>WORD</Type><Comment><![CDATA[ Event object is not initialized ]]></Comment><BitSize>16</BitSize><Default><Value>0</Value></Default></SubItem><SubItem><Name Static="true">TCEVENTSTATE_SIGNALED</Name><Type>WORD</Type><Comment><![CDATA[ Event object is in a signaled state ]]></Comment><BitSize>16</BitSize><Default><Value>1</Value></Default></SubItem><SubItem><Name Static="true">TCEVENTSTATE_RESET</Name><Type>WORD</Type><Comment><![CDATA[ Event object is in a reset state ]]></Comment><BitSize>16</BitSize><Default><Value>2</Value></Default></SubItem><SubItem><Name Static="true">TCEVENTSTATE_CONFIRMED</Name><Type>WORD</Type><Comment><![CDATA[ Event object is confirmed but not reset ]]></Comment><BitSize>16</BitSize><Default><Value>16</Value></Default></SubItem><SubItem><Name Static="true">TCEVENTSTATE_RESETCON</Name><Type>WORD</Type><Comment><![CDATA[ Event object is confirmed and reset ]]></Comment><BitSize>16</BitSize><Default><Value>18</Value></Default></SubItem><SubItem><Name Static="true">TCEVENT_SRCNAMESIZE</Name><Type>INT</Type><BitSize>16</BitSize><Default><Value>15</Value></Default></SubItem><SubItem><Name Static="true">TCEVENT_FMTPRGSIZE</Name><Type>INT</Type><BitSize>16</BitSize><Default><Value>31</Value></Default></SubItem><SubItem><Name Static="true">eWatchdogConfig</Name><Type Namespace="Tc2_System">E_WATCHDOG_TIME_CONFIG</Type><BitSize>16</BitSize><Default><EnumText>E_WATCHDOG_TIME_CONFIG.eWATCHDOG_TIME_DISABLED</EnumText></Default></SubItem><SubItem><Name Static="true">PI</Name><Type>LREAL</Type><BitSize>64</BitSize><Default><Value>3.14159265358979</Value></Default></SubItem><SubItem><Name Static="true">DEFAULT_ADS_TIMEOUT</Name><Type>TIME</Type><Comment><![CDATA[ Default ADS timeout value ]]></Comment><BitSize>32</BitSize><Default><DateTime>5000</DateTime></Default></SubItem><SubItem><Name Static="true">MAX_STRING_LENGTH</Name><Type>UDINT</Type><Comment><![CDATA[ Max. length of T_MaxString (inclusive null delimiter) ]]></Comment><BitSize>32</BitSize><Default><Value>255</Value></Default></SubItem></DataType><DataType><Name Namespace="CNM_UnicodeUtilities">HangulCommonConstants</Name><Comment><![CDATA[ constants are defined here: https://www.unicode.org/versions/latest/ch03.pdf, The Unicode Standard, chapter 3 Conformance, section 3.12 ]]></Comment><SubItem><Name Static="true">S_BASE</Name><Type Namespace="CNM_UnicodeUtilities">UnicodeCodePoint</Type><Comment><![CDATA[ start of hangul syllables unicode block ]]></Comment><BitSize>32</BitSize><Default><Value>44032</Value></Default></SubItem><SubItem><Name Static="true">L_BASE</Name><Type Namespace="CNM_UnicodeUtilities">UnicodeCodePoint</Type><Comment><![CDATA[ start of jamo choseong unicdoe block ]]></Comment><BitSize>32</BitSize><Default><Value>4352</Value></Default></SubItem><SubItem><Name Static="true">V_BASE</Name><Type Namespace="CNM_UnicodeUtilities">UnicodeCodePoint</Type><Comment><![CDATA[ start of jamo jungseong unicode block (without 1160;HANGUL JUNGSEONG FILLER) ]]></Comment><BitSize>32</BitSize><Default><Value>4449</Value></Default></SubItem><SubItem><Name Static="true">T_BASE</Name><Type Namespace="CNM_UnicodeUtilities">UnicodeCodePoint</Type><Comment><![CDATA[ one less than the beginning of the range of trailing consonants, which starts at U+11A8 ]]></Comment><BitSize>32</BitSize><Default><Value>4519</Value></Default></SubItem><SubItem><Name Static="true">L_COUNT</Name><Type>DWORD</Type><BitSize>32</BitSize><Default><Value>19</Value></Default></SubItem><SubItem><Name Static="true">V_COUNT</Name><Type>DWORD</Type><BitSize>32</BitSize><Default><Value>21</Value></Default></SubItem><SubItem><Name Static="true">T_COUNT</Name><Type>DWORD</Type><Comment><![CDATA[ one more than the number of trailing consonants relevant 
       to the decomposition algorithm: (11C2 - 11A8 + 1) + 1 ]]></Comment><BitSize>32</BitSize><Default><Value>28</Value></Default></SubItem><SubItem><Name Static="true">N_COUNT</Name><Type>DWORD</Type><Comment><![CDATA[ 588, the number of precomposed Hangul syllables starting with the same leading consonant, 
       counting both the LV_Syllables and the LVT_Syllables for each possible trailing consonan ]]></Comment><BitSize>32</BitSize></SubItem><SubItem><Name Static="true">S_COUNT</Name><Type>DWORD</Type><Comment><![CDATA[ 11172, total number of precomposed Hangul syllables]]></Comment><BitSize>32</BitSize></SubItem><Properties><Property><Name>qualified_only</Name></Property></Properties></DataType><DataType><Name Namespace="CNM_Collections">GVL_Factories</Name><Comment><![CDATA[

short summary
=================
GVL that provides an instance of CollectionFactory that can be reused by every collectionInstance

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2022 ekvip automation GmbH <info@ekvip.de>
| SPDX-License-Identifier: Apache-2.0
| For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

.. </legal notes>

methods and properties
=========================

]]></Comment><SubItem><Name Static="true">defaultCollectionFactory</Name><Type Namespace="CNM_Collections">CollectionFactory</Type><BitSize>3584</BitSize></SubItem><SubItem><Name Static="true">applierBuilder</Name><Type Namespace="CNM_Collections">ApplierBuilder</Type><BitSize>9792</BitSize></SubItem><Properties><Property><Name>qualified_only</Name></Property></Properties></DataType><DataType><Name Namespace="CNM_AoC.CNM_CycleManager.CNM_CycleManagerInterfaces.CNM_MessageInterfaces.Tc3_EventLogger">Global_Constants</Name><SubItem><Name Static="true">EMPTY_EVENT_CLASS</Name><Type GUID="{18071995-0000-0000-0000-000000000021}">GUID</Type><BitSize>128</BitSize><Default><SubItem><Name>.Data1</Name><Value>0</Value></SubItem><SubItem><Name>.Data2</Name><Value>0</Value></SubItem><SubItem><Name>.Data3</Name><Value>0</Value></SubItem><SubItem><Name>.Data4[0]</Name><Value>0</Value></SubItem><SubItem><Name>.Data4[1]</Name><Value>0</Value></SubItem><SubItem><Name>.Data4[2]</Name><Value>0</Value></SubItem><SubItem><Name>.Data4[3]</Name><Value>0</Value></SubItem><SubItem><Name>.Data4[4]</Name><Value>0</Value></SubItem><SubItem><Name>.Data4[5]</Name><Value>0</Value></SubItem><SubItem><Name>.Data4[6]</Name><Value>0</Value></SubItem><SubItem><Name>.Data4[7]</Name><Value>0</Value></SubItem></Default></SubItem><SubItem><Name Static="true">EMPTY_EVENT_ID</Name><Type>UDINT</Type><BitSize>32</BitSize><Default><Value>0</Value></Default></SubItem><SubItem><Name Static="true">EMPTY_SEVERITY</Name><Type GUID="{B57D3F4A-0836-49B0-81C3-BED5F4817EC9}">TcEventSeverity</Type><BitSize>16</BitSize><Default><EnumText>TcEventSeverity.Verbose</EnumText></Default></SubItem><SubItem><Name Static="true">SUCCESS_EVENT</Name><Type GUID="{6925E8D1-EDCA-47DD-B80C-A6329A85D63D}">TcEventEntry</Type><BitSize>192</BitSize><Default><SubItem><Name>.uuidEventClass.Data1</Name><Value>0</Value></SubItem><SubItem><Name>.uuidEventClass.Data2</Name><Value>0</Value></SubItem><SubItem><Name>.uuidEventClass.Data3</Name><Value>0</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[0]</Name><Value>0</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[1]</Name><Value>0</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[2]</Name><Value>0</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[3]</Name><Value>0</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[4]</Name><Value>0</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[5]</Name><Value>0</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[6]</Name><Value>0</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[7]</Name><Value>0</Value></SubItem><SubItem><Name>.nEventID</Name><Value>0</Value></SubItem><SubItem><Name>.eSeverity</Name><EnumText>Global_Constants.EMPTY_SEVERITY</EnumText></SubItem></Default></SubItem></DataType><DataType><Name Namespace="CNM_AoC.CNM_CycleManager.CNM_CycleManagerInterfaces.CNM_MessageInterfaces.Tc3_EventLogger">GVL</Name><SubItem><Name Static="true">nLangId_OnlineMonitoring</Name><Type>DINT</Type><Comment><![CDATA[ language id for online monitoring; English(US)=1033 ; German(Germany)=1031]]></Comment><BitSize>32</BitSize><Default><Value>1033</Value></Default></SubItem><Properties><Property><Name>qualified_only</Name></Property></Properties></DataType><DataType><Name Namespace="CNM_AoC.CNM_CycleManager.CNM_CycleManagerInterfaces.CNM_MessageInterfaces.Tc3_EventLogger">ParameterList</Name><SubItem><Name Static="true">cSourceNameSize</Name><Type>UDINT (81..10000)</Type><Comment><![CDATA[ size [bytes] for source names (recommended is a size between 128 and 512)]]></Comment><BitSize>32</BitSize><Default><Value>256</Value></Default></SubItem><Properties><Property><Name>parameterlist</Name></Property><Property><Name>qualified_only</Name></Property></Properties></DataType><DataType><Name>TC_EVENTS</Name><Properties><Property><Name>TcTypeSystem</Name></Property><Property><Name>global_init_slot</Name><Value>10003</Value></Property><Property><Name>qualified_only</Name></Property></Properties></DataType><DataType><Name>MAIN</Name><SubItem><Name Static="true">day01</Name><Type>Day01Solution</Type><BitSize>968128</BitSize></SubItem><SubItem><Name Static="true">day02</Name><Type>Day02Solution</Type><BitSize>960896</BitSize></SubItem><SubItem><Name Static="true">day03</Name><Type>Day03Solution</Type><BitSize>963520</BitSize></SubItem><SubItem><Name Static="true">day04</Name><Type>Day04Solution</Type><BitSize>953664</BitSize></SubItem><SubItem><Name Static="true">day05</Name><Type>Day05Solution</Type><BitSize>1046720</BitSize></SubItem><SubItem><Name Static="true">day06</Name><Type>Day06Solution</Type><BitSize>968960</BitSize></SubItem><SubItem><Name Static="true">day07</Name><Type>Day07Solution</Type><BitSize>960960</BitSize></SubItem></DataType><DataType><Name>TwinCAT_PreventOnlineChangeGvl</Name><SubItem><Name Static="true">WriteLineIDs</Name><Type>BOOL</Type><BitSize>8</BitSize><Default><Bool>false</Bool></Default></SubItem><SubItem><Name Static="true">PlcProfilerActive</Name><Type>BOOL</Type><BitSize>8</BitSize><Default><Bool>false</Bool></Default></SubItem><SubItem><Name Static="true">PlcProfilerConfigChecksum</Name><Type>STRING(64)</Type><BitSize>520</BitSize><Default><String /></Default></SubItem><Properties><Property><Name>linkalways</Name></Property></Properties></DataType><DataType><Name>LocalIoAddresses</Name><SubItem><Name Static="true">NetId</Name><Type>STRING(80)</Type><BitSize>648</BitSize><Default><String>10.175.16.49.1.1</String></Default></SubItem><SubItem><Name Static="true">Path</Name><Type>STRING(80)</Type><BitSize>648</BitSize><Default><String>C:\Users\tdie\Documents\tdie_AOC\2024</String></Default></SubItem><Properties><Property><Name>qualified_only</Name></Property></Properties></DataType></DataTypes><Modules><Module GUID="{FFDD60C6-3801-478F-B445-33BB6DE75D40}" TcSmClass="TComPlcObjDef" TargetPlatform="TwinCAT OS (x64)"><Name>Solutions</Name><CLSID ClassFactory="TcPlc30">{08500001-0000-0000-F000-000000000064}</CLSID><Licenses /><Contexts><Context><Id NeedCalleeCall="true">0</Id><Name>PlcTask</Name><ManualConfig><OTCID>#x02010030</OTCID></ManualConfig></Context></Contexts><Parameters><Parameter ReadOnly="True"><Name>DeviceLog Filter</Name><BaseType>UDINT</BaseType><PTCID>#x08508045</PTCID></Parameter></Parameters><ParameterValues><Value><Name>DeviceLog Filter</Name><Data>00000000</Data></Value></ParameterValues><DataAreas><DataArea><AreaNo AreaType="Internal" CreateSymbols="true">3</AreaNo><Name>PlcTask Internal</Name><ContextId>0</ContextId><ByteSize>11730944</ByteSize><Symbol><Name>Global_Version.stLibVersion_CNM_AbstractObject</Name><BitSize>288</BitSize><BaseType GUID="{6F5942ED-BFA1-497D-8225-23C6DAAD0A09}">ST_LibVersion</BaseType><Default><SubItem><Name>.iMajor</Name><Value>3</Value></SubItem><SubItem><Name>.iMinor</Name><Value>0</Value></SubItem><SubItem><Name>.iBuild</Name><Value>0</Value></SubItem><SubItem><Name>.iRevision</Name><Value>13</Value></SubItem><SubItem><Name>.nFlags</Name><Value>0</Value></SubItem><SubItem><Name>.sVersion</Name><String>3.0.0.13</String></SubItem></Default><Properties><Property><Name>const_non_replaced</Name></Property><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3072000</BitOffs></Symbol><Symbol><Name>DefaultSteps.STEP</Name><Comment><![CDATA[ default steps for ``CASE OF`` based state machines ]]></Comment><BitSize>192</BitSize><BaseType Namespace="CNM_ReturnTypes">CommonSteps</BaseType><Properties><Property><Name>suppress_warning_0</Name><Value>C0228</Value></Property><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3072288</BitOffs></Symbol><Symbol><Name>Global_Version.stLibVersion_CNM_ReturnTypes</Name><BitSize>288</BitSize><BaseType GUID="{6F5942ED-BFA1-497D-8225-23C6DAAD0A09}">ST_LibVersion</BaseType><Default><SubItem><Name>.iMajor</Name><Value>5</Value></SubItem><SubItem><Name>.iMinor</Name><Value>0</Value></SubItem><SubItem><Name>.iBuild</Name><Value>0</Value></SubItem><SubItem><Name>.iRevision</Name><Value>0</Value></SubItem><SubItem><Name>.nFlags</Name><Value>0</Value></SubItem><SubItem><Name>.sVersion</Name><String>5.0.0.0</String></SubItem></Default><Properties><Property><Name>const_non_replaced</Name></Property><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3072480</BitOffs></Symbol><Symbol><Name>Global_Version.stLibVersion_Tc2_System</Name><BitSize>288</BitSize><BaseType GUID="{6F5942ED-BFA1-497D-8225-23C6DAAD0A09}">ST_LibVersion</BaseType><Default><SubItem><Name>.iMajor</Name><Value>3</Value></SubItem><SubItem><Name>.iMinor</Name><Value>6</Value></SubItem><SubItem><Name>.iBuild</Name><Value>4</Value></SubItem><SubItem><Name>.iRevision</Name><Value>0</Value></SubItem><SubItem><Name>.nFlags</Name><Value>1</Value></SubItem><SubItem><Name>.sVersion</Name><String>3.6.4.0</String></SubItem></Default><Properties><Property><Name>const_non_replaced</Name></Property><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3072768</BitOffs></Symbol><Symbol><Name>Global_Variables.AMSPORT_LOGGER</Name><Comment><![CDATA[ Logger ]]></Comment><BitSize>16</BitSize><BaseType>UINT</BaseType><Default><Value>100</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073056</BitOffs></Symbol><Symbol><Name>Global_Variables.AMSPORT_EVENTLOG</Name><Comment><![CDATA[ Event logger ]]></Comment><BitSize>16</BitSize><BaseType>UINT</BaseType><Default><Value>110</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073072</BitOffs></Symbol><Symbol><Name>Global_Variables.AMSPORT_R0_RTIME</Name><Comment><![CDATA[ R0 Real time ]]></Comment><BitSize>16</BitSize><BaseType>UINT</BaseType><Default><Value>200</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073088</BitOffs></Symbol><Symbol><Name>Global_Variables.AMSPORT_R0_IO</Name><Comment><![CDATA[ I/O Driver ]]></Comment><BitSize>16</BitSize><BaseType>UINT</BaseType><Default><Value>300</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073104</BitOffs></Symbol><Symbol><Name>Global_Variables.AMSPORT_R0_NC</Name><BitSize>16</BitSize><BaseType>UINT</BaseType><Default><Value>500</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073120</BitOffs></Symbol><Symbol><Name>Global_Variables.AMSPORT_R0_NCSAF</Name><BitSize>16</BitSize><BaseType>UINT</BaseType><Default><Value>501</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073136</BitOffs></Symbol><Symbol><Name>Global_Variables.AMSPORT_R0_NCSVB</Name><BitSize>16</BitSize><BaseType>UINT</BaseType><Default><Value>511</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073152</BitOffs></Symbol><Symbol><Name>Global_Variables.AMSPORT_R0_ISG</Name><BitSize>16</BitSize><BaseType>UINT</BaseType><Default><Value>550</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073168</BitOffs></Symbol><Symbol><Name>Global_Variables.AMSPORT_R0_CNC</Name><BitSize>16</BitSize><BaseType>UINT</BaseType><Default><Value>600</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073184</BitOffs></Symbol><Symbol><Name>Global_Variables.AMSPORT_R0_LINE</Name><BitSize>16</BitSize><BaseType>UINT</BaseType><Default><Value>700</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073200</BitOffs></Symbol><Symbol><Name>Global_Variables.AMSPORT_R0_PLC</Name><BitSize>16</BitSize><BaseType>UINT</BaseType><Default><Value>800</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073216</BitOffs></Symbol><Symbol><Name>Global_Variables.AMSPORT_R0_PLC_RTS1</Name><Comment><![CDATA[ TwinCAT v2.xx first PLC runtime system ]]></Comment><BitSize>16</BitSize><BaseType>UINT</BaseType><Default><Value>801</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073232</BitOffs></Symbol><Symbol><Name>Global_Variables.AMSPORT_R0_PLC_RTS2</Name><Comment><![CDATA[ TwinCAT v2.xx second PLC runtime system ]]></Comment><BitSize>16</BitSize><BaseType>UINT</BaseType><Default><Value>811</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073248</BitOffs></Symbol><Symbol><Name>Global_Variables.AMSPORT_R0_PLC_RTS3</Name><Comment><![CDATA[ TwinCAT v2.xx third PLC runtime system ]]></Comment><BitSize>16</BitSize><BaseType>UINT</BaseType><Default><Value>821</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073264</BitOffs></Symbol><Symbol><Name>Global_Variables.AMSPORT_R0_PLC_RTS4</Name><Comment><![CDATA[ TwinCAT v2.xx fourth PLC runtime system ]]></Comment><BitSize>16</BitSize><BaseType>UINT</BaseType><Default><Value>831</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073280</BitOffs></Symbol><Symbol><Name>Global_Variables.AMSPORT_R0_CAM</Name><BitSize>16</BitSize><BaseType>UINT</BaseType><Default><Value>900</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073296</BitOffs></Symbol><Symbol><Name>Global_Variables.AMSPORT_R0_CAMTOOL</Name><Comment><![CDATA[ Camming tool ]]></Comment><BitSize>16</BitSize><BaseType>UINT</BaseType><Default><Value>950</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073312</BitOffs></Symbol><Symbol><Name>Global_Variables.AMSPORT_R3_SYSSERV</Name><Comment><![CDATA[ TwinCAT System Service ]]></Comment><BitSize>16</BitSize><BaseType>UINT</BaseType><Default><Value>10000</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073328</BitOffs></Symbol><Symbol><Name>Global_Variables.AMSPORT_R3_SCOPESERVER</Name><Comment><![CDATA[ TwinCAT Scope Server ]]></Comment><BitSize>16</BitSize><BaseType>UINT</BaseType><Default><Value>14001</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073344</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSSTATE_INVALID</Name><Comment><![CDATA[ Invalid ADS state ]]></Comment><BitSize>16</BitSize><BaseType>UINT</BaseType><Default><Value>0</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073360</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSSTATE_IDLE</Name><BitSize>16</BitSize><BaseType>UINT</BaseType><Default><Value>1</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073376</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSSTATE_RESET</Name><BitSize>16</BitSize><BaseType>UINT</BaseType><Default><Value>2</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073392</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSSTATE_INIT</Name><BitSize>16</BitSize><BaseType>UINT</BaseType><Default><Value>3</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073408</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSSTATE_START</Name><BitSize>16</BitSize><BaseType>UINT</BaseType><Default><Value>4</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073424</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSSTATE_RUN</Name><BitSize>16</BitSize><BaseType>UINT</BaseType><Default><Value>5</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073440</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSSTATE_STOP</Name><BitSize>16</BitSize><BaseType>UINT</BaseType><Default><Value>6</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073456</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSSTATE_SAVECFG</Name><BitSize>16</BitSize><BaseType>UINT</BaseType><Default><Value>7</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073472</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSSTATE_LOADCFG</Name><BitSize>16</BitSize><BaseType>UINT</BaseType><Default><Value>8</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073488</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSSTATE_POWERFAILURE</Name><BitSize>16</BitSize><BaseType>UINT</BaseType><Default><Value>9</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073504</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSSTATE_POWERGOOD</Name><BitSize>16</BitSize><BaseType>UINT</BaseType><Default><Value>10</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073520</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSSTATE_ERROR</Name><BitSize>16</BitSize><BaseType>UINT</BaseType><Default><Value>11</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073536</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSSTATE_SHUTDOWN</Name><BitSize>16</BitSize><BaseType>UINT</BaseType><Default><Value>12</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073552</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSSTATE_SUSPEND</Name><BitSize>16</BitSize><BaseType>UINT</BaseType><Default><Value>13</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073568</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSSTATE_RESUME</Name><BitSize>16</BitSize><BaseType>UINT</BaseType><Default><Value>14</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073584</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSSTATE_CONFIG</Name><Comment><![CDATA[ System is in config mode ]]></Comment><BitSize>16</BitSize><BaseType>UINT</BaseType><Default><Value>15</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073600</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSSTATE_RECONFIG</Name><Comment><![CDATA[ System should restart in config mode ]]></Comment><BitSize>16</BitSize><BaseType>UINT</BaseType><Default><Value>16</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073616</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSSTATE_STOPPING</Name><BitSize>16</BitSize><BaseType>UINT</BaseType><Default><Value>17</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073632</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSSTATE_INCOMPATIBLE</Name><BitSize>16</BitSize><BaseType>UINT</BaseType><Default><Value>18</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073648</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSSTATE_EXCEPTION</Name><BitSize>16</BitSize><BaseType>UINT</BaseType><Default><Value>19</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073664</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSSTATE_MAXSTATES</Name><Comment><![CDATA[ Max. number of available ads states ]]></Comment><BitSize>16</BitSize><BaseType>UINT</BaseType><Default><Value>20</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073680</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSIGRP_SYMTAB</Name><Comment><![CDATA[ Symbol table ]]></Comment><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>61440</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073696</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSIGRP_SYMNAME</Name><Comment><![CDATA[ Symbol name ]]></Comment><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>61441</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073728</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSIGRP_SYMVAL</Name><Comment><![CDATA[ Symbol value ]]></Comment><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>61442</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073760</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSIGRP_SYM_HNDBYNAME</Name><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>61443</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073792</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSIGRP_SYM_VALBYNAME</Name><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>61444</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073824</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSIGRP_SYM_VALBYHND</Name><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>61445</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073856</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSIGRP_SYM_RELEASEHND</Name><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>61446</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073888</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSIGRP_SYM_INFOBYNAME</Name><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>61447</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073920</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSIGRP_SYM_VERSION</Name><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>61448</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073952</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSIGRP_SYM_INFOBYNAMEEX</Name><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>61449</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3073984</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSIGRP_SYM_DOWNLOAD</Name><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>61450</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3074016</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSIGRP_SYM_UPLOAD</Name><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>61451</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3074048</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSIGRP_SYM_UPLOADINFO</Name><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>61452</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3074080</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSIGRP_SYMNOTE</Name><Comment><![CDATA[ Notification of named handle ]]></Comment><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>61456</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3074112</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSIGRP_IOIMAGE_RWIB</Name><Comment><![CDATA[ Read/write input BYTE(S) ]]></Comment><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>61472</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3074144</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSIGRP_IOIMAGE_RWIX</Name><Comment><![CDATA[ Read/write input bit ]]></Comment><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>61473</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3074176</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSIGRP_IOIMAGE_RISIZE</Name><Comment><![CDATA[ Read input size (in BYTE) ]]></Comment><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>61477</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3074208</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSIGRP_IOIMAGE_RWOB</Name><Comment><![CDATA[ Read/write output BYTE(S) ]]></Comment><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>61488</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3074240</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSIGRP_IOIMAGE_RWOX</Name><Comment><![CDATA[ Read/write output bit ]]></Comment><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>61489</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3074272</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSIGRP_IOIMAGE_ROSIZE</Name><Comment><![CDATA[ Read/write output bit ]]></Comment><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>61493</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3074304</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSIGRP_IOIMAGE_CLEARI</Name><Comment><![CDATA[ Write inputs TO null ]]></Comment><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>61504</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3074336</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSIGRP_IOIMAGE_CLEARO</Name><Comment><![CDATA[ Write outputs TO null ]]></Comment><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>61520</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3074368</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSIGRP_IOIMAGE_RWIOB</Name><Comment><![CDATA[ Read input AND write output BYTE(S)  ADS-READWRITE ]]></Comment><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>61536</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3074400</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSIGRP_DEVICE_DATA</Name><Comment><![CDATA[ State, name, etc... ]]></Comment><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>61696</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3074432</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSIOFFS_DEVDATA_ADSSTATE</Name><Comment><![CDATA[ Ads state OF device ]]></Comment><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>0</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3074464</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSIOFFS_DEVDATA_DEVSTATE</Name><Comment><![CDATA[ Device state ]]></Comment><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>2</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3074496</BitOffs></Symbol><Symbol><Name>Global_Variables.SYSTEMSERVICE_OPENCREATE</Name><Comment><![CDATA[ Open and if not existing create ]]></Comment><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>100</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3074528</BitOffs></Symbol><Symbol><Name>Global_Variables.SYSTEMSERVICE_OPENREAD</Name><Comment><![CDATA[ Open existing for read access ]]></Comment><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>101</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3074560</BitOffs></Symbol><Symbol><Name>Global_Variables.SYSTEMSERVICE_OPENWRITE</Name><Comment><![CDATA[ Open existing for write access ]]></Comment><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>102</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3074592</BitOffs></Symbol><Symbol><Name>Global_Variables.SYSTEMSERVICE_CREATEFILE</Name><Comment><![CDATA[ Create ]]></Comment><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>110</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3074624</BitOffs></Symbol><Symbol><Name>Global_Variables.SYSTEMSERVICE_CLOSEHANDLE</Name><Comment><![CDATA[ Close ]]></Comment><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>111</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3074656</BitOffs></Symbol><Symbol><Name>Global_Variables.SYSTEMSERVICE_FOPEN</Name><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>120</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3074688</BitOffs></Symbol><Symbol><Name>Global_Variables.SYSTEMSERVICE_FCLOSE</Name><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>121</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3074720</BitOffs></Symbol><Symbol><Name>Global_Variables.SYSTEMSERVICE_FREAD</Name><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>122</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3074752</BitOffs></Symbol><Symbol><Name>Global_Variables.SYSTEMSERVICE_FWRITE</Name><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>123</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3074784</BitOffs></Symbol><Symbol><Name>Global_Variables.SYSTEMSERVICE_FSEEK</Name><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>124</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3074816</BitOffs></Symbol><Symbol><Name>Global_Variables.SYSTEMSERVICE_FTELL</Name><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>125</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3074848</BitOffs></Symbol><Symbol><Name>Global_Variables.SYSTEMSERVICE_FGETS</Name><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>126</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3074880</BitOffs></Symbol><Symbol><Name>Global_Variables.SYSTEMSERVICE_FPUTS</Name><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>127</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3074912</BitOffs></Symbol><Symbol><Name>Global_Variables.SYSTEMSERVICE_FSCANF</Name><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>128</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3074944</BitOffs></Symbol><Symbol><Name>Global_Variables.SYSTEMSERVICE_FPRINTF</Name><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>129</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3074976</BitOffs></Symbol><Symbol><Name>Global_Variables.SYSTEMSERVICE_FEOF</Name><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>130</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3075008</BitOffs></Symbol><Symbol><Name>Global_Variables.SYSTEMSERVICE_FDELETE</Name><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>131</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3075040</BitOffs></Symbol><Symbol><Name>Global_Variables.SYSTEMSERVICE_FRENAME</Name><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>132</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3075072</BitOffs></Symbol><Symbol><Name>Global_Variables.SYSTEMSERVICE_MKDIR</Name><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>138</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3075104</BitOffs></Symbol><Symbol><Name>Global_Variables.SYSTEMSERVICE_RMDIR</Name><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>139</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3075136</BitOffs></Symbol><Symbol><Name>Global_Variables.SYSTEMSERVICE_REG_HKEYLOCALMACHINE</Name><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>200</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3075168</BitOffs></Symbol><Symbol><Name>Global_Variables.SYSTEMSERVICE_SENDEMAIL</Name><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>300</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3075200</BitOffs></Symbol><Symbol><Name>Global_Variables.SYSTEMSERVICE_TIMESERVICES</Name><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>400</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3075232</BitOffs></Symbol><Symbol><Name>Global_Variables.SYSTEMSERVICE_STARTPROCESS</Name><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>500</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3075264</BitOffs></Symbol><Symbol><Name>Global_Variables.SYSTEMSERVICE_CHANGENETID</Name><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>600</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3075296</BitOffs></Symbol><Symbol><Name>Global_Variables.TIMESERVICE_DATEANDTIME</Name><Comment><![CDATA[ Date/time ]]></Comment><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>1</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3075328</BitOffs></Symbol><Symbol><Name>Global_Variables.TIMESERVICE_SYSTEMTIMES</Name><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>2</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3075360</BitOffs></Symbol><Symbol><Name>Global_Variables.TIMESERVICE_RTCTIMEDIFF</Name><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>3</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3075392</BitOffs></Symbol><Symbol><Name>Global_Variables.TIMESERVICE_ADJUSTTIMETORTC</Name><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>4</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3075424</BitOffs></Symbol><Symbol><Name>Global_Variables.TIMESERVICE_TIMEZONINFORMATION</Name><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>6</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3075456</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSLOG_MSGTYPE_HINT</Name><Comment><![CDATA[ Hint icon ]]></Comment><BitSize>32</BitSize><BaseType>DWORD</BaseType><Default><Value>1</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3075488</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSLOG_MSGTYPE_WARN</Name><Comment><![CDATA[ Warning icon ]]></Comment><BitSize>32</BitSize><BaseType>DWORD</BaseType><Default><Value>2</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3075520</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSLOG_MSGTYPE_ERROR</Name><Comment><![CDATA[ Error icon ]]></Comment><BitSize>32</BitSize><BaseType>DWORD</BaseType><Default><Value>4</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3075552</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSLOG_MSGTYPE_LOG</Name><Comment><![CDATA[ Write message to log file ]]></Comment><BitSize>32</BitSize><BaseType>DWORD</BaseType><Default><Value>16</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3075584</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSLOG_MSGTYPE_MSGBOX</Name><Comment><![CDATA[ View message in message box ]]></Comment><BitSize>32</BitSize><BaseType>DWORD</BaseType><Default><Value>32</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3075616</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSLOG_MSGTYPE_RESOURCE</Name><BitSize>32</BitSize><BaseType>DWORD</BaseType><Default><Value>64</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3075648</BitOffs></Symbol><Symbol><Name>Global_Variables.ADSLOG_MSGTYPE_STRING</Name><BitSize>32</BitSize><BaseType>DWORD</BaseType><Default><Value>128</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3075680</BitOffs></Symbol><Symbol><Name>Global_Variables.BOOTDATAFLAGS_RETAIN_LOADED</Name><Comment><![CDATA[ Retain data loaded ]]></Comment><BitSize>8</BitSize><BaseType>BYTE</BaseType><Default><Value>1</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3075712</BitOffs></Symbol><Symbol><Name>Global_Variables.BOOTDATAFLAGS_RETAIN_INVALID</Name><Comment><![CDATA[ Retain data is invalid ]]></Comment><BitSize>8</BitSize><BaseType>BYTE</BaseType><Default><Value>2</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3075720</BitOffs></Symbol><Symbol><Name>Global_Variables.BOOTDATAFLAGS_RETAIN_REQUESTED</Name><BitSize>8</BitSize><BaseType>BYTE</BaseType><Default><Value>4</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3075728</BitOffs></Symbol><Symbol><Name>Global_Variables.BOOTDATAFLAGS_PERSISTENT_LOADED</Name><Comment><![CDATA[ Persistent data loaded ]]></Comment><BitSize>8</BitSize><BaseType>BYTE</BaseType><Default><Value>16</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3075736</BitOffs></Symbol><Symbol><Name>Global_Variables.BOOTDATAFLAGS_PERSISTENT_INVALID</Name><Comment><![CDATA[ Persistent data is invalid ]]></Comment><BitSize>8</BitSize><BaseType>BYTE</BaseType><Default><Value>32</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3075744</BitOffs></Symbol><Symbol><Name>Global_Variables.SYSTEMSTATEFLAGS_BSOD</Name><Comment><![CDATA[ Blue screen of death ]]></Comment><BitSize>8</BitSize><BaseType>BYTE</BaseType><Default><Value>1</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3075752</BitOffs></Symbol><Symbol><Name>Global_Variables.SYSTEMSTATEFLAGS_RTVIOLATION</Name><Comment><![CDATA[ Realtime violation - latency time ]]></Comment><BitSize>8</BitSize><BaseType>BYTE</BaseType><Default><Value>2</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3075760</BitOffs></Symbol><Symbol><Name>Global_Variables.nWatchdogTime</Name><Comment><![CDATA[ Watchdog time. Depending of g_WatchdogConfig : seconds or minutes ]]></Comment><BitSize>8</BitSize><BaseType>BYTE</BaseType><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3075768</BitOffs></Symbol><Symbol><Name>Global_Variables.FOPEN_MODEREAD</Name><Comment><![CDATA["r": Opens for reading. If the file does not exist or cannot be found, the call fails.]]></Comment><BitSize>32</BitSize><BaseType>DWORD</BaseType><Default><Value>1</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3075776</BitOffs></Symbol><Symbol><Name>Global_Variables.FOPEN_MODEWRITE</Name><Comment><![CDATA["w": Opens an empty file for writing. If the given file exists, its contents are destroyed.]]></Comment><BitSize>32</BitSize><BaseType>DWORD</BaseType><Default><Value>2</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3075808</BitOffs></Symbol><Symbol><Name>Global_Variables.FOPEN_MODEAPPEND</Name><Comment><![CDATA["a": Opens for writing at the end of the file (appending) without removing the EOF marker before writing new data to the file; creates the file first if it doesnot exist.]]></Comment><BitSize>32</BitSize><BaseType>DWORD</BaseType><Default><Value>4</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3075840</BitOffs></Symbol><Symbol><Name>Global_Variables.FOPEN_MODEPLUS</Name><Comment><![CDATA["+": Opens for reading and writing]]></Comment><BitSize>32</BitSize><BaseType>DWORD</BaseType><Default><Value>8</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3075872</BitOffs></Symbol><Symbol><Name>Global_Variables.FOPEN_MODEBINARY</Name><Comment><![CDATA["b": Open in binary (untranslated) mode.]]></Comment><BitSize>32</BitSize><BaseType>DWORD</BaseType><Default><Value>16</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3075904</BitOffs></Symbol><Symbol><Name>Global_Variables.FOPEN_MODETEXT</Name><Comment><![CDATA["t": Open in text (translated) mode.]]></Comment><BitSize>32</BitSize><BaseType>DWORD</BaseType><Default><Value>32</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3075936</BitOffs></Symbol><Symbol><Name>Global_Variables.TCEVENTFLAG_PRIOCLASS</Name><Comment><![CDATA[ Event class/priority	through textformatter]]></Comment><BitSize>16</BitSize><BaseType>WORD</BaseType><Default><Value>16</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3076192</BitOffs></Symbol><Symbol><Name>Global_Variables.TCEVENTFLAG_FMTSELF</Name><Comment><![CDATA[ Format in message ]]></Comment><BitSize>16</BitSize><BaseType>WORD</BaseType><Default><Value>32</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3076208</BitOffs></Symbol><Symbol><Name>Global_Variables.TCEVENTFLAG_LOG</Name><Comment><![CDATA[ Write to log file ]]></Comment><BitSize>16</BitSize><BaseType>WORD</BaseType><Default><Value>64</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3076224</BitOffs></Symbol><Symbol><Name>Global_Variables.TCEVENTFLAG_MSGBOX</Name><Comment><![CDATA[ Display message box ]]></Comment><BitSize>16</BitSize><BaseType>WORD</BaseType><Default><Value>128</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3076240</BitOffs></Symbol><Symbol><Name>Global_Variables.TCEVENTFLAG_SRCID</Name><Comment><![CDATA[ Src id instead of source name ]]></Comment><BitSize>16</BitSize><BaseType>WORD</BaseType><Default><Value>256</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3076256</BitOffs></Symbol><Symbol><Name>Global_Variables.TCEVENTFLAG_AUTOFMTALL</Name><BitSize>16</BitSize><BaseType>WORD</BaseType><Default><Value>4096</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3076272</BitOffs></Symbol><Symbol><Name>Global_Variables.TCEVENTSTATE_INVALID</Name><Comment><![CDATA[ Event object is not initialized ]]></Comment><BitSize>16</BitSize><BaseType>WORD</BaseType><Default><Value>0</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3076288</BitOffs></Symbol><Symbol><Name>Global_Variables.TCEVENTSTATE_SIGNALED</Name><Comment><![CDATA[ Event object is in a signaled state ]]></Comment><BitSize>16</BitSize><BaseType>WORD</BaseType><Default><Value>1</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3076304</BitOffs></Symbol><Symbol><Name>Global_Variables.TCEVENTSTATE_RESET</Name><Comment><![CDATA[ Event object is in a reset state ]]></Comment><BitSize>16</BitSize><BaseType>WORD</BaseType><Default><Value>2</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3076320</BitOffs></Symbol><Symbol><Name>Global_Variables.TCEVENTSTATE_CONFIRMED</Name><Comment><![CDATA[ Event object is confirmed but not reset ]]></Comment><BitSize>16</BitSize><BaseType>WORD</BaseType><Default><Value>16</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3076336</BitOffs></Symbol><Symbol><Name>Global_Variables.TCEVENTSTATE_RESETCON</Name><Comment><![CDATA[ Event object is confirmed and reset ]]></Comment><BitSize>16</BitSize><BaseType>WORD</BaseType><Default><Value>18</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3076352</BitOffs></Symbol><Symbol><Name>Global_Variables.TCEVENT_SRCNAMESIZE</Name><BitSize>16</BitSize><BaseType>INT</BaseType><Default><Value>15</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3076368</BitOffs></Symbol><Symbol><Name>Global_Variables.TCEVENT_FMTPRGSIZE</Name><BitSize>16</BitSize><BaseType>INT</BaseType><Default><Value>31</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3076384</BitOffs></Symbol><Symbol><Name>Global_Variables.eWatchdogConfig</Name><BitSize>16</BitSize><BaseType Namespace="Tc2_System">E_WATCHDOG_TIME_CONFIG</BaseType><Default><EnumText>E_WATCHDOG_TIME_CONFIG.eWATCHDOG_TIME_DISABLED</EnumText></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3076400</BitOffs></Symbol><Symbol><Name>Global_Variables.PI</Name><BitSize>64</BitSize><BaseType>LREAL</BaseType><Default><Value>3.14159265358979</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3076416</BitOffs></Symbol><Symbol><Name>Global_Variables.DEFAULT_ADS_TIMEOUT</Name><Comment><![CDATA[ Default ADS timeout value ]]></Comment><BitSize>32</BitSize><BaseType>TIME</BaseType><Default><DateTime>5000</DateTime></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3076480</BitOffs></Symbol><Symbol><Name>Global_Variables.MAX_STRING_LENGTH</Name><Comment><![CDATA[ Max. length of T_MaxString (inclusive null delimiter) ]]></Comment><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>255</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3076512</BitOffs></Symbol><Symbol><Name>Global_Version.stLibVersion_Tc2_Standard</Name><BitSize>288</BitSize><BaseType GUID="{6F5942ED-BFA1-497D-8225-23C6DAAD0A09}">ST_LibVersion</BaseType><Default><SubItem><Name>.iMajor</Name><Value>3</Value></SubItem><SubItem><Name>.iMinor</Name><Value>4</Value></SubItem><SubItem><Name>.iBuild</Name><Value>5</Value></SubItem><SubItem><Name>.iRevision</Name><Value>0</Value></SubItem><SubItem><Name>.nFlags</Name><Value>1</Value></SubItem><SubItem><Name>.sVersion</Name><String>3.4.5.0</String></SubItem></Default><Properties><Property><Name>const_non_replaced</Name></Property><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3077088</BitOffs></Symbol><Symbol><Name>Global_Version.stLibVersion_Tc3_Module</Name><BitSize>288</BitSize><BaseType GUID="{6F5942ED-BFA1-497D-8225-23C6DAAD0A09}">ST_LibVersion</BaseType><Default><SubItem><Name>.iMajor</Name><Value>3</Value></SubItem><SubItem><Name>.iMinor</Name><Value>4</Value></SubItem><SubItem><Name>.iBuild</Name><Value>5</Value></SubItem><SubItem><Name>.iRevision</Name><Value>0</Value></SubItem><SubItem><Name>.nFlags</Name><Value>1</Value></SubItem><SubItem><Name>.sVersion</Name><String>3.4.5.0</String></SubItem></Default><Properties><Property><Name>const_non_replaced</Name></Property><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3077376</BitOffs></Symbol><Symbol><Name>Global_Version.stLibVersion_CNM_AoC_Lib</Name><BitSize>288</BitSize><BaseType GUID="{6F5942ED-BFA1-497D-8225-23C6DAAD0A09}">ST_LibVersion</BaseType><Default><SubItem><Name>.iMajor</Name><Value>0</Value></SubItem><SubItem><Name>.iMinor</Name><Value>0</Value></SubItem><SubItem><Name>.iBuild</Name><Value>0</Value></SubItem><SubItem><Name>.iRevision</Name><Value>0</Value></SubItem><SubItem><Name>.nFlags</Name><Value>0</Value></SubItem><SubItem><Name>.sVersion</Name><String>0.0.0.0</String></SubItem></Default><Properties><Property><Name>const_non_replaced</Name></Property><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3078016</BitOffs></Symbol><Symbol><Name>Global_Version.stLibVersion_CNM_AssertionInterfaceLib</Name><BitSize>288</BitSize><BaseType GUID="{6F5942ED-BFA1-497D-8225-23C6DAAD0A09}">ST_LibVersion</BaseType><Default><SubItem><Name>.iMajor</Name><Value>6</Value></SubItem><SubItem><Name>.iMinor</Name><Value>0</Value></SubItem><SubItem><Name>.iBuild</Name><Value>0</Value></SubItem><SubItem><Name>.iRevision</Name><Value>1</Value></SubItem><SubItem><Name>.nFlags</Name><Value>0</Value></SubItem><SubItem><Name>.sVersion</Name><String>6.0.0.1</String></SubItem></Default><Properties><Property><Name>const_non_replaced</Name></Property><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3078304</BitOffs></Symbol><Symbol><Name>HangulCommonConstants.S_BASE</Name><Comment><![CDATA[ start of hangul syllables unicode block ]]></Comment><BitSize>32</BitSize><BaseType Namespace="CNM_UnicodeUtilities">UnicodeCodePoint</BaseType><Default><Value>44032</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3078592</BitOffs></Symbol><Symbol><Name>HangulCommonConstants.L_BASE</Name><Comment><![CDATA[ start of jamo choseong unicdoe block ]]></Comment><BitSize>32</BitSize><BaseType Namespace="CNM_UnicodeUtilities">UnicodeCodePoint</BaseType><Default><Value>4352</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3078624</BitOffs></Symbol><Symbol><Name>HangulCommonConstants.V_BASE</Name><Comment><![CDATA[ start of jamo jungseong unicode block (without 1160;HANGUL JUNGSEONG FILLER) ]]></Comment><BitSize>32</BitSize><BaseType Namespace="CNM_UnicodeUtilities">UnicodeCodePoint</BaseType><Default><Value>4449</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3078656</BitOffs></Symbol><Symbol><Name>HangulCommonConstants.T_BASE</Name><Comment><![CDATA[ one less than the beginning of the range of trailing consonants, which starts at U+11A8 ]]></Comment><BitSize>32</BitSize><BaseType Namespace="CNM_UnicodeUtilities">UnicodeCodePoint</BaseType><Default><Value>4519</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3078688</BitOffs></Symbol><Symbol><Name>HangulCommonConstants.L_COUNT</Name><BitSize>32</BitSize><BaseType>DWORD</BaseType><Default><Value>19</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3078720</BitOffs></Symbol><Symbol><Name>HangulCommonConstants.V_COUNT</Name><BitSize>32</BitSize><BaseType>DWORD</BaseType><Default><Value>21</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3078752</BitOffs></Symbol><Symbol><Name>HangulCommonConstants.T_COUNT</Name><Comment><![CDATA[ one more than the number of trailing consonants relevant 
       to the decomposition algorithm: (11C2 - 11A8 + 1) + 1 ]]></Comment><BitSize>32</BitSize><BaseType>DWORD</BaseType><Default><Value>28</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3078784</BitOffs></Symbol><Symbol><Name>HangulCommonConstants.N_COUNT</Name><Comment><![CDATA[ 588, the number of precomposed Hangul syllables starting with the same leading consonant, 
       counting both the LV_Syllables and the LVT_Syllables for each possible trailing consonan ]]></Comment><BitSize>32</BitSize><BaseType>DWORD</BaseType><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3078816</BitOffs></Symbol><Symbol><Name>HangulCommonConstants.S_COUNT</Name><Comment><![CDATA[ 11172, total number of precomposed Hangul syllables]]></Comment><BitSize>32</BitSize><BaseType>DWORD</BaseType><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3078848</BitOffs></Symbol><Symbol><Name>Global_Version.stLibVersion_CNM_UnicodeUtilities</Name><BitSize>288</BitSize><BaseType GUID="{6F5942ED-BFA1-497D-8225-23C6DAAD0A09}">ST_LibVersion</BaseType><Default><SubItem><Name>.iMajor</Name><Value>1</Value></SubItem><SubItem><Name>.iMinor</Name><Value>0</Value></SubItem><SubItem><Name>.iBuild</Name><Value>0</Value></SubItem><SubItem><Name>.iRevision</Name><Value>0</Value></SubItem><SubItem><Name>.nFlags</Name><Value>0</Value></SubItem><SubItem><Name>.sVersion</Name><String>1.0.0.0</String></SubItem></Default><Properties><Property><Name>const_non_replaced</Name></Property><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3078880</BitOffs></Symbol><Symbol><Name>Global_Version.stLibVersion_Tc2_Utilities</Name><BitSize>288</BitSize><BaseType GUID="{6F5942ED-BFA1-497D-8225-23C6DAAD0A09}">ST_LibVersion</BaseType><Default><SubItem><Name>.iMajor</Name><Value>3</Value></SubItem><SubItem><Name>.iMinor</Name><Value>8</Value></SubItem><SubItem><Name>.iBuild</Name><Value>2</Value></SubItem><SubItem><Name>.iRevision</Name><Value>0</Value></SubItem><SubItem><Name>.nFlags</Name><Value>1</Value></SubItem><SubItem><Name>.sVersion</Name><String>3.8.2.0</String></SubItem></Default><Properties><Property><Name>const_non_replaced</Name></Property><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3079168</BitOffs></Symbol><Symbol><Name>TwinCAT_PreventOnlineChangeGvl.WriteLineIDs</Name><BitSize>8</BitSize><BaseType>BOOL</BaseType><Default><Bool>false</Bool></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3079496</BitOffs></Symbol><Symbol><Name>Global_Version.stLibVersion_CNM_CollectionInterfaces</Name><BitSize>288</BitSize><BaseType GUID="{6F5942ED-BFA1-497D-8225-23C6DAAD0A09}">ST_LibVersion</BaseType><Default><SubItem><Name>.iMajor</Name><Value>17</Value></SubItem><SubItem><Name>.iMinor</Name><Value>0</Value></SubItem><SubItem><Name>.iBuild</Name><Value>0</Value></SubItem><SubItem><Name>.iRevision</Name><Value>3</Value></SubItem><SubItem><Name>.nFlags</Name><Value>0</Value></SubItem><SubItem><Name>.sVersion</Name><String>17.0.0.3</String></SubItem></Default><Properties><Property><Name>const_non_replaced</Name></Property><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3079584</BitOffs></Symbol><Symbol><Name>GVL_Factories.defaultCollectionFactory</Name><BitSize>3584</BitSize><BaseType Namespace="CNM_Collections">CollectionFactory</BaseType><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3079872</BitOffs></Symbol><Symbol><Name>GVL_Factories.applierBuilder</Name><BitSize>9792</BitSize><BaseType Namespace="CNM_Collections">ApplierBuilder</BaseType><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3083456</BitOffs></Symbol><Symbol><Name>Global_Version.stLibVersion_CNM_Collections</Name><BitSize>288</BitSize><BaseType GUID="{6F5942ED-BFA1-497D-8225-23C6DAAD0A09}">ST_LibVersion</BaseType><Default><SubItem><Name>.iMajor</Name><Value>14</Value></SubItem><SubItem><Name>.iMinor</Name><Value>0</Value></SubItem><SubItem><Name>.iBuild</Name><Value>0</Value></SubItem><SubItem><Name>.iRevision</Name><Value>5</Value></SubItem><SubItem><Name>.nFlags</Name><Value>0</Value></SubItem><SubItem><Name>.sVersion</Name><String>14.0.0.5</String></SubItem></Default><Properties><Property><Name>const_non_replaced</Name></Property><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3093248</BitOffs></Symbol><Symbol><Name>Global_Version.stLibVersion_CNM_CycleManager</Name><BitSize>288</BitSize><BaseType GUID="{6F5942ED-BFA1-497D-8225-23C6DAAD0A09}">ST_LibVersion</BaseType><Default><SubItem><Name>.iMajor</Name><Value>1</Value></SubItem><SubItem><Name>.iMinor</Name><Value>0</Value></SubItem><SubItem><Name>.iBuild</Name><Value>0</Value></SubItem><SubItem><Name>.iRevision</Name><Value>0</Value></SubItem><SubItem><Name>.nFlags</Name><Value>0</Value></SubItem><SubItem><Name>.sVersion</Name><String>1.0.0.0</String></SubItem></Default><Properties><Property><Name>const_non_replaced</Name></Property><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3093536</BitOffs></Symbol><Symbol><Name>Global_Version.stLibVersion_CNM_CylceManagerInterfaces</Name><BitSize>288</BitSize><BaseType GUID="{6F5942ED-BFA1-497D-8225-23C6DAAD0A09}">ST_LibVersion</BaseType><Default><SubItem><Name>.iMajor</Name><Value>1</Value></SubItem><SubItem><Name>.iMinor</Name><Value>3</Value></SubItem><SubItem><Name>.iBuild</Name><Value>0</Value></SubItem><SubItem><Name>.iRevision</Name><Value>0</Value></SubItem><SubItem><Name>.nFlags</Name><Value>0</Value></SubItem><SubItem><Name>.sVersion</Name><String>1.3.0.0</String></SubItem></Default><Properties><Property><Name>const_non_replaced</Name></Property><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3093824</BitOffs></Symbol><Symbol><Name>Global_Version.stLibVersion_CNM_MessageInterfaces</Name><BitSize>288</BitSize><BaseType GUID="{6F5942ED-BFA1-497D-8225-23C6DAAD0A09}">ST_LibVersion</BaseType><Default><SubItem><Name>.iMajor</Name><Value>1</Value></SubItem><SubItem><Name>.iMinor</Name><Value>0</Value></SubItem><SubItem><Name>.iBuild</Name><Value>0</Value></SubItem><SubItem><Name>.iRevision</Name><Value>0</Value></SubItem><SubItem><Name>.nFlags</Name><Value>0</Value></SubItem><SubItem><Name>.sVersion</Name><String>1.0.0.0</String></SubItem></Default><Properties><Property><Name>const_non_replaced</Name></Property><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3094112</BitOffs></Symbol><Symbol><Name>Global_Constants.EMPTY_EVENT_CLASS</Name><BitSize>128</BitSize><BaseType GUID="{18071995-0000-0000-0000-000000000021}">GUID</BaseType><Default><SubItem><Name>.Data1</Name><Value>0</Value></SubItem><SubItem><Name>.Data2</Name><Value>0</Value></SubItem><SubItem><Name>.Data3</Name><Value>0</Value></SubItem><SubItem><Name>.Data4[0]</Name><Value>0</Value></SubItem><SubItem><Name>.Data4[1]</Name><Value>0</Value></SubItem><SubItem><Name>.Data4[2]</Name><Value>0</Value></SubItem><SubItem><Name>.Data4[3]</Name><Value>0</Value></SubItem><SubItem><Name>.Data4[4]</Name><Value>0</Value></SubItem><SubItem><Name>.Data4[5]</Name><Value>0</Value></SubItem><SubItem><Name>.Data4[6]</Name><Value>0</Value></SubItem><SubItem><Name>.Data4[7]</Name><Value>0</Value></SubItem></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3094400</BitOffs></Symbol><Symbol><Name>Global_Constants.EMPTY_EVENT_ID</Name><BitSize>32</BitSize><BaseType>UDINT</BaseType><Default><Value>0</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3094528</BitOffs></Symbol><Symbol><Name>Global_Constants.EMPTY_SEVERITY</Name><BitSize>16</BitSize><BaseType GUID="{B57D3F4A-0836-49B0-81C3-BED5F4817EC9}">TcEventSeverity</BaseType><Default><EnumText>TcEventSeverity.Verbose</EnumText></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3094560</BitOffs></Symbol><Symbol><Name>TwinCAT_PreventOnlineChangeGvl.PlcProfilerActive</Name><BitSize>8</BitSize><BaseType>BOOL</BaseType><Default><Bool>false</Bool></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3094576</BitOffs></Symbol><Symbol><Name>Global_Constants.SUCCESS_EVENT</Name><BitSize>192</BitSize><BaseType GUID="{6925E8D1-EDCA-47DD-B80C-A6329A85D63D}">TcEventEntry</BaseType><Default><SubItem><Name>.uuidEventClass.Data1</Name><Value>0</Value></SubItem><SubItem><Name>.uuidEventClass.Data2</Name><Value>0</Value></SubItem><SubItem><Name>.uuidEventClass.Data3</Name><Value>0</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[0]</Name><Value>0</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[1]</Name><Value>0</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[2]</Name><Value>0</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[3]</Name><Value>0</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[4]</Name><Value>0</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[5]</Name><Value>0</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[6]</Name><Value>0</Value></SubItem><SubItem><Name>.uuidEventClass.Data4[7]</Name><Value>0</Value></SubItem><SubItem><Name>.nEventID</Name><Value>0</Value></SubItem><SubItem><Name>.eSeverity</Name><EnumText>Global_Constants.EMPTY_SEVERITY</EnumText></SubItem></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3094592</BitOffs></Symbol><Symbol><Name>GVL.nLangId_OnlineMonitoring</Name><Comment><![CDATA[ language id for online monitoring; English(US)=1033 ; German(Germany)=1031]]></Comment><BitSize>32</BitSize><BaseType>DINT</BaseType><Default><Value>1033</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3094784</BitOffs></Symbol><Symbol><Name>ParameterList.cSourceNameSize</Name><Comment><![CDATA[ size [bytes] for source names (recommended is a size between 128 and 512)]]></Comment><BitSize>32</BitSize><BaseType>UDINT (81..10000)</BaseType><Default><Value>256</Value></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3094816</BitOffs></Symbol><Symbol><Name>Global_Version.stLibVersion_Tc3_EventLogger</Name><BitSize>288</BitSize><BaseType GUID="{6F5942ED-BFA1-497D-8225-23C6DAAD0A09}">ST_LibVersion</BaseType><Default><SubItem><Name>.iMajor</Name><Value>3</Value></SubItem><SubItem><Name>.iMinor</Name><Value>3</Value></SubItem><SubItem><Name>.iBuild</Name><Value>10</Value></SubItem><SubItem><Name>.iRevision</Name><Value>0</Value></SubItem><SubItem><Name>.nFlags</Name><Value>1</Value></SubItem><SubItem><Name>.sVersion</Name><String>3.3.10.0</String></SubItem></Default><Properties><Property><Name>const_non_replaced</Name></Property><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3094848</BitOffs></Symbol><Symbol><Name>Global_Version.stLibVersion_CNM_OpModeHandling</Name><BitSize>288</BitSize><BaseType GUID="{6F5942ED-BFA1-497D-8225-23C6DAAD0A09}">ST_LibVersion</BaseType><Default><SubItem><Name>.iMajor</Name><Value>1</Value></SubItem><SubItem><Name>.iMinor</Name><Value>0</Value></SubItem><SubItem><Name>.iBuild</Name><Value>3</Value></SubItem><SubItem><Name>.iRevision</Name><Value>0</Value></SubItem><SubItem><Name>.nFlags</Name><Value>0</Value></SubItem><SubItem><Name>.sVersion</Name><String>1.0.3.0</String></SubItem></Default><Properties><Property><Name>const_non_replaced</Name></Property><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3095136</BitOffs></Symbol><Symbol><Name>Global_Version.stLibVersion_CNM_ConcreteMessages</Name><BitSize>288</BitSize><BaseType GUID="{6F5942ED-BFA1-497D-8225-23C6DAAD0A09}">ST_LibVersion</BaseType><Default><SubItem><Name>.iMajor</Name><Value>0</Value></SubItem><SubItem><Name>.iMinor</Name><Value>1</Value></SubItem><SubItem><Name>.iBuild</Name><Value>0</Value></SubItem><SubItem><Name>.iRevision</Name><Value>0</Value></SubItem><SubItem><Name>.nFlags</Name><Value>0</Value></SubItem><SubItem><Name>.sVersion</Name><String>0.1.0.0</String></SubItem></Default><Properties><Property><Name>const_non_replaced</Name></Property><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3095424</BitOffs></Symbol><Symbol><Name>Global_Version.stLibVersion_CNM_OpModeHandlingInterfaces</Name><BitSize>288</BitSize><BaseType GUID="{6F5942ED-BFA1-497D-8225-23C6DAAD0A09}">ST_LibVersion</BaseType><Default><SubItem><Name>.iMajor</Name><Value>1</Value></SubItem><SubItem><Name>.iMinor</Name><Value>0</Value></SubItem><SubItem><Name>.iBuild</Name><Value>4</Value></SubItem><SubItem><Name>.iRevision</Name><Value>1</Value></SubItem><SubItem><Name>.nFlags</Name><Value>0</Value></SubItem><SubItem><Name>.sVersion</Name><String>1.0.4.1</String></SubItem></Default><Properties><Property><Name>const_non_replaced</Name></Property><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3095712</BitOffs></Symbol><Symbol><Name>TC_EVENTS.AocError</Name><Comment><![CDATA[ ST_AocError]]></Comment><BitSize>768</BitSize><BaseType Namespace="AoC">ST_AocError</BaseType><Properties><Property><Name>tc_no_symbol</Name><Value>unused</Value></Property><Property><Name>const_non_replaced</Name></Property><Property><Name>Namespace</Name><Value>AoC</Value></Property><Property><Name>suppress_warning_0</Name><Value>C0228</Value></Property><Property><Name>init_on_onlchange</Name></Property><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>3112128</BitOffs></Symbol><Symbol><Name>AbstractListSorter.reverseComparator</Name><BitSize>2624</BitSize><BaseType Namespace="CNM_CollectionInterfaces">reverseComparator</BaseType><Properties><Property><Name>TcVarStatic</Name></Property></Properties><BitOffs>3193024</BitOffs></Symbol><Symbol><Name>AbstractCollection.collectionFactory</Name><BitSize>64</BitSize><BaseType Namespace="CNM_CollectionInterfaces">ICollectionFactory</BaseType><Properties><Property><Name>TcVarStatic</Name></Property></Properties><BitOffs>3216064</BitOffs></Symbol><Symbol><Name>MAIN.day01</Name><BitSize>968128</BitSize><BaseType>Day01Solution</BaseType><BitOffs>3674880</BitOffs></Symbol><Symbol><Name>MAIN.day02</Name><BitSize>960896</BitSize><BaseType>Day02Solution</BaseType><BitOffs>4643008</BitOffs></Symbol><Symbol><Name>MAIN.day03</Name><BitSize>963520</BitSize><BaseType>Day03Solution</BaseType><BitOffs>5603904</BitOffs></Symbol><Symbol><Name>MAIN.day04</Name><BitSize>953664</BitSize><BaseType>Day04Solution</BaseType><BitOffs>6567424</BitOffs></Symbol><Symbol><Name>MAIN.day05</Name><BitSize>1046720</BitSize><BaseType>Day05Solution</BaseType><BitOffs>7521088</BitOffs></Symbol><Symbol><Name>MAIN.day06</Name><BitSize>968960</BitSize><BaseType>Day06Solution</BaseType><BitOffs>8567808</BitOffs></Symbol><Symbol><Name>MAIN.day07</Name><BitSize>960960</BitSize><BaseType>Day07Solution</BaseType><BitOffs>9536768</BitOffs></Symbol><Symbol><Name>TwinCAT_PreventOnlineChangeGvl.PlcProfilerConfigChecksum</Name><BitSize>520</BitSize><BaseType>STRING(64)</BaseType><Default><String /></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>10540992</BitOffs></Symbol><Symbol><Name>LocalIoAddresses.NetId</Name><BitSize>648</BitSize><BaseType>STRING(80)</BaseType><Default><String>10.175.16.49.1.1</String></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>10541536</BitOffs></Symbol><Symbol><Name>LocalIoAddresses.Path</Name><BitSize>648</BitSize><BaseType>STRING(80)</BaseType><Default><String>C:\Users\tdie\Documents\tdie_AOC\2024</String></Default><Properties><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>10542184</BitOffs></Symbol><Symbol><Name>TwinCAT_SystemInfoVarList._TaskPouOid_PlcTask</Name><BitSize>32</BitSize><BaseType GUID="{18071995-0000-0000-0000-00000000000F}">OTCID</BaseType><Properties><Property><Name>no_init</Name></Property><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>10543200</BitOffs></Symbol><Symbol><Name>TwinCAT_SystemInfoVarList._AppInfo</Name><BitSize>2048</BitSize><BaseType GUID="{6096F07B-CE2D-45B4-B170-49A834787FA2}">PlcAppSystemInfo</BaseType><Properties><Property><Name>no_init</Name></Property><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>10543232</BitOffs></Symbol><Symbol><Name>TwinCAT_SystemInfoVarList._TaskInfo</Name><BitSize>1024</BitSize><BaseType GUID="{18990FEE-DAB7-484A-867F-B5550518F883}">PlcTaskSystemInfo</BaseType><ArrayInfo><LBound>1</LBound><Elements>1</Elements></ArrayInfo><Properties><Property><Name>no_init</Name></Property><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>10545280</BitOffs></Symbol><Symbol><Name>TwinCAT_SystemInfoVarList._TaskOid_PlcTask</Name><BitSize>32</BitSize><BaseType GUID="{18071995-0000-0000-0000-00000000000F}">OTCID</BaseType><Properties><Property><Name>no_init</Name></Property><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>10546304</BitOffs></Symbol><Symbol><Name>TwinCAT_SystemInfoVarList.__PlcTask</Name><BitSize>896</BitSize><BaseType>_Implicit_Task_Info</BaseType><Default><SubItem><Name>.dwVersion</Name><Value>2</Value></SubItem></Default><Properties><Property><Name>TcContextName</Name><Value>PlcTask</Value></Property><Property><Name>TcVarGlobal</Name></Property></Properties><BitOffs>10546368</BitOffs></Symbol></DataArea></DataAreas><Deployment /><EventClasses><EventClass><Type GUID="{D00B082B-57D8-4AC8-8507-86F44A26E0F2}" Namespace="AoC">AocError</Type></EventClass></EventClasses><Properties><Property><Name>ApplicationName</Name><Value>Port_851</Value></Property><Property><Name>ChangeDate</Name><Value>2024-12-12T13:04:03</Value></Property><Property><Name>GeneratedCodeSize</Name><Value>1110016</Value></Property><Property><Name>GlobalDataSize</Name><Value>974848</Value></Property><Property><Name>UTF8EncodedStrings</Name><Value>false</Value></Property></Properties></Module></Modules></TcModuleClass>